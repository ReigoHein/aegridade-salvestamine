/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15190.0, "series": [{"data": [[0.0, 306.0], [0.1, 317.0], [0.2, 320.0], [0.3, 323.0], [0.4, 325.0], [0.5, 327.0], [0.6, 329.0], [0.7, 331.0], [0.8, 333.0], [0.9, 335.0], [1.0, 337.0], [1.1, 338.0], [1.2, 340.0], [1.3, 342.0], [1.4, 344.0], [1.5, 346.0], [1.6, 347.0], [1.7, 350.0], [1.8, 353.0], [1.9, 355.0], [2.0, 356.0], [2.1, 358.0], [2.2, 360.0], [2.3, 362.0], [2.4, 363.0], [2.5, 365.0], [2.6, 367.0], [2.7, 368.0], [2.8, 370.0], [2.9, 371.0], [3.0, 372.0], [3.1, 374.0], [3.2, 376.0], [3.3, 378.0], [3.4, 379.0], [3.5, 380.0], [3.6, 381.0], [3.7, 383.0], [3.8, 384.0], [3.9, 385.0], [4.0, 387.0], [4.1, 389.0], [4.2, 390.0], [4.3, 392.0], [4.4, 393.0], [4.5, 395.0], [4.6, 396.0], [4.7, 397.0], [4.8, 398.0], [4.9, 399.0], [5.0, 400.0], [5.1, 401.0], [5.2, 402.0], [5.3, 403.0], [5.4, 404.0], [5.5, 405.0], [5.6, 406.0], [5.7, 407.0], [5.8, 409.0], [5.9, 410.0], [6.0, 411.0], [6.1, 412.0], [6.2, 413.0], [6.3, 415.0], [6.4, 415.0], [6.5, 416.0], [6.6, 417.0], [6.7, 418.0], [6.8, 420.0], [6.9, 421.0], [7.0, 422.0], [7.1, 423.0], [7.2, 424.0], [7.3, 425.0], [7.4, 426.0], [7.5, 427.0], [7.6, 428.0], [7.7, 430.0], [7.8, 431.0], [7.9, 432.0], [8.0, 433.0], [8.1, 435.0], [8.2, 436.0], [8.3, 437.0], [8.4, 438.0], [8.5, 440.0], [8.6, 441.0], [8.7, 443.0], [8.8, 444.0], [8.9, 445.0], [9.0, 447.0], [9.1, 448.0], [9.2, 449.0], [9.3, 451.0], [9.4, 453.0], [9.5, 454.0], [9.6, 456.0], [9.7, 457.0], [9.8, 458.0], [9.9, 459.0], [10.0, 461.0], [10.1, 463.0], [10.2, 464.0], [10.3, 465.0], [10.4, 465.0], [10.5, 467.0], [10.6, 467.0], [10.7, 468.0], [10.8, 469.0], [10.9, 470.0], [11.0, 471.0], [11.1, 472.0], [11.2, 473.0], [11.3, 474.0], [11.4, 475.0], [11.5, 476.0], [11.6, 477.0], [11.7, 478.0], [11.8, 479.0], [11.9, 481.0], [12.0, 482.0], [12.1, 483.0], [12.2, 484.0], [12.3, 485.0], [12.4, 486.0], [12.5, 487.0], [12.6, 488.0], [12.7, 490.0], [12.8, 491.0], [12.9, 492.0], [13.0, 493.0], [13.1, 494.0], [13.2, 495.0], [13.3, 496.0], [13.4, 497.0], [13.5, 498.0], [13.6, 499.0], [13.7, 499.0], [13.8, 500.0], [13.9, 501.0], [14.0, 502.0], [14.1, 503.0], [14.2, 503.0], [14.3, 504.0], [14.4, 505.0], [14.5, 506.0], [14.6, 507.0], [14.7, 508.0], [14.8, 509.0], [14.9, 510.0], [15.0, 511.0], [15.1, 512.0], [15.2, 513.0], [15.3, 514.0], [15.4, 515.0], [15.5, 516.0], [15.6, 518.0], [15.7, 518.0], [15.8, 520.0], [15.9, 521.0], [16.0, 522.0], [16.1, 523.0], [16.2, 524.0], [16.3, 525.0], [16.4, 526.0], [16.5, 527.0], [16.6, 527.0], [16.7, 528.0], [16.8, 529.0], [16.9, 530.0], [17.0, 531.0], [17.1, 532.0], [17.2, 533.0], [17.3, 534.0], [17.4, 535.0], [17.5, 536.0], [17.6, 537.0], [17.7, 539.0], [17.8, 540.0], [17.9, 541.0], [18.0, 543.0], [18.1, 544.0], [18.2, 545.0], [18.3, 546.0], [18.4, 547.0], [18.5, 549.0], [18.6, 550.0], [18.7, 551.0], [18.8, 552.0], [18.9, 553.0], [19.0, 555.0], [19.1, 556.0], [19.2, 558.0], [19.3, 559.0], [19.4, 560.0], [19.5, 561.0], [19.6, 562.0], [19.7, 563.0], [19.8, 564.0], [19.9, 566.0], [20.0, 567.0], [20.1, 568.0], [20.2, 569.0], [20.3, 570.0], [20.4, 571.0], [20.5, 572.0], [20.6, 573.0], [20.7, 574.0], [20.8, 575.0], [20.9, 576.0], [21.0, 577.0], [21.1, 578.0], [21.2, 579.0], [21.3, 581.0], [21.4, 582.0], [21.5, 583.0], [21.6, 584.0], [21.7, 585.0], [21.8, 586.0], [21.9, 587.0], [22.0, 588.0], [22.1, 589.0], [22.2, 590.0], [22.3, 590.0], [22.4, 591.0], [22.5, 593.0], [22.6, 594.0], [22.7, 595.0], [22.8, 596.0], [22.9, 597.0], [23.0, 599.0], [23.1, 600.0], [23.2, 601.0], [23.3, 602.0], [23.4, 603.0], [23.5, 604.0], [23.6, 605.0], [23.7, 606.0], [23.8, 607.0], [23.9, 608.0], [24.0, 609.0], [24.1, 610.0], [24.2, 611.0], [24.3, 611.0], [24.4, 612.0], [24.5, 613.0], [24.6, 615.0], [24.7, 616.0], [24.8, 617.0], [24.9, 618.0], [25.0, 620.0], [25.1, 621.0], [25.2, 623.0], [25.3, 624.0], [25.4, 625.0], [25.5, 627.0], [25.6, 628.0], [25.7, 629.0], [25.8, 630.0], [25.9, 631.0], [26.0, 632.0], [26.1, 634.0], [26.2, 635.0], [26.3, 636.0], [26.4, 637.0], [26.5, 638.0], [26.6, 640.0], [26.7, 641.0], [26.8, 643.0], [26.9, 644.0], [27.0, 646.0], [27.1, 647.0], [27.2, 649.0], [27.3, 650.0], [27.4, 651.0], [27.5, 653.0], [27.6, 655.0], [27.7, 656.0], [27.8, 658.0], [27.9, 659.0], [28.0, 660.0], [28.1, 661.0], [28.2, 663.0], [28.3, 664.0], [28.4, 665.0], [28.5, 666.0], [28.6, 668.0], [28.7, 669.0], [28.8, 670.0], [28.9, 671.0], [29.0, 673.0], [29.1, 674.0], [29.2, 675.0], [29.3, 676.0], [29.4, 677.0], [29.5, 678.0], [29.6, 679.0], [29.7, 681.0], [29.8, 682.0], [29.9, 683.0], [30.0, 684.0], [30.1, 686.0], [30.2, 687.0], [30.3, 688.0], [30.4, 690.0], [30.5, 691.0], [30.6, 692.0], [30.7, 693.0], [30.8, 695.0], [30.9, 696.0], [31.0, 697.0], [31.1, 698.0], [31.2, 699.0], [31.3, 700.0], [31.4, 701.0], [31.5, 702.0], [31.6, 703.0], [31.7, 704.0], [31.8, 705.0], [31.9, 706.0], [32.0, 708.0], [32.1, 709.0], [32.2, 710.0], [32.3, 711.0], [32.4, 712.0], [32.5, 713.0], [32.6, 714.0], [32.7, 715.0], [32.8, 716.0], [32.9, 718.0], [33.0, 719.0], [33.1, 720.0], [33.2, 721.0], [33.3, 722.0], [33.4, 723.0], [33.5, 724.0], [33.6, 725.0], [33.7, 727.0], [33.8, 728.0], [33.9, 730.0], [34.0, 732.0], [34.1, 733.0], [34.2, 734.0], [34.3, 736.0], [34.4, 737.0], [34.5, 739.0], [34.6, 741.0], [34.7, 742.0], [34.8, 743.0], [34.9, 745.0], [35.0, 747.0], [35.1, 750.0], [35.2, 752.0], [35.3, 754.0], [35.4, 755.0], [35.5, 757.0], [35.6, 759.0], [35.7, 761.0], [35.8, 762.0], [35.9, 763.0], [36.0, 765.0], [36.1, 766.0], [36.2, 768.0], [36.3, 769.0], [36.4, 770.0], [36.5, 772.0], [36.6, 773.0], [36.7, 775.0], [36.8, 776.0], [36.9, 778.0], [37.0, 779.0], [37.1, 780.0], [37.2, 782.0], [37.3, 783.0], [37.4, 785.0], [37.5, 786.0], [37.6, 787.0], [37.7, 788.0], [37.8, 790.0], [37.9, 791.0], [38.0, 793.0], [38.1, 795.0], [38.2, 797.0], [38.3, 798.0], [38.4, 799.0], [38.5, 801.0], [38.6, 802.0], [38.7, 803.0], [38.8, 804.0], [38.9, 806.0], [39.0, 807.0], [39.1, 808.0], [39.2, 810.0], [39.3, 811.0], [39.4, 813.0], [39.5, 814.0], [39.6, 816.0], [39.7, 818.0], [39.8, 819.0], [39.9, 821.0], [40.0, 823.0], [40.1, 825.0], [40.2, 827.0], [40.3, 829.0], [40.4, 831.0], [40.5, 834.0], [40.6, 835.0], [40.7, 837.0], [40.8, 839.0], [40.9, 842.0], [41.0, 843.0], [41.1, 845.0], [41.2, 848.0], [41.3, 850.0], [41.4, 852.0], [41.5, 855.0], [41.6, 856.0], [41.7, 858.0], [41.8, 860.0], [41.9, 862.0], [42.0, 864.0], [42.1, 866.0], [42.2, 868.0], [42.3, 870.0], [42.4, 872.0], [42.5, 875.0], [42.6, 877.0], [42.7, 878.0], [42.8, 880.0], [42.9, 882.0], [43.0, 884.0], [43.1, 887.0], [43.2, 889.0], [43.3, 891.0], [43.4, 893.0], [43.5, 895.0], [43.6, 896.0], [43.7, 898.0], [43.8, 899.0], [43.9, 900.0], [44.0, 902.0], [44.1, 903.0], [44.2, 904.0], [44.3, 905.0], [44.4, 907.0], [44.5, 909.0], [44.6, 911.0], [44.7, 913.0], [44.8, 916.0], [44.9, 918.0], [45.0, 920.0], [45.1, 922.0], [45.2, 924.0], [45.3, 927.0], [45.4, 929.0], [45.5, 931.0], [45.6, 933.0], [45.7, 935.0], [45.8, 937.0], [45.9, 941.0], [46.0, 943.0], [46.1, 946.0], [46.2, 951.0], [46.3, 954.0], [46.4, 957.0], [46.5, 960.0], [46.6, 964.0], [46.7, 967.0], [46.8, 970.0], [46.9, 974.0], [47.0, 976.0], [47.1, 979.0], [47.2, 983.0], [47.3, 986.0], [47.4, 989.0], [47.5, 991.0], [47.6, 995.0], [47.7, 997.0], [47.8, 1000.0], [47.9, 1002.0], [48.0, 1004.0], [48.1, 1006.0], [48.2, 1008.0], [48.3, 1011.0], [48.4, 1015.0], [48.5, 1018.0], [48.6, 1022.0], [48.7, 1025.0], [48.8, 1028.0], [48.9, 1031.0], [49.0, 1034.0], [49.1, 1036.0], [49.2, 1039.0], [49.3, 1043.0], [49.4, 1046.0], [49.5, 1053.0], [49.6, 1058.0], [49.7, 1063.0], [49.8, 1067.0], [49.9, 1071.0], [50.0, 1074.0], [50.1, 1077.0], [50.2, 1080.0], [50.3, 1083.0], [50.4, 1085.0], [50.5, 1087.0], [50.6, 1089.0], [50.7, 1091.0], [50.8, 1092.0], [50.9, 1095.0], [51.0, 1096.0], [51.1, 1098.0], [51.2, 1100.0], [51.3, 1101.0], [51.4, 1103.0], [51.5, 1105.0], [51.6, 1107.0], [51.7, 1108.0], [51.8, 1110.0], [51.9, 1111.0], [52.0, 1113.0], [52.1, 1115.0], [52.2, 1117.0], [52.3, 1119.0], [52.4, 1121.0], [52.5, 1122.0], [52.6, 1124.0], [52.7, 1125.0], [52.8, 1127.0], [52.9, 1128.0], [53.0, 1130.0], [53.1, 1131.0], [53.2, 1134.0], [53.3, 1136.0], [53.4, 1137.0], [53.5, 1139.0], [53.6, 1140.0], [53.7, 1143.0], [53.8, 1146.0], [53.9, 1149.0], [54.0, 1150.0], [54.1, 1153.0], [54.2, 1154.0], [54.3, 1156.0], [54.4, 1158.0], [54.5, 1160.0], [54.6, 1162.0], [54.7, 1164.0], [54.8, 1166.0], [54.9, 1167.0], [55.0, 1168.0], [55.1, 1170.0], [55.2, 1172.0], [55.3, 1173.0], [55.4, 1175.0], [55.5, 1176.0], [55.6, 1177.0], [55.7, 1178.0], [55.8, 1180.0], [55.9, 1181.0], [56.0, 1183.0], [56.1, 1185.0], [56.2, 1186.0], [56.3, 1188.0], [56.4, 1189.0], [56.5, 1190.0], [56.6, 1191.0], [56.7, 1193.0], [56.8, 1194.0], [56.9, 1196.0], [57.0, 1197.0], [57.1, 1198.0], [57.2, 1199.0], [57.3, 1200.0], [57.4, 1201.0], [57.5, 1202.0], [57.6, 1203.0], [57.7, 1204.0], [57.8, 1205.0], [57.9, 1206.0], [58.0, 1208.0], [58.1, 1209.0], [58.2, 1210.0], [58.3, 1211.0], [58.4, 1212.0], [58.5, 1214.0], [58.6, 1215.0], [58.7, 1216.0], [58.8, 1217.0], [58.9, 1219.0], [59.0, 1220.0], [59.1, 1222.0], [59.2, 1224.0], [59.3, 1225.0], [59.4, 1226.0], [59.5, 1228.0], [59.6, 1229.0], [59.7, 1230.0], [59.8, 1232.0], [59.9, 1233.0], [60.0, 1235.0], [60.1, 1237.0], [60.2, 1238.0], [60.3, 1240.0], [60.4, 1242.0], [60.5, 1243.0], [60.6, 1245.0], [60.7, 1246.0], [60.8, 1248.0], [60.9, 1250.0], [61.0, 1251.0], [61.1, 1252.0], [61.2, 1254.0], [61.3, 1256.0], [61.4, 1258.0], [61.5, 1259.0], [61.6, 1261.0], [61.7, 1262.0], [61.8, 1263.0], [61.9, 1265.0], [62.0, 1267.0], [62.1, 1268.0], [62.2, 1269.0], [62.3, 1270.0], [62.4, 1272.0], [62.5, 1273.0], [62.6, 1274.0], [62.7, 1275.0], [62.8, 1276.0], [62.9, 1277.0], [63.0, 1278.0], [63.1, 1280.0], [63.2, 1281.0], [63.3, 1282.0], [63.4, 1283.0], [63.5, 1284.0], [63.6, 1286.0], [63.7, 1287.0], [63.8, 1288.0], [63.9, 1288.0], [64.0, 1290.0], [64.1, 1291.0], [64.2, 1292.0], [64.3, 1293.0], [64.4, 1295.0], [64.5, 1296.0], [64.6, 1297.0], [64.7, 1298.0], [64.8, 1299.0], [64.9, 1300.0], [65.0, 1301.0], [65.1, 1302.0], [65.2, 1303.0], [65.3, 1304.0], [65.4, 1305.0], [65.5, 1306.0], [65.6, 1307.0], [65.7, 1308.0], [65.8, 1309.0], [65.9, 1310.0], [66.0, 1311.0], [66.1, 1312.0], [66.2, 1313.0], [66.3, 1314.0], [66.4, 1315.0], [66.5, 1316.0], [66.6, 1317.0], [66.7, 1318.0], [66.8, 1320.0], [66.9, 1321.0], [67.0, 1322.0], [67.1, 1324.0], [67.2, 1325.0], [67.3, 1326.0], [67.4, 1327.0], [67.5, 1328.0], [67.6, 1330.0], [67.7, 1331.0], [67.8, 1332.0], [67.9, 1334.0], [68.0, 1335.0], [68.1, 1336.0], [68.2, 1338.0], [68.3, 1339.0], [68.4, 1340.0], [68.5, 1341.0], [68.6, 1343.0], [68.7, 1344.0], [68.8, 1346.0], [68.9, 1347.0], [69.0, 1348.0], [69.1, 1349.0], [69.2, 1350.0], [69.3, 1353.0], [69.4, 1354.0], [69.5, 1355.0], [69.6, 1357.0], [69.7, 1358.0], [69.8, 1360.0], [69.9, 1362.0], [70.0, 1363.0], [70.1, 1366.0], [70.2, 1367.0], [70.3, 1368.0], [70.4, 1370.0], [70.5, 1372.0], [70.6, 1373.0], [70.7, 1375.0], [70.8, 1376.0], [70.9, 1377.0], [71.0, 1378.0], [71.1, 1380.0], [71.2, 1381.0], [71.3, 1381.0], [71.4, 1383.0], [71.5, 1384.0], [71.6, 1385.0], [71.7, 1386.0], [71.8, 1388.0], [71.9, 1389.0], [72.0, 1390.0], [72.1, 1391.0], [72.2, 1393.0], [72.3, 1394.0], [72.4, 1395.0], [72.5, 1397.0], [72.6, 1399.0], [72.7, 1400.0], [72.8, 1402.0], [72.9, 1403.0], [73.0, 1404.0], [73.1, 1405.0], [73.2, 1407.0], [73.3, 1408.0], [73.4, 1409.0], [73.5, 1410.0], [73.6, 1412.0], [73.7, 1413.0], [73.8, 1414.0], [73.9, 1416.0], [74.0, 1417.0], [74.1, 1418.0], [74.2, 1419.0], [74.3, 1420.0], [74.4, 1422.0], [74.5, 1423.0], [74.6, 1424.0], [74.7, 1426.0], [74.8, 1427.0], [74.9, 1428.0], [75.0, 1430.0], [75.1, 1431.0], [75.2, 1433.0], [75.3, 1435.0], [75.4, 1436.0], [75.5, 1439.0], [75.6, 1441.0], [75.7, 1442.0], [75.8, 1444.0], [75.9, 1445.0], [76.0, 1447.0], [76.1, 1448.0], [76.2, 1451.0], [76.3, 1452.0], [76.4, 1453.0], [76.5, 1455.0], [76.6, 1456.0], [76.7, 1458.0], [76.8, 1459.0], [76.9, 1461.0], [77.0, 1463.0], [77.1, 1464.0], [77.2, 1466.0], [77.3, 1467.0], [77.4, 1468.0], [77.5, 1470.0], [77.6, 1472.0], [77.7, 1473.0], [77.8, 1474.0], [77.9, 1476.0], [78.0, 1477.0], [78.1, 1479.0], [78.2, 1480.0], [78.3, 1481.0], [78.4, 1483.0], [78.5, 1484.0], [78.6, 1485.0], [78.7, 1486.0], [78.8, 1487.0], [78.9, 1489.0], [79.0, 1490.0], [79.1, 1492.0], [79.2, 1493.0], [79.3, 1494.0], [79.4, 1496.0], [79.5, 1497.0], [79.6, 1498.0], [79.7, 1500.0], [79.8, 1501.0], [79.9, 1503.0], [80.0, 1505.0], [80.1, 1506.0], [80.2, 1507.0], [80.3, 1508.0], [80.4, 1510.0], [80.5, 1512.0], [80.6, 1513.0], [80.7, 1514.0], [80.8, 1516.0], [80.9, 1517.0], [81.0, 1519.0], [81.1, 1520.0], [81.2, 1522.0], [81.3, 1523.0], [81.4, 1525.0], [81.5, 1526.0], [81.6, 1528.0], [81.7, 1530.0], [81.8, 1532.0], [81.9, 1534.0], [82.0, 1536.0], [82.1, 1539.0], [82.2, 1542.0], [82.3, 1544.0], [82.4, 1546.0], [82.5, 1548.0], [82.6, 1549.0], [82.7, 1551.0], [82.8, 1553.0], [82.9, 1555.0], [83.0, 1557.0], [83.1, 1559.0], [83.2, 1561.0], [83.3, 1562.0], [83.4, 1564.0], [83.5, 1566.0], [83.6, 1569.0], [83.7, 1570.0], [83.8, 1572.0], [83.9, 1574.0], [84.0, 1576.0], [84.1, 1578.0], [84.2, 1579.0], [84.3, 1581.0], [84.4, 1583.0], [84.5, 1584.0], [84.6, 1585.0], [84.7, 1587.0], [84.8, 1589.0], [84.9, 1592.0], [85.0, 1594.0], [85.1, 1596.0], [85.2, 1598.0], [85.3, 1600.0], [85.4, 1603.0], [85.5, 1604.0], [85.6, 1606.0], [85.7, 1608.0], [85.8, 1610.0], [85.9, 1612.0], [86.0, 1613.0], [86.1, 1615.0], [86.2, 1617.0], [86.3, 1619.0], [86.4, 1621.0], [86.5, 1623.0], [86.6, 1624.0], [86.7, 1626.0], [86.8, 1629.0], [86.9, 1631.0], [87.0, 1633.0], [87.1, 1635.0], [87.2, 1637.0], [87.3, 1639.0], [87.4, 1641.0], [87.5, 1643.0], [87.6, 1646.0], [87.7, 1649.0], [87.8, 1651.0], [87.9, 1654.0], [88.0, 1657.0], [88.1, 1659.0], [88.2, 1660.0], [88.3, 1663.0], [88.4, 1666.0], [88.5, 1668.0], [88.6, 1671.0], [88.7, 1674.0], [88.8, 1676.0], [88.9, 1679.0], [89.0, 1681.0], [89.1, 1683.0], [89.2, 1686.0], [89.3, 1687.0], [89.4, 1689.0], [89.5, 1691.0], [89.6, 1693.0], [89.7, 1696.0], [89.8, 1698.0], [89.9, 1701.0], [90.0, 1703.0], [90.1, 1706.0], [90.2, 1711.0], [90.3, 1713.0], [90.4, 1715.0], [90.5, 1718.0], [90.6, 1721.0], [90.7, 1724.0], [90.8, 1726.0], [90.9, 1729.0], [91.0, 1733.0], [91.1, 1736.0], [91.2, 1740.0], [91.3, 1744.0], [91.4, 1747.0], [91.5, 1751.0], [91.6, 1754.0], [91.7, 1757.0], [91.8, 1760.0], [91.9, 1763.0], [92.0, 1767.0], [92.1, 1769.0], [92.2, 1773.0], [92.3, 1775.0], [92.4, 1780.0], [92.5, 1783.0], [92.6, 1787.0], [92.7, 1789.0], [92.8, 1792.0], [92.9, 1795.0], [93.0, 1798.0], [93.1, 1802.0], [93.2, 1806.0], [93.3, 1808.0], [93.4, 1810.0], [93.5, 1814.0], [93.6, 1819.0], [93.7, 1822.0], [93.8, 1826.0], [93.9, 1829.0], [94.0, 1834.0], [94.1, 1837.0], [94.2, 1843.0], [94.3, 1848.0], [94.4, 1852.0], [94.5, 1859.0], [94.6, 1864.0], [94.7, 1868.0], [94.8, 1871.0], [94.9, 1875.0], [95.0, 1881.0], [95.1, 1885.0], [95.2, 1890.0], [95.3, 1895.0], [95.4, 1899.0], [95.5, 1903.0], [95.6, 1906.0], [95.7, 1911.0], [95.8, 1914.0], [95.9, 1920.0], [96.0, 1924.0], [96.1, 1930.0], [96.2, 1934.0], [96.3, 1940.0], [96.4, 1947.0], [96.5, 1955.0], [96.6, 1962.0], [96.7, 1971.0], [96.8, 1982.0], [96.9, 1990.0], [97.0, 1997.0], [97.1, 2004.0], [97.2, 2008.0], [97.3, 2019.0], [97.4, 2031.0], [97.5, 2041.0], [97.6, 2053.0], [97.7, 2062.0], [97.8, 2072.0], [97.9, 2086.0], [98.0, 2099.0], [98.1, 2112.0], [98.2, 2125.0], [98.3, 2138.0], [98.4, 2151.0], [98.5, 2163.0], [98.6, 2179.0], [98.7, 2194.0], [98.8, 2213.0], [98.9, 2227.0], [99.0, 2246.0], [99.1, 2269.0], [99.2, 2292.0], [99.3, 2320.0], [99.4, 2349.0], [99.5, 2382.0], [99.6, 2423.0], [99.7, 2496.0], [99.8, 2563.0], [99.9, 2683.0], [100.0, 3666.0]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 9.0], [25.1, 9.0], [25.2, 9.0], [25.3, 9.0], [25.4, 9.0], [25.5, 9.0], [25.6, 9.0], [25.7, 9.0], [25.8, 9.0], [25.9, 9.0], [26.0, 9.0], [26.1, 9.0], [26.2, 9.0], [26.3, 9.0], [26.4, 9.0], [26.5, 9.0], [26.6, 9.0], [26.7, 9.0], [26.8, 9.0], [26.9, 9.0], [27.0, 9.0], [27.1, 9.0], [27.2, 9.0], [27.3, 9.0], [27.4, 9.0], [27.5, 9.0], [27.6, 9.0], [27.7, 9.0], [27.8, 9.0], [27.9, 9.0], [28.0, 9.0], [28.1, 9.0], [28.2, 9.0], [28.3, 9.0], [28.4, 9.0], [28.5, 9.0], [28.6, 9.0], [28.7, 9.0], [28.8, 9.0], [28.9, 9.0], [29.0, 9.0], [29.1, 9.0], [29.2, 9.0], [29.3, 9.0], [29.4, 9.0], [29.5, 9.0], [29.6, 9.0], [29.7, 9.0], [29.8, 9.0], [29.9, 9.0], [30.0, 9.0], [30.1, 9.0], [30.2, 9.0], [30.3, 9.0], [30.4, 9.0], [30.5, 9.0], [30.6, 9.0], [30.7, 9.0], [30.8, 9.0], [30.9, 9.0], [31.0, 9.0], [31.1, 9.0], [31.2, 9.0], [31.3, 9.0], [31.4, 9.0], [31.5, 9.0], [31.6, 9.0], [31.7, 9.0], [31.8, 9.0], [31.9, 9.0], [32.0, 9.0], [32.1, 9.0], [32.2, 9.0], [32.3, 9.0], [32.4, 9.0], [32.5, 9.0], [32.6, 9.0], [32.7, 9.0], [32.8, 9.0], [32.9, 9.0], [33.0, 9.0], [33.1, 9.0], [33.2, 9.0], [33.3, 9.0], [33.4, 9.0], [33.5, 9.0], [33.6, 9.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 9.0], [43.8, 9.0], [43.9, 9.0], [44.0, 9.0], [44.1, 9.0], [44.2, 9.0], [44.3, 9.0], [44.4, 9.0], [44.5, 9.0], [44.6, 9.0], [44.7, 9.0], [44.8, 9.0], [44.9, 9.0], [45.0, 9.0], [45.1, 9.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 781.0], [50.1, 781.0], [50.2, 781.0], [50.3, 781.0], [50.4, 781.0], [50.5, 781.0], [50.6, 781.0], [50.7, 781.0], [50.8, 781.0], [50.9, 781.0], [51.0, 781.0], [51.1, 781.0], [51.2, 781.0], [51.3, 781.0], [51.4, 781.0], [51.5, 781.0], [51.6, 781.0], [51.7, 781.0], [51.8, 781.0], [51.9, 781.0], [52.0, 781.0], [52.1, 781.0], [52.2, 781.0], [52.3, 781.0], [52.4, 781.0], [52.5, 781.0], [52.6, 781.0], [52.7, 781.0], [52.8, 781.0], [52.9, 781.0], [53.0, 781.0], [53.1, 781.0], [53.2, 781.0], [53.3, 781.0], [53.4, 781.0], [53.5, 781.0], [53.6, 781.0], [53.7, 781.0], [53.8, 781.0], [53.9, 781.0], [54.0, 781.0], [54.1, 781.0], [54.2, 781.0], [54.3, 781.0], [54.4, 781.0], [54.5, 781.0], [54.6, 781.0], [54.7, 781.0], [54.8, 781.0], [54.9, 781.0], [55.0, 781.0], [55.1, 781.0], [55.2, 781.0], [55.3, 781.0], [55.4, 781.0], [55.5, 781.0], [55.6, 781.0], [55.7, 781.0], [55.8, 781.0], [55.9, 781.0], [56.0, 781.0], [56.1, 781.0], [56.2, 781.0], [56.3, 781.0], [56.4, 781.0], [56.5, 781.0], [56.6, 781.0], [56.7, 781.0], [56.8, 781.0], [56.9, 781.0], [57.0, 781.0], [57.1, 781.0], [57.2, 781.0], [57.3, 781.0], [57.4, 781.0], [57.5, 781.0], [57.6, 781.0], [57.7, 781.0], [57.8, 781.0], [57.9, 781.0], [58.0, 781.0], [58.1, 781.0], [58.2, 781.0], [58.3, 781.0], [58.4, 781.0], [58.5, 781.0], [58.6, 781.0], [58.7, 781.0], [58.8, 781.0], [58.9, 781.0], [59.0, 781.0], [59.1, 781.0], [59.2, 781.0], [59.3, 781.0], [59.4, 781.0], [59.5, 781.0], [59.6, 781.0], [59.7, 781.0], [59.8, 781.0], [59.9, 781.0], [60.0, 781.0], [60.1, 781.0], [60.2, 781.0], [60.3, 781.0], [60.4, 781.0], [60.5, 781.0], [60.6, 781.0], [60.7, 781.0], [60.8, 781.0], [60.9, 781.0], [61.0, 781.0], [61.1, 781.0], [61.2, 781.0], [61.3, 781.0], [61.4, 781.0], [61.5, 781.0], [61.6, 781.0], [61.7, 781.0], [61.8, 781.0], [61.9, 781.0], [62.0, 781.0], [62.1, 781.0], [62.2, 781.0], [62.3, 781.0], [62.4, 781.0], [62.5, 781.0], [62.6, 781.0], [62.7, 781.0], [62.8, 781.0], [62.9, 781.0], [63.0, 781.0], [63.1, 781.0], [63.2, 781.0], [63.3, 781.0], [63.4, 781.0], [63.5, 781.0], [63.6, 781.0], [63.7, 781.0], [63.8, 781.0], [63.9, 781.0], [64.0, 781.0], [64.1, 781.0], [64.2, 781.0], [64.3, 781.0], [64.4, 781.0], [64.5, 781.0], [64.6, 781.0], [64.7, 781.0], [64.8, 781.0], [64.9, 781.0], [65.0, 781.0], [65.1, 781.0], [65.2, 781.0], [65.3, 781.0], [65.4, 781.0], [65.5, 781.0], [65.6, 781.0], [65.7, 781.0], [65.8, 781.0], [65.9, 781.0], [66.0, 781.0], [66.1, 781.0], [66.2, 781.0], [66.3, 781.0], [66.4, 781.0], [66.5, 781.0], [66.6, 781.0], [66.7, 781.0], [66.8, 781.0], [66.9, 781.0], [67.0, 781.0], [67.1, 781.0], [67.2, 781.0], [67.3, 781.0], [67.4, 781.0], [67.5, 781.0], [67.6, 781.0], [67.7, 781.0], [67.8, 781.0], [67.9, 781.0], [68.0, 781.0], [68.1, 781.0], [68.2, 781.0], [68.3, 781.0], [68.4, 781.0], [68.5, 781.0], [68.6, 781.0], [68.7, 781.0], [68.8, 781.0], [68.9, 781.0], [69.0, 781.0], [69.1, 781.0], [69.2, 781.0], [69.3, 781.0], [69.4, 781.0], [69.5, 781.0], [69.6, 781.0], [69.7, 781.0], [69.8, 781.0], [69.9, 781.0], [70.0, 781.0], [70.1, 781.0], [70.2, 781.0], [70.3, 781.0], [70.4, 781.0], [70.5, 781.0], [70.6, 781.0], [70.7, 781.0], [70.8, 781.0], [70.9, 781.0], [71.0, 781.0], [71.1, 781.0], [71.2, 781.0], [71.3, 781.0], [71.4, 781.0], [71.5, 781.0], [71.6, 781.0], [71.7, 781.0], [71.8, 781.0], [71.9, 781.0], [72.0, 781.0], [72.1, 781.0], [72.2, 781.0], [72.3, 781.0], [72.4, 781.0], [72.5, 781.0], [72.6, 781.0], [72.7, 781.0], [72.8, 781.0], [72.9, 781.0], [73.0, 781.0], [73.1, 781.0], [73.2, 781.0], [73.3, 781.0], [73.4, 781.0], [73.5, 781.0], [73.6, 781.0], [73.7, 781.0], [73.8, 781.0], [73.9, 781.0], [74.0, 781.0], [74.1, 781.0], [74.2, 781.0], [74.3, 781.0], [74.4, 781.0], [74.5, 781.0], [74.6, 781.0], [74.7, 781.0], [74.8, 781.0], [74.9, 781.0], [75.0, 782.0], [75.1, 782.0], [75.2, 782.0], [75.3, 782.0], [75.4, 782.0], [75.5, 782.0], [75.6, 782.0], [75.7, 782.0], [75.8, 782.0], [75.9, 782.0], [76.0, 782.0], [76.1, 782.0], [76.2, 782.0], [76.3, 782.0], [76.4, 782.0], [76.5, 782.0], [76.6, 782.0], [76.7, 782.0], [76.8, 782.0], [76.9, 782.0], [77.0, 782.0], [77.1, 782.0], [77.2, 782.0], [77.3, 782.0], [77.4, 782.0], [77.5, 782.0], [77.6, 782.0], [77.7, 782.0], [77.8, 782.0], [77.9, 782.0], [78.0, 782.0], [78.1, 782.0], [78.2, 782.0], [78.3, 782.0], [78.4, 782.0], [78.5, 782.0], [78.6, 782.0], [78.7, 782.0], [78.8, 782.0], [78.9, 782.0], [79.0, 782.0], [79.1, 782.0], [79.2, 782.0], [79.3, 782.0], [79.4, 782.0], [79.5, 782.0], [79.6, 782.0], [79.7, 782.0], [79.8, 782.0], [79.9, 782.0], [80.0, 782.0], [80.1, 782.0], [80.2, 782.0], [80.3, 782.0], [80.4, 782.0], [80.5, 782.0], [80.6, 782.0], [80.7, 782.0], [80.8, 782.0], [80.9, 782.0], [81.0, 782.0], [81.1, 782.0], [81.2, 782.0], [81.3, 782.0], [81.4, 782.0], [81.5, 782.0], [81.6, 782.0], [81.7, 782.0], [81.8, 782.0], [81.9, 782.0], [82.0, 782.0], [82.1, 782.0], [82.2, 782.0], [82.3, 782.0], [82.4, 782.0], [82.5, 782.0], [82.6, 782.0], [82.7, 782.0], [82.8, 782.0], [82.9, 782.0], [83.0, 782.0], [83.1, 782.0], [83.2, 782.0], [83.3, 782.0], [83.4, 782.0], [83.5, 782.0], [83.6, 782.0], [83.7, 782.0], [83.8, 782.0], [83.9, 782.0], [84.0, 782.0], [84.1, 782.0], [84.2, 782.0], [84.3, 782.0], [84.4, 782.0], [84.5, 782.0], [84.6, 782.0], [84.7, 782.0], [84.8, 782.0], [84.9, 782.0], [85.0, 782.0], [85.1, 782.0], [85.2, 782.0], [85.3, 782.0], [85.4, 782.0], [85.5, 782.0], [85.6, 782.0], [85.7, 782.0], [85.8, 782.0], [85.9, 782.0], [86.0, 782.0], [86.1, 782.0], [86.2, 782.0], [86.3, 782.0], [86.4, 782.0], [86.5, 782.0], [86.6, 782.0], [86.7, 782.0], [86.8, 782.0], [86.9, 782.0], [87.0, 782.0], [87.1, 782.0], [87.2, 782.0], [87.3, 782.0], [87.4, 782.0], [87.5, 782.0], [87.6, 782.0], [87.7, 782.0], [87.8, 782.0], [87.9, 782.0], [88.0, 782.0], [88.1, 782.0], [88.2, 782.0], [88.3, 782.0], [88.4, 782.0], [88.5, 782.0], [88.6, 782.0], [88.7, 782.0], [88.8, 782.0], [88.9, 782.0], [89.0, 782.0], [89.1, 782.0], [89.2, 782.0], [89.3, 782.0], [89.4, 782.0], [89.5, 782.0], [89.6, 782.0], [89.7, 782.0], [89.8, 782.0], [89.9, 782.0], [90.0, 782.0], [90.1, 782.0], [90.2, 782.0], [90.3, 782.0], [90.4, 782.0], [90.5, 782.0], [90.6, 782.0], [90.7, 782.0], [90.8, 782.0], [90.9, 782.0], [91.0, 782.0], [91.1, 782.0], [91.2, 782.0], [91.3, 782.0], [91.4, 782.0], [91.5, 782.0], [91.6, 782.0], [91.7, 782.0], [91.8, 782.0], [91.9, 782.0], [92.0, 782.0], [92.1, 782.0], [92.2, 782.0], [92.3, 782.0], [92.4, 782.0], [92.5, 782.0], [92.6, 782.0], [92.7, 782.0], [92.8, 782.0], [92.9, 782.0], [93.0, 782.0], [93.1, 782.0], [93.2, 782.0], [93.3, 782.0], [93.4, 782.0], [93.5, 782.0], [93.6, 782.0], [93.7, 782.0], [93.8, 782.0], [93.9, 782.0], [94.0, 782.0], [94.1, 782.0], [94.2, 782.0], [94.3, 782.0], [94.4, 782.0], [94.5, 782.0], [94.6, 782.0], [94.7, 782.0], [94.8, 782.0], [94.9, 782.0], [95.0, 782.0], [95.1, 782.0], [95.2, 782.0], [95.3, 782.0], [95.4, 782.0], [95.5, 782.0], [95.6, 782.0], [95.7, 782.0], [95.8, 782.0], [95.9, 782.0], [96.0, 782.0], [96.1, 782.0], [96.2, 782.0], [96.3, 782.0], [96.4, 782.0], [96.5, 782.0], [96.6, 782.0], [96.7, 782.0], [96.8, 782.0], [96.9, 782.0], [97.0, 782.0], [97.1, 782.0], [97.2, 782.0], [97.3, 782.0], [97.4, 782.0], [97.5, 782.0], [97.6, 782.0], [97.7, 782.0], [97.8, 782.0], [97.9, 782.0], [98.0, 782.0], [98.1, 782.0], [98.2, 782.0], [98.3, 782.0], [98.4, 782.0], [98.5, 782.0], [98.6, 782.0], [98.7, 782.0], [98.8, 782.0], [98.9, 782.0], [99.0, 782.0], [99.1, 782.0], [99.2, 782.0], [99.3, 782.0], [99.4, 782.0], [99.5, 782.0], [99.6, 782.0], [99.7, 782.0], [99.8, 782.0], [99.9, 782.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[0.0, 856.0], [0.1, 859.0], [0.2, 861.0], [0.3, 866.0], [0.4, 875.0], [0.5, 880.0], [0.6, 955.0], [0.7, 962.0], [0.8, 969.0], [0.9, 973.0], [1.0, 977.0], [1.1, 979.0], [1.2, 980.0], [1.3, 982.0], [1.4, 984.0], [1.5, 989.0], [1.6, 992.0], [1.7, 999.0], [1.8, 1002.0], [1.9, 1003.0], [2.0, 1012.0], [2.1, 1017.0], [2.2, 1022.0], [2.3, 1026.0], [2.4, 1033.0], [2.5, 1038.0], [2.6, 1044.0], [2.7, 1052.0], [2.8, 1060.0], [2.9, 1064.0], [3.0, 1065.0], [3.1, 1069.0], [3.2, 1070.0], [3.3, 1072.0], [3.4, 1074.0], [3.5, 1077.0], [3.6, 1078.0], [3.7, 1081.0], [3.8, 1087.0], [3.9, 1088.0], [4.0, 1091.0], [4.1, 1095.0], [4.2, 1102.0], [4.3, 1115.0], [4.4, 1124.0], [4.5, 1130.0], [4.6, 1140.0], [4.7, 1147.0], [4.8, 1147.0], [4.9, 1158.0], [5.0, 1166.0], [5.1, 1168.0], [5.2, 1171.0], [5.3, 1175.0], [5.4, 1190.0], [5.5, 1194.0], [5.6, 1196.0], [5.7, 1208.0], [5.8, 1212.0], [5.9, 1226.0], [6.0, 1228.0], [6.1, 1232.0], [6.2, 1236.0], [6.3, 1240.0], [6.4, 1244.0], [6.5, 1252.0], [6.6, 1257.0], [6.7, 1266.0], [6.8, 1282.0], [6.9, 1285.0], [7.0, 1289.0], [7.1, 1304.0], [7.2, 1313.0], [7.3, 1317.0], [7.4, 1320.0], [7.5, 1331.0], [7.6, 1338.0], [7.7, 1355.0], [7.8, 1363.0], [7.9, 1376.0], [8.0, 1381.0], [8.1, 1389.0], [8.2, 1396.0], [8.3, 1413.0], [8.4, 1431.0], [8.5, 1435.0], [8.6, 1436.0], [8.7, 1437.0], [8.8, 1443.0], [8.9, 1450.0], [9.0, 1457.0], [9.1, 1459.0], [9.2, 1468.0], [9.3, 1481.0], [9.4, 1482.0], [9.5, 1487.0], [9.6, 1491.0], [9.7, 1493.0], [9.8, 1495.0], [9.9, 1498.0], [10.0, 1509.0], [10.1, 1510.0], [10.2, 1513.0], [10.3, 1514.0], [10.4, 1518.0], [10.5, 1518.0], [10.6, 1519.0], [10.7, 1524.0], [10.8, 1534.0], [10.9, 1536.0], [11.0, 1543.0], [11.1, 1544.0], [11.2, 1546.0], [11.3, 1546.0], [11.4, 1553.0], [11.5, 1557.0], [11.6, 1566.0], [11.7, 1575.0], [11.8, 1590.0], [11.9, 1590.0], [12.0, 1592.0], [12.1, 1595.0], [12.2, 1598.0], [12.3, 1599.0], [12.4, 1607.0], [12.5, 1607.0], [12.6, 1608.0], [12.7, 1609.0], [12.8, 1614.0], [12.9, 1621.0], [13.0, 1629.0], [13.1, 1633.0], [13.2, 1644.0], [13.3, 1646.0], [13.4, 1652.0], [13.5, 1653.0], [13.6, 1661.0], [13.7, 1662.0], [13.8, 1682.0], [13.9, 1685.0], [14.0, 1704.0], [14.1, 1705.0], [14.2, 1721.0], [14.3, 1756.0], [14.4, 1807.0], [14.5, 1821.0], [14.6, 1839.0], [14.7, 1844.0], [14.8, 1858.0], [14.9, 1859.0], [15.0, 1876.0], [15.1, 1884.0], [15.2, 1886.0], [15.3, 1903.0], [15.4, 1905.0], [15.5, 1907.0], [15.6, 1908.0], [15.7, 1910.0], [15.8, 1911.0], [15.9, 1920.0], [16.0, 1923.0], [16.1, 1928.0], [16.2, 1930.0], [16.3, 1932.0], [16.4, 1935.0], [16.5, 1938.0], [16.6, 1941.0], [16.7, 1942.0], [16.8, 1946.0], [16.9, 1949.0], [17.0, 1951.0], [17.1, 1954.0], [17.2, 1962.0], [17.3, 1967.0], [17.4, 1969.0], [17.5, 1975.0], [17.6, 1980.0], [17.7, 1985.0], [17.8, 1994.0], [17.9, 2000.0], [18.0, 2007.0], [18.1, 2010.0], [18.2, 2017.0], [18.3, 2019.0], [18.4, 2031.0], [18.5, 2032.0], [18.6, 2042.0], [18.7, 2049.0], [18.8, 2064.0], [18.9, 2074.0], [19.0, 2090.0], [19.1, 2101.0], [19.2, 2102.0], [19.3, 2103.0], [19.4, 2114.0], [19.5, 2122.0], [19.6, 2165.0], [19.7, 2168.0], [19.8, 2176.0], [19.9, 2187.0], [20.0, 2206.0], [20.1, 2209.0], [20.2, 2222.0], [20.3, 2224.0], [20.4, 2235.0], [20.5, 2235.0], [20.6, 2245.0], [20.7, 2245.0], [20.8, 2255.0], [20.9, 2260.0], [21.0, 2265.0], [21.1, 2266.0], [21.2, 2269.0], [21.3, 2271.0], [21.4, 2278.0], [21.5, 2280.0], [21.6, 2283.0], [21.7, 2288.0], [21.8, 2300.0], [21.9, 2304.0], [22.0, 2307.0], [22.1, 2314.0], [22.2, 2321.0], [22.3, 2323.0], [22.4, 2326.0], [22.5, 2336.0], [22.6, 2342.0], [22.7, 2345.0], [22.8, 2350.0], [22.9, 2353.0], [23.0, 2355.0], [23.1, 2356.0], [23.2, 2357.0], [23.3, 2364.0], [23.4, 2369.0], [23.5, 2373.0], [23.6, 2376.0], [23.7, 2377.0], [23.8, 2382.0], [23.9, 2383.0], [24.0, 2386.0], [24.1, 2389.0], [24.2, 2393.0], [24.3, 2396.0], [24.4, 2401.0], [24.5, 2405.0], [24.6, 2409.0], [24.7, 2410.0], [24.8, 2419.0], [24.9, 2430.0], [25.0, 2436.0], [25.1, 2437.0], [25.2, 2439.0], [25.3, 2440.0], [25.4, 2440.0], [25.5, 2442.0], [25.6, 2445.0], [25.7, 2447.0], [25.8, 2450.0], [25.9, 2452.0], [26.0, 2460.0], [26.1, 2462.0], [26.2, 2465.0], [26.3, 2474.0], [26.4, 2481.0], [26.5, 2484.0], [26.6, 2492.0], [26.7, 2497.0], [26.8, 2503.0], [26.9, 2506.0], [27.0, 2512.0], [27.1, 2514.0], [27.2, 2517.0], [27.3, 2528.0], [27.4, 2532.0], [27.5, 2543.0], [27.6, 2548.0], [27.7, 2552.0], [27.8, 2564.0], [27.9, 2570.0], [28.0, 2572.0], [28.1, 2580.0], [28.2, 2587.0], [28.3, 2588.0], [28.4, 2593.0], [28.5, 2599.0], [28.6, 2607.0], [28.7, 2612.0], [28.8, 2622.0], [28.9, 2623.0], [29.0, 2634.0], [29.1, 2638.0], [29.2, 2653.0], [29.3, 2653.0], [29.4, 2655.0], [29.5, 2659.0], [29.6, 2661.0], [29.7, 2662.0], [29.8, 2665.0], [29.9, 2666.0], [30.0, 2668.0], [30.1, 2670.0], [30.2, 2671.0], [30.3, 2672.0], [30.4, 2676.0], [30.5, 2677.0], [30.6, 2681.0], [30.7, 2682.0], [30.8, 2686.0], [30.9, 2692.0], [31.0, 2701.0], [31.1, 2705.0], [31.2, 2708.0], [31.3, 2715.0], [31.4, 2721.0], [31.5, 2723.0], [31.6, 2728.0], [31.7, 2734.0], [31.8, 2737.0], [31.9, 2739.0], [32.0, 2742.0], [32.1, 2742.0], [32.2, 2744.0], [32.3, 2746.0], [32.4, 2747.0], [32.5, 2747.0], [32.6, 2751.0], [32.7, 2752.0], [32.8, 2757.0], [32.9, 2762.0], [33.0, 2766.0], [33.1, 2768.0], [33.2, 2770.0], [33.3, 2771.0], [33.4, 2777.0], [33.5, 2780.0], [33.6, 2785.0], [33.7, 2786.0], [33.8, 2787.0], [33.9, 2790.0], [34.0, 2795.0], [34.1, 2796.0], [34.2, 2800.0], [34.3, 2803.0], [34.4, 2805.0], [34.5, 2807.0], [34.6, 2812.0], [34.7, 2814.0], [34.8, 2815.0], [34.9, 2818.0], [35.0, 2824.0], [35.1, 2827.0], [35.2, 2834.0], [35.3, 2842.0], [35.4, 2861.0], [35.5, 2870.0], [35.6, 2878.0], [35.7, 2881.0], [35.8, 2888.0], [35.9, 2889.0], [36.0, 2892.0], [36.1, 2900.0], [36.2, 2912.0], [36.3, 2918.0], [36.4, 2923.0], [36.5, 2927.0], [36.6, 2932.0], [36.7, 2935.0], [36.8, 2939.0], [36.9, 2942.0], [37.0, 2946.0], [37.1, 2948.0], [37.2, 2949.0], [37.3, 2950.0], [37.4, 2953.0], [37.5, 2956.0], [37.6, 2958.0], [37.7, 2960.0], [37.8, 2961.0], [37.9, 2962.0], [38.0, 2964.0], [38.1, 2967.0], [38.2, 2969.0], [38.3, 2970.0], [38.4, 2973.0], [38.5, 2979.0], [38.6, 2981.0], [38.7, 2984.0], [38.8, 2989.0], [38.9, 2992.0], [39.0, 2998.0], [39.1, 3002.0], [39.2, 3006.0], [39.3, 3009.0], [39.4, 3022.0], [39.5, 3035.0], [39.6, 3038.0], [39.7, 3045.0], [39.8, 3056.0], [39.9, 3064.0], [40.0, 3065.0], [40.1, 3069.0], [40.2, 3074.0], [40.3, 3079.0], [40.4, 3096.0], [40.5, 3103.0], [40.6, 3109.0], [40.7, 3112.0], [40.8, 3113.0], [40.9, 3122.0], [41.0, 3123.0], [41.1, 3125.0], [41.2, 3126.0], [41.3, 3127.0], [41.4, 3133.0], [41.5, 3137.0], [41.6, 3140.0], [41.7, 3144.0], [41.8, 3152.0], [41.9, 3155.0], [42.0, 3156.0], [42.1, 3157.0], [42.2, 3160.0], [42.3, 3161.0], [42.4, 3162.0], [42.5, 3164.0], [42.6, 3164.0], [42.7, 3166.0], [42.8, 3171.0], [42.9, 3172.0], [43.0, 3175.0], [43.1, 3175.0], [43.2, 3177.0], [43.3, 3178.0], [43.4, 3185.0], [43.5, 3186.0], [43.6, 3193.0], [43.7, 3193.0], [43.8, 3197.0], [43.9, 3200.0], [44.0, 3206.0], [44.1, 3207.0], [44.2, 3211.0], [44.3, 3214.0], [44.4, 3220.0], [44.5, 3223.0], [44.6, 3226.0], [44.7, 3229.0], [44.8, 3233.0], [44.9, 3234.0], [45.0, 3239.0], [45.1, 3242.0], [45.2, 3244.0], [45.3, 3244.0], [45.4, 3246.0], [45.5, 3247.0], [45.6, 3248.0], [45.7, 3249.0], [45.8, 3249.0], [45.9, 3251.0], [46.0, 3252.0], [46.1, 3253.0], [46.2, 3254.0], [46.3, 3258.0], [46.4, 3262.0], [46.5, 3263.0], [46.6, 3266.0], [46.7, 3270.0], [46.8, 3277.0], [46.9, 3280.0], [47.0, 3287.0], [47.1, 3291.0], [47.2, 3296.0], [47.3, 3307.0], [47.4, 3312.0], [47.5, 3317.0], [47.6, 3326.0], [47.7, 3328.0], [47.8, 3340.0], [47.9, 3341.0], [48.0, 3344.0], [48.1, 3347.0], [48.2, 3352.0], [48.3, 3353.0], [48.4, 3354.0], [48.5, 3355.0], [48.6, 3357.0], [48.7, 3359.0], [48.8, 3367.0], [48.9, 3368.0], [49.0, 3372.0], [49.1, 3376.0], [49.2, 3385.0], [49.3, 3388.0], [49.4, 3389.0], [49.5, 3399.0], [49.6, 3400.0], [49.7, 3400.0], [49.8, 3404.0], [49.9, 3404.0], [50.0, 3410.0], [50.1, 3413.0], [50.2, 3416.0], [50.3, 3419.0], [50.4, 3423.0], [50.5, 3423.0], [50.6, 3427.0], [50.7, 3432.0], [50.8, 3433.0], [50.9, 3435.0], [51.0, 3435.0], [51.1, 3437.0], [51.2, 3440.0], [51.3, 3440.0], [51.4, 3442.0], [51.5, 3444.0], [51.6, 3445.0], [51.7, 3446.0], [51.8, 3447.0], [51.9, 3448.0], [52.0, 3450.0], [52.1, 3451.0], [52.2, 3452.0], [52.3, 3454.0], [52.4, 3456.0], [52.5, 3457.0], [52.6, 3458.0], [52.7, 3458.0], [52.8, 3461.0], [52.9, 3462.0], [53.0, 3465.0], [53.1, 3466.0], [53.2, 3468.0], [53.3, 3469.0], [53.4, 3472.0], [53.5, 3474.0], [53.6, 3476.0], [53.7, 3478.0], [53.8, 3479.0], [53.9, 3480.0], [54.0, 3481.0], [54.1, 3482.0], [54.2, 3484.0], [54.3, 3485.0], [54.4, 3488.0], [54.5, 3491.0], [54.6, 3492.0], [54.7, 3494.0], [54.8, 3495.0], [54.9, 3497.0], [55.0, 3497.0], [55.1, 3499.0], [55.2, 3501.0], [55.3, 3503.0], [55.4, 3504.0], [55.5, 3505.0], [55.6, 3506.0], [55.7, 3509.0], [55.8, 3510.0], [55.9, 3510.0], [56.0, 3512.0], [56.1, 3514.0], [56.2, 3517.0], [56.3, 3518.0], [56.4, 3520.0], [56.5, 3522.0], [56.6, 3524.0], [56.7, 3525.0], [56.8, 3527.0], [56.9, 3534.0], [57.0, 3536.0], [57.1, 3538.0], [57.2, 3541.0], [57.3, 3545.0], [57.4, 3547.0], [57.5, 3553.0], [57.6, 3557.0], [57.7, 3565.0], [57.8, 3571.0], [57.9, 3576.0], [58.0, 3580.0], [58.1, 3581.0], [58.2, 3587.0], [58.3, 3588.0], [58.4, 3593.0], [58.5, 3597.0], [58.6, 3600.0], [58.7, 3604.0], [58.8, 3607.0], [58.9, 3610.0], [59.0, 3611.0], [59.1, 3613.0], [59.2, 3615.0], [59.3, 3618.0], [59.4, 3620.0], [59.5, 3622.0], [59.6, 3632.0], [59.7, 3636.0], [59.8, 3640.0], [59.9, 3642.0], [60.0, 3645.0], [60.1, 3645.0], [60.2, 3651.0], [60.3, 3660.0], [60.4, 3670.0], [60.5, 3672.0], [60.6, 3680.0], [60.7, 3684.0], [60.8, 3688.0], [60.9, 3692.0], [61.0, 3697.0], [61.1, 3705.0], [61.2, 3708.0], [61.3, 3709.0], [61.4, 3711.0], [61.5, 3716.0], [61.6, 3719.0], [61.7, 3720.0], [61.8, 3727.0], [61.9, 3731.0], [62.0, 3735.0], [62.1, 3735.0], [62.2, 3740.0], [62.3, 3743.0], [62.4, 3749.0], [62.5, 3751.0], [62.6, 3755.0], [62.7, 3756.0], [62.8, 3759.0], [62.9, 3764.0], [63.0, 3767.0], [63.1, 3769.0], [63.2, 3775.0], [63.3, 3776.0], [63.4, 3778.0], [63.5, 3780.0], [63.6, 3781.0], [63.7, 3784.0], [63.8, 3784.0], [63.9, 3785.0], [64.0, 3785.0], [64.1, 3786.0], [64.2, 3787.0], [64.3, 3788.0], [64.4, 3791.0], [64.5, 3794.0], [64.6, 3797.0], [64.7, 3799.0], [64.8, 3800.0], [64.9, 3800.0], [65.0, 3804.0], [65.1, 3805.0], [65.2, 3806.0], [65.3, 3807.0], [65.4, 3809.0], [65.5, 3811.0], [65.6, 3812.0], [65.7, 3814.0], [65.8, 3815.0], [65.9, 3816.0], [66.0, 3817.0], [66.1, 3821.0], [66.2, 3822.0], [66.3, 3824.0], [66.4, 3826.0], [66.5, 3828.0], [66.6, 3832.0], [66.7, 3833.0], [66.8, 3835.0], [66.9, 3835.0], [67.0, 3838.0], [67.1, 3839.0], [67.2, 3839.0], [67.3, 3841.0], [67.4, 3842.0], [67.5, 3843.0], [67.6, 3845.0], [67.7, 3847.0], [67.8, 3848.0], [67.9, 3850.0], [68.0, 3853.0], [68.1, 3854.0], [68.2, 3856.0], [68.3, 3858.0], [68.4, 3862.0], [68.5, 3866.0], [68.6, 3868.0], [68.7, 3871.0], [68.8, 3873.0], [68.9, 3876.0], [69.0, 3877.0], [69.1, 3880.0], [69.2, 3882.0], [69.3, 3884.0], [69.4, 3888.0], [69.5, 3891.0], [69.6, 3897.0], [69.7, 3901.0], [69.8, 3913.0], [69.9, 3916.0], [70.0, 3926.0], [70.1, 3929.0], [70.2, 3930.0], [70.3, 3935.0], [70.4, 3942.0], [70.5, 3946.0], [70.6, 3954.0], [70.7, 3956.0], [70.8, 3960.0], [70.9, 3961.0], [71.0, 3965.0], [71.1, 3966.0], [71.2, 3974.0], [71.3, 3981.0], [71.4, 3984.0], [71.5, 3987.0], [71.6, 3989.0], [71.7, 3990.0], [71.8, 3993.0], [71.9, 4000.0], [72.0, 4006.0], [72.1, 4009.0], [72.2, 4013.0], [72.3, 4017.0], [72.4, 4019.0], [72.5, 4023.0], [72.6, 4024.0], [72.7, 4028.0], [72.8, 4032.0], [72.9, 4036.0], [73.0, 4042.0], [73.1, 4043.0], [73.2, 4045.0], [73.3, 4049.0], [73.4, 4054.0], [73.5, 4059.0], [73.6, 4064.0], [73.7, 4067.0], [73.8, 4072.0], [73.9, 4074.0], [74.0, 4074.0], [74.1, 4077.0], [74.2, 4082.0], [74.3, 4083.0], [74.4, 4086.0], [74.5, 4097.0], [74.6, 4104.0], [74.7, 4105.0], [74.8, 4110.0], [74.9, 4112.0], [75.0, 4114.0], [75.1, 4120.0], [75.2, 4123.0], [75.3, 4126.0], [75.4, 4131.0], [75.5, 4133.0], [75.6, 4138.0], [75.7, 4141.0], [75.8, 4145.0], [75.9, 4149.0], [76.0, 4154.0], [76.1, 4154.0], [76.2, 4157.0], [76.3, 4162.0], [76.4, 4167.0], [76.5, 4173.0], [76.6, 4177.0], [76.7, 4179.0], [76.8, 4182.0], [76.9, 4186.0], [77.0, 4189.0], [77.1, 4190.0], [77.2, 4192.0], [77.3, 4195.0], [77.4, 4198.0], [77.5, 4202.0], [77.6, 4208.0], [77.7, 4211.0], [77.8, 4219.0], [77.9, 4222.0], [78.0, 4225.0], [78.1, 4228.0], [78.2, 4233.0], [78.3, 4237.0], [78.4, 4244.0], [78.5, 4245.0], [78.6, 4249.0], [78.7, 4256.0], [78.8, 4258.0], [78.9, 4261.0], [79.0, 4270.0], [79.1, 4275.0], [79.2, 4276.0], [79.3, 4287.0], [79.4, 4290.0], [79.5, 4293.0], [79.6, 4300.0], [79.7, 4311.0], [79.8, 4324.0], [79.9, 4326.0], [80.0, 4334.0], [80.1, 4342.0], [80.2, 4351.0], [80.3, 4357.0], [80.4, 4359.0], [80.5, 4366.0], [80.6, 4370.0], [80.7, 4394.0], [80.8, 4401.0], [80.9, 4413.0], [81.0, 4419.0], [81.1, 4429.0], [81.2, 4440.0], [81.3, 4447.0], [81.4, 4449.0], [81.5, 4453.0], [81.6, 4456.0], [81.7, 4461.0], [81.8, 4464.0], [81.9, 4482.0], [82.0, 4484.0], [82.1, 4488.0], [82.2, 4493.0], [82.3, 4500.0], [82.4, 4507.0], [82.5, 4512.0], [82.6, 4514.0], [82.7, 4524.0], [82.8, 4526.0], [82.9, 4533.0], [83.0, 4536.0], [83.1, 4546.0], [83.2, 4550.0], [83.3, 4553.0], [83.4, 4556.0], [83.5, 4561.0], [83.6, 4563.0], [83.7, 4568.0], [83.8, 4576.0], [83.9, 4582.0], [84.0, 4585.0], [84.1, 4589.0], [84.2, 4595.0], [84.3, 4602.0], [84.4, 4610.0], [84.5, 4620.0], [84.6, 4624.0], [84.7, 4629.0], [84.8, 4637.0], [84.9, 4651.0], [85.0, 4657.0], [85.1, 4666.0], [85.2, 4671.0], [85.3, 4679.0], [85.4, 4682.0], [85.5, 4685.0], [85.6, 4689.0], [85.7, 4691.0], [85.8, 4695.0], [85.9, 4700.0], [86.0, 4702.0], [86.1, 4715.0], [86.2, 4719.0], [86.3, 4722.0], [86.4, 4728.0], [86.5, 4732.0], [86.6, 4733.0], [86.7, 4736.0], [86.8, 4741.0], [86.9, 4742.0], [87.0, 4747.0], [87.1, 4763.0], [87.2, 4774.0], [87.3, 4786.0], [87.4, 4792.0], [87.5, 4796.0], [87.6, 4805.0], [87.7, 4814.0], [87.8, 4816.0], [87.9, 4822.0], [88.0, 4833.0], [88.1, 4851.0], [88.2, 4865.0], [88.3, 4869.0], [88.4, 4875.0], [88.5, 4893.0], [88.6, 4900.0], [88.7, 4904.0], [88.8, 4913.0], [88.9, 4924.0], [89.0, 4932.0], [89.1, 4949.0], [89.2, 4954.0], [89.3, 4962.0], [89.4, 4964.0], [89.5, 4977.0], [89.6, 4979.0], [89.7, 5022.0], [89.8, 5029.0], [89.9, 5041.0], [90.0, 5048.0], [90.1, 5056.0], [90.2, 5071.0], [90.3, 5102.0], [90.4, 5105.0], [90.5, 5129.0], [90.6, 5160.0], [90.7, 5176.0], [90.8, 5186.0], [90.9, 5196.0], [91.0, 5208.0], [91.1, 5229.0], [91.2, 5252.0], [91.3, 5266.0], [91.4, 5276.0], [91.5, 5296.0], [91.6, 5300.0], [91.7, 5309.0], [91.8, 5319.0], [91.9, 5321.0], [92.0, 5326.0], [92.1, 5334.0], [92.2, 5336.0], [92.3, 5368.0], [92.4, 5378.0], [92.5, 5415.0], [92.6, 5425.0], [92.7, 5469.0], [92.8, 5483.0], [92.9, 5502.0], [93.0, 5509.0], [93.1, 5529.0], [93.2, 5538.0], [93.3, 5557.0], [93.4, 5574.0], [93.5, 5605.0], [93.6, 5642.0], [93.7, 5682.0], [93.8, 5721.0], [93.9, 5745.0], [94.0, 5756.0], [94.1, 5838.0], [94.2, 5879.0], [94.3, 6001.0], [94.4, 6042.0], [94.5, 6064.0], [94.6, 6133.0], [94.7, 6184.0], [94.8, 6305.0], [94.9, 6499.0], [95.0, 6510.0], [95.1, 6612.0], [95.2, 6647.0], [95.3, 6753.0], [95.4, 6884.0], [95.5, 6921.0], [95.6, 7268.0], [95.7, 7483.0], [95.8, 7537.0], [95.9, 7692.0], [96.0, 7822.0], [96.1, 7836.0], [96.2, 7852.0], [96.3, 7919.0], [96.4, 7923.0], [96.5, 7931.0], [96.6, 7934.0], [96.7, 7947.0], [96.8, 7959.0], [96.9, 7973.0], [97.0, 7986.0], [97.1, 8033.0], [97.2, 8078.0], [97.3, 8102.0], [97.4, 8108.0], [97.5, 8120.0], [97.6, 8125.0], [97.7, 8163.0], [97.8, 8181.0], [97.9, 8192.0], [98.0, 8198.0], [98.1, 8208.0], [98.2, 8278.0], [98.3, 8362.0], [98.4, 8492.0], [98.5, 8679.0], [98.6, 8693.0], [98.7, 8719.0], [98.8, 8724.0], [98.9, 8752.0], [99.0, 8884.0], [99.1, 8918.0], [99.2, 8928.0], [99.3, 9003.0], [99.4, 9171.0], [99.5, 9206.0], [99.6, 9215.0], [99.7, 9567.0], [99.8, 9811.0], [99.9, 14013.0], [100.0, 15190.0]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2336.0, "series": [{"data": [[600.0, 2049.0], [700.0, 1794.0], [800.0, 1351.0], [900.0, 989.0], [1000.0, 852.0], [1100.0, 1519.0], [1200.0, 1897.0], [1300.0, 1949.0], [1400.0, 1758.0], [1500.0, 1400.0], [1600.0, 1139.0], [1700.0, 802.0], [1800.0, 589.0], [1900.0, 408.0], [2000.0, 241.0], [2100.0, 179.0], [2200.0, 129.0], [2300.0, 79.0], [2400.0, 41.0], [2500.0, 28.0], [2600.0, 20.0], [2700.0, 9.0], [2800.0, 2.0], [2900.0, 5.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3500.0, 2.0], [3600.0, 2.0], [300.0, 1235.0], [400.0, 2192.0], [500.0, 2336.0]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[0.0, 2.0], [700.0, 2.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[800.0, 14.0], [900.0, 29.0], [1000.0, 61.0], [1100.0, 37.0], [1200.0, 36.0], [1300.0, 29.0], [1400.0, 42.0], [1500.0, 60.0], [1600.0, 42.0], [1700.0, 10.0], [1800.0, 22.0], [1900.0, 65.0], [2000.0, 30.0], [2100.0, 21.0], [2200.0, 47.0], [2300.0, 65.0], [2400.0, 60.0], [2500.0, 43.0], [2600.0, 62.0], [2700.0, 80.0], [2800.0, 47.0], [2900.0, 75.0], [3000.0, 35.0], [3100.0, 85.0], [3200.0, 84.0], [3300.0, 59.0], [3400.0, 138.0], [3500.0, 87.0], [3600.0, 61.0], [3700.0, 92.0], [3800.0, 123.0], [3900.0, 56.0], [4000.0, 66.0], [4100.0, 74.0], [4200.0, 52.0], [4300.0, 30.0], [4400.0, 38.0], [4500.0, 49.0], [4600.0, 40.0], [4700.0, 42.0], [4800.0, 26.0], [4900.0, 26.0], [5000.0, 16.0], [5100.0, 17.0], [5300.0, 22.0], [5200.0, 16.0], [5500.0, 16.0], [5400.0, 10.0], [5600.0, 6.0], [5800.0, 4.0], [5700.0, 8.0], [6100.0, 5.0], [6000.0, 6.0], [5900.0, 2.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 3.0], [6500.0, 4.0], [6600.0, 4.0], [6800.0, 3.0], [6700.0, 2.0], [6900.0, 3.0], [7200.0, 2.0], [7300.0, 1.0], [7400.0, 2.0], [7600.0, 2.0], [7500.0, 2.0], [7900.0, 20.0], [7800.0, 8.0], [8000.0, 5.0], [8100.0, 19.0], [8700.0, 8.0], [8300.0, 3.0], [8200.0, 5.0], [8400.0, 2.0], [8500.0, 1.0], [8600.0, 4.0], [8800.0, 3.0], [9000.0, 1.0], [8900.0, 6.0], [9100.0, 4.0], [9200.0, 4.0], [9600.0, 1.0], [9300.0, 1.0], [9500.0, 1.0], [9800.0, 2.0], [12500.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [15100.0, 1.0]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16722.0, "series": [{"data": [[0.0, 3468.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 16722.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7310.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58814996E12, "maxY": 1117.6091999999994, "series": [{"data": [[1.58815014E12, 100.0], [1.58814996E12, 100.0], [1.58815008E12, 100.0], [1.58815026E12, 81.51964582180416], [1.5881502E12, 100.0], [1.58815002E12, 100.0]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[1.58815026E12, 1.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58815026E12, 1117.6091999999994]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58815026E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 393.25, "minX": 1.0, "maxY": 15190.0, "series": [{"data": [[2.0, 1090.0], [3.0, 462.0], [4.0, 672.0], [5.0, 543.0], [6.0, 939.7142857142859], [7.0, 979.0], [8.0, 1232.0], [9.0, 703.5454545454546], [10.0, 448.3333333333333], [11.0, 857.0], [12.0, 1337.25], [13.0, 1407.0], [14.0, 1113.4], [15.0, 449.0], [16.0, 575.0], [17.0, 976.3333333333334], [18.0, 1114.5], [19.0, 1304.0], [20.0, 1162.5], [21.0, 820.25], [22.0, 612.0], [23.0, 1256.5], [24.0, 1196.0], [25.0, 869.6666666666667], [26.0, 1028.25], [27.0, 1300.0], [28.0, 1152.3333333333333], [29.0, 930.75], [30.0, 1129.5], [31.0, 687.0], [33.0, 1288.25], [32.0, 1109.0], [35.0, 1268.4545454545455], [34.0, 831.25], [37.0, 1056.0], [36.0, 820.0], [38.0, 1156.5], [41.0, 1031.6666666666667], [40.0, 790.3333333333334], [43.0, 898.2857142857143], [42.0, 559.0], [45.0, 1088.25], [44.0, 524.0], [47.0, 1080.0], [46.0, 914.0999999999999], [49.0, 875.5], [48.0, 1344.5], [51.0, 719.1428571428571], [50.0, 1023.2499999999999], [53.0, 815.6666666666666], [52.0, 956.0], [55.0, 764.0], [54.0, 739.9090909090909], [57.0, 890.0526315789473], [56.0, 833.0], [59.0, 970.7777777777778], [58.0, 731.0], [61.0, 527.0], [60.0, 587.6666666666666], [63.0, 1096.5714285714287], [62.0, 1476.0], [67.0, 777.3333333333334], [66.0, 983.060606060606], [65.0, 897.1999999999999], [64.0, 1233.4285714285716], [71.0, 852.4545454545454], [70.0, 821.2], [69.0, 765.0], [68.0, 858.6], [75.0, 698.0], [74.0, 852.6], [73.0, 694.5], [72.0, 638.3333333333334], [79.0, 1174.0243902439026], [78.0, 1153.0], [77.0, 1161.6842105263156], [76.0, 1287.85], [83.0, 867.0555555555554], [82.0, 1035.8387096774197], [81.0, 1042.8620689655172], [80.0, 701.0], [87.0, 1107.1666666666665], [86.0, 1191.1818181818182], [85.0, 1117.0337078651687], [84.0, 874.2857142857143], [91.0, 1433.674418604651], [90.0, 1262.2857142857142], [89.0, 1155.1249999999998], [88.0, 1198.5588235294115], [95.0, 984.2700729927005], [94.0, 899.4117647058823], [93.0, 1117.4285714285716], [92.0, 1396.1818181818182], [99.0, 938.4594594594595], [98.0, 1234.3571428571431], [97.0, 1111.3950617283954], [96.0, 1197.1666666666665], [100.0, 1066.3636862083526], [1.0, 1436.0]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[98.66423999999984, 1064.9112799999969]], "isOverall": false, "label": "write 25k-Aggregated", "isController": false}, {"data": [[1.0, 393.25]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.0, 393.25]], "isOverall": false, "label": "cleanup-Aggregated", "isController": false}, {"data": [[2.0, 15190.0], [3.0, 14013.0], [4.0, 12584.0], [5.0, 9811.0], [6.0, 9894.0], [7.0, 9567.0], [8.0, 9215.0], [9.0, 9171.0], [10.0, 9372.0], [11.0, 9210.0], [12.0, 9183.0], [13.0, 8920.0], [14.0, 8918.0], [15.0, 9236.0], [16.0, 8950.0], [17.0, 8901.0], [18.0, 8928.0], [19.0, 8886.0], [20.0, 8880.0], [21.0, 9624.0], [22.0, 8739.0], [23.0, 8717.0], [24.0, 8719.0], [25.0, 8722.0], [26.0, 8724.0], [27.0, 8725.0], [28.0, 8702.0], [29.0, 8693.0], [30.0, 8677.0], [31.0, 8679.0], [33.0, 9206.0], [32.0, 8682.0], [35.0, 9162.0], [34.0, 9196.0], [37.0, 8501.0], [36.0, 8492.0], [39.0, 8362.0], [38.0, 7268.0], [41.0, 8110.0], [40.0, 8450.0], [43.0, 8278.0], [42.0, 8208.0], [45.0, 8202.0], [44.0, 8198.0], [47.0, 8200.0], [46.0, 8192.0], [49.0, 8170.0], [48.0, 8193.0], [51.0, 8186.0], [50.0, 8184.0], [53.0, 9003.0], [52.0, 8958.0], [55.0, 8256.0], [54.0, 8155.0], [57.0, 8163.0], [56.0, 8317.0], [59.0, 8151.0], [58.0, 8033.0], [61.0, 8303.0], [60.0, 8125.0], [63.0, 8107.0], [62.0, 8120.0], [67.0, 8078.0], [66.0, 7947.0], [65.0, 8884.0], [64.0, 8100.0], [71.0, 7973.0], [70.0, 7985.0], [69.0, 6971.0], [68.0, 8181.0], [75.0, 7965.0], [73.0, 8006.5], [79.0, 8121.0], [78.0, 7832.0], [77.0, 7959.0], [76.0, 7852.0], [82.0, 7934.0], [81.0, 7938.0], [80.0, 7957.0], [87.0, 7990.0], [84.0, 8019.5], [91.0, 7856.0], [90.0, 7920.0], [89.0, 7924.0], [88.0, 7923.0], [95.0, 8752.0], [94.0, 8116.0], [93.0, 7911.0], [92.0, 7919.0], [99.0, 7836.0], [98.0, 7822.0], [97.0, 7846.0], [96.0, 8073.0], [103.0, 6668.0], [102.0, 8081.0], [101.0, 7930.0], [100.0, 7826.0], [107.0, 7817.0], [106.0, 7483.0], [105.0, 6647.0], [104.0, 7692.0], [111.0, 7537.0], [110.0, 7552.0], [109.0, 7998.0], [108.0, 7494.0], [115.0, 6884.0], [114.0, 7673.0], [113.0, 7288.0], [112.0, 7378.0], [119.0, 6826.0], [118.0, 6921.0], [117.0, 6647.0], [116.0, 6913.0], [123.0, 6510.0], [122.0, 6503.0], [121.0, 6753.0], [120.0, 6612.0], [127.0, 6184.0], [126.0, 6183.0], [125.0, 6484.0], [124.0, 6752.0], [135.0, 5996.0], [134.0, 6001.0], [133.0, 6305.0], [132.0, 6888.0], [131.0, 6064.0], [130.0, 6553.0], [129.0, 6561.0], [128.0, 6178.0], [143.0, 6133.0], [142.0, 6042.0], [141.0, 6015.0], [140.0, 5907.0], [139.0, 6063.0], [138.0, 6062.0], [137.0, 6499.0], [136.0, 6219.0], [151.0, 5502.0], [150.0, 5483.0], [149.0, 4615.0], [148.0, 5879.0], [147.0, 4702.0], [146.0, 4695.0], [145.0, 4700.0], [144.0, 5794.0], [159.0, 5574.0], [158.0, 4507.0], [157.0, 5412.0], [156.0, 5838.0], [155.0, 5721.0], [154.0, 5875.0], [153.0, 5756.0], [152.0, 5750.0], [167.0, 5336.0], [166.0, 4964.0], [164.0, 5745.0], [163.0, 5739.0], [162.0, 5642.0], [161.0, 5679.0], [160.0, 5704.0], [175.0, 5630.0], [173.0, 5543.0], [172.0, 5354.0], [171.0, 5309.0], [170.0, 5296.0], [169.0, 5306.0], [168.0, 5334.0], [183.0, 5257.0], [182.0, 5505.0], [181.0, 5229.0], [180.0, 5204.0], [179.0, 5581.0], [178.0, 5687.5], [176.0, 5509.0], [191.0, 4219.0], [190.0, 5425.0], [189.0, 5227.0], [188.0, 5557.0], [187.0, 5321.0], [186.0, 4245.0], [185.0, 5573.0], [184.0, 5303.0], [199.0, 5493.0], [198.0, 5500.0], [197.0, 5332.0], [196.0, 5522.0], [195.0, 5525.0], [194.0, 5529.0], [193.0, 5297.0], [192.0, 5537.0], [207.0, 4126.0], [206.0, 5105.0], [205.0, 5114.0], [203.0, 5435.0], [202.0, 5441.0], [201.0, 5123.0], [200.0, 5196.0], [215.0, 4962.0], [214.0, 5164.0], [212.0, 5054.0], [211.0, 5153.0], [210.0, 5329.0], [209.0, 4106.0], [208.0, 5398.0], [223.0, 4923.0], [222.0, 4058.0], [221.0, 5296.0], [220.0, 5336.0], [218.0, 5174.0], [217.0, 5424.0], [216.0, 5326.0], [231.0, 5186.0], [230.0, 5324.0], [229.0, 5217.0], [228.0, 4972.0], [227.0, 5334.0], [226.0, 5071.0], [225.0, 4042.0], [224.0, 5239.0], [239.0, 5292.0], [238.0, 5208.0], [237.0, 5009.0], [236.0, 4924.0], [235.0, 4868.0], [234.0, 4461.0], [232.0, 5176.0], [247.0, 5189.0], [246.0, 3902.0], [245.0, 3900.0], [244.0, 6499.0], [243.0, 5187.0], [242.0, 5276.0], [241.0, 5102.0], [240.0, 4912.0], [255.0, 4728.0], [254.0, 3835.0], [253.0, 5121.0], [252.0, 5102.0], [251.0, 4742.0], [250.0, 5682.0], [249.0, 3882.0], [248.0, 5724.0], [270.0, 4904.0], [271.0, 5056.0], [269.0, 4714.0], [268.0, 4747.0], [267.0, 4729.0], [266.0, 5605.0], [265.0, 4753.0], [264.0, 5032.0], [263.0, 4887.0], [257.0, 3848.0], [256.0, 4736.0], [259.0, 3842.0], [258.0, 3843.0], [262.0, 5048.0], [261.0, 4700.0], [260.0, 5039.0], [286.0, 5086.0], [287.0, 4881.0], [285.0, 4678.0], [284.0, 4913.0], [283.0, 4732.0], [282.0, 4815.0], [281.0, 5104.0], [280.0, 4816.0], [279.0, 4813.0], [273.0, 5239.0], [275.0, 4715.0], [274.0, 4702.0], [278.0, 4733.0], [277.0, 5129.0], [276.0, 4736.0], [291.0, 4666.0], [302.0, 4790.0], [303.0, 4924.0], [301.0, 4699.666666666667], [290.0, 4610.0], [289.0, 4979.0], [288.0, 4932.0], [298.0, 5029.0], [297.0, 4379.5], [295.0, 4689.0], [294.0, 4814.0], [293.0, 4796.0], [292.0, 4870.0], [318.0, 3644.0], [319.0, 3644.0], [317.0, 3645.0], [316.0, 4550.0], [315.0, 4550.0], [314.0, 3670.0], [313.0, 3660.0], [312.0, 4954.0], [311.0, 3683.0], [305.0, 4977.0], [304.0, 4922.0], [307.0, 4628.0], [306.0, 5469.0], [310.0, 4324.0], [308.0, 4851.0], [334.0, 4536.0], [335.0, 4514.0], [333.0, 4272.5], [323.0, 3653.0], [322.0, 4304.0], [320.0, 4977.0], [331.0, 4893.0], [330.0, 3613.0], [329.0, 4557.0], [328.0, 4793.0], [327.0, 4900.0], [326.0, 4533.0], [325.0, 3642.0], [324.0, 4818.0], [350.0, 4464.0], [351.0, 4648.0], [349.0, 5184.0], [348.0, 4903.0], [347.0, 4680.0], [346.0, 4730.0], [345.0, 4718.0], [344.0, 4726.0], [343.0, 4689.25], [337.0, 4832.0], [336.0, 3647.0], [339.0, 4803.0], [338.0, 4849.0], [366.0, 4869.0], [367.0, 4684.0], [365.0, 3524.0], [364.0, 3553.0], [363.0, 4843.0], [362.0, 4776.0], [361.0, 5032.333333333333], [358.0, 4769.0], [353.0, 4695.0], [352.0, 4651.0], [355.0, 4719.0], [354.0, 5378.0], [357.0, 4429.0], [356.0, 4720.0], [382.0, 4821.0], [383.0, 4793.0], [381.0, 4805.0], [380.0, 3523.0], [379.0, 5539.0], [378.0, 4791.0], [376.0, 3505.0], [375.0, 4486.0], [369.0, 4511.0], [368.0, 4679.0], [371.0, 5415.0], [370.0, 4563.0], [374.0, 4615.0], [373.0, 5319.0], [372.0, 4666.0], [397.0, 4580.5], [395.0, 3481.0], [394.0, 4360.0], [393.0, 3996.5], [391.0, 4546.0], [385.0, 4533.0], [384.0, 4403.0], [390.0, 5266.0], [389.0, 4786.0], [388.0, 4722.0], [387.0, 5274.0], [386.0, 4394.0], [414.0, 4342.0], [415.0, 3446.0], [413.0, 4461.0], [411.0, 4128.5], [409.0, 4355.0], [408.0, 3460.0], [407.0, 4370.0], [406.0, 4326.25], [402.0, 4743.0], [400.0, 4270.666666666667], [430.0, 4482.0], [431.0, 4368.0], [429.0, 4676.0], [428.0, 4691.0], [427.0, 4691.0], [426.0, 5255.0], [425.0, 4484.0], [424.0, 3912.0], [422.0, 3448.0], [417.0, 3451.0], [419.0, 4715.0], [418.0, 4590.0], [421.0, 3456.0], [420.0, 3454.0], [445.0, 4553.0], [447.0, 4406.0], [444.0, 4626.5], [435.0, 4326.0], [433.0, 3404.0], [432.0, 4290.0], [442.0, 4584.0], [441.0, 4337.0], [440.0, 4290.0], [439.0, 4685.0], [438.0, 4698.0], [437.0, 4783.666666666667], [451.0, 4256.0], [462.0, 5830.0], [461.0, 4286.75], [457.0, 4250.0], [456.0, 4537.0], [455.0, 4256.0], [454.0, 4498.0], [452.0, 4270.0], [450.0, 4567.0], [449.0, 4421.5], [477.0, 4228.0], [478.0, 4637.0], [476.0, 4356.0], [467.0, 4629.0], [466.0, 4413.0], [465.0, 4495.0], [475.0, 4223.0], [474.0, 4343.0], [473.0, 4401.5], [471.0, 4556.0], [470.0, 4429.0], [469.0, 4430.0], [493.0, 4576.5], [491.0, 3287.0], [490.0, 4203.0], [489.0, 4746.333333333333], [486.0, 3302.0], [485.0, 4187.0], [484.0, 4209.666666666667], [483.0, 4396.0], [480.0, 4354.5], [511.0, 3248.0], [509.0, 4404.666666666667], [506.0, 4230.0], [504.0, 4339.5], [499.0, 4489.0], [498.0, 4515.5], [496.0, 4128.0], [543.0, 3653.2], [538.0, 3853.0], [517.0, 4511.0], [516.0, 4500.0], [515.0, 3648.0], [512.0, 3249.0], [535.0, 4732.5], [533.0, 4125.5], [531.0, 4120.0], [530.0, 3840.3333333333335], [528.0, 3227.5], [526.0, 4233.0], [524.0, 3536.0], [521.0, 3280.0], [520.0, 3551.0], [573.0, 4419.0], [574.0, 3177.0], [571.0, 4266.5], [569.0, 4428.0], [568.0, 3657.0], [549.0, 3915.25], [545.0, 4189.0], [566.0, 4213.0], [564.0, 4144.0], [563.0, 4230.0], [559.0, 4052.0], [558.0, 4273.5], [554.0, 3795.2], [596.0, 4131.0], [606.0, 4289.8], [601.0, 4276.0], [600.0, 4260.0], [582.0, 4181.0], [581.0, 4266.5], [579.0, 4549.666666666667], [576.0, 4791.333333333333], [590.0, 4372.0], [589.0, 4341.0], [588.0, 4514.0], [586.0, 4364.0], [585.0, 4357.0], [584.0, 4637.0], [599.0, 3960.0], [598.0, 4138.0], [597.0, 4032.0], [595.0, 4875.0], [594.0, 4271.5], [635.0, 4231.0], [639.0, 4154.75], [633.0, 4067.8333333333335], [612.0, 4249.0], [609.0, 4191.0], [608.0, 4528.0], [627.0, 4154.0], [626.0, 4109.0], [625.0, 4185.0], [624.0, 4338.666666666667], [623.0, 4102.5], [617.0, 4114.0], [616.0, 4196.0], [660.0, 3611.5], [670.0, 3929.0], [656.0, 4149.0], [669.0, 2951.0], [668.0, 3551.5], [664.0, 3989.0], [655.0, 3997.5], [643.0, 4069.0], [641.0, 4003.5], [647.0, 2961.0], [644.0, 4194.0], [653.0, 3429.5], [651.0, 2972.0], [650.0, 3558.0], [648.0, 3345.0], [663.0, 3876.0], [662.0, 2944.0], [661.0, 4133.0], [658.0, 4067.0], [657.0, 4104.0], [689.0, 4110.0], [701.0, 4740.0], [700.0, 4362.0], [697.0, 3990.0], [696.0, 4689.0], [687.0, 2939.0], [676.0, 3746.6666666666665], [673.0, 3680.3333333333335], [679.0, 2949.0], [678.0, 2950.0], [686.0, 4666.0], [685.0, 3942.5], [683.0, 3727.6666666666665], [680.0, 3403.0], [695.0, 3376.5], [693.0, 4049.0], [692.0, 3224.0], [688.0, 3970.0], [729.0, 4279.666666666667], [722.0, 3816.5], [734.0, 4083.0], [733.0, 3876.3333333333335], [730.0, 3735.0], [718.0, 3952.3333333333335], [704.0, 4164.0], [706.0, 4198.0], [705.0, 3888.0], [708.0, 3865.0], [707.0, 3877.0], [711.0, 4182.0], [710.0, 3858.0], [716.0, 5340.0], [714.0, 3859.0], [713.0, 3843.0], [712.0, 3848.0], [726.0, 3804.0], [725.0, 5320.0], [724.0, 4151.5], [721.0, 3916.0], [720.0, 4646.0], [739.0, 4364.5], [761.0, 3769.0], [760.0, 3900.0], [737.0, 4058.0], [736.0, 4081.0], [757.0, 4007.5], [755.0, 4010.0], [753.0, 3913.3333333333335], [750.0, 4024.0], [749.0, 3975.0], [746.0, 4281.5], [744.0, 4054.0], [798.0, 3835.0], [799.0, 3757.0], [797.0, 3709.8], [796.0, 4030.3333333333335], [787.0, 3853.5], [785.0, 3839.0], [784.0, 4150.5], [782.0, 3813.3333333333335], [768.0, 3878.142857142857], [773.0, 3834.0], [772.0, 3904.75], [779.0, 5319.0], [778.0, 3936.0], [776.0, 4354.0], [830.0, 3918.0], [831.0, 3753.0], [817.0, 3762.0], [816.0, 4104.0], [829.0, 3715.0], [828.0, 3797.75], [826.0, 4268.0], [825.0, 3739.0], [824.0, 3813.0], [804.0, 3708.5], [802.0, 3964.0], [815.0, 3814.333333333333], [814.0, 4113.0], [808.0, 3886.0], [821.0, 4017.0], [819.0, 3889.5], [859.0, 3955.0], [860.0, 4103.0], [856.0, 3785.0], [839.0, 3805.0], [832.0, 3832.0], [855.0, 3807.0], [854.0, 3913.0], [853.0, 3767.0], [852.0, 4090.8], [847.0, 3567.75], [843.0, 3962.75], [842.0, 3796.5], [841.0, 4577.0], [840.0, 4327.0], [894.0, 3777.0], [895.0, 3783.0], [892.0, 3788.0], [891.0, 3740.25], [887.0, 3795.5], [886.0, 3710.5], [883.0, 3811.6666666666665], [881.0, 3829.0], [878.0, 3778.0], [869.0, 3931.5], [867.0, 3850.8571428571427], [876.0, 3903.5], [874.0, 3951.0], [872.0, 3783.0], [921.0, 4101.5], [926.0, 3612.3333333333335], [923.0, 3960.0], [922.0, 3547.0], [917.0, 3898.8571428571427], [910.0, 3966.0], [900.0, 3769.0], [897.0, 3794.5], [902.0, 3806.0], [901.0, 3811.0], [909.0, 3839.0], [908.0, 3706.0], [905.0, 3772.6666666666665], [947.0, 3814.0], [956.0, 3678.6666666666665], [953.0, 3751.0], [952.0, 3787.0], [934.0, 4110.0], [932.0, 3983.6666666666665], [951.0, 3764.0], [950.0, 3696.0], [948.0, 3479.0], [945.0, 3831.25], [941.0, 3837.5], [939.0, 3660.0], [937.0, 3811.6666666666665], [988.0, 3527.0], [989.0, 3441.0], [987.0, 4324.0], [986.0, 3902.5], [984.0, 3491.0], [967.0, 3752.3333333333335], [964.0, 3467.0], [962.0, 4383.0], [961.0, 3718.2], [972.0, 3598.5], [970.0, 3737.0], [983.0, 3843.3333333333335], [980.0, 3581.5], [978.0, 3416.0], [977.0, 3685.2], [999.0, 3518.0], [1020.0, 3110.5], [1023.0, 2860.0], [1018.0, 3505.25], [1014.0, 3674.8], [1004.0, 3471.0], [1002.0, 3846.5], [1000.0, 3789.0], [998.0, 3806.0], [995.0, 3826.5], [992.0, 3699.3333333333335], [1072.0, 2335.7], [1082.0, 868.0], [1076.0, 1105.5], [1074.0, 1985.0], [1024.0, 3327.0], [1032.0, 3141.0], [1050.0, 2399.0], [1046.0, 3615.0], [1042.0, 4287.0], [1040.0, 3525.6], [1084.0, 1950.6], [1086.0, 940.3333333333334], [1056.0, 2648.75], [1058.0, 989.0], [1060.0, 973.0], [1062.0, 999.0], [1064.0, 2396.9230769230767], [1066.0, 1166.0], [1068.0, 1676.5], [1070.0, 992.0], [1080.0, 1034.0], [1078.0, 2694.8333333333335], [1096.0, 1064.0], [1140.0, 1033.0], [1118.0, 2369.5], [1088.0, 1060.0], [1090.0, 1956.0], [1092.0, 1226.0], [1094.0, 1070.0], [1116.0, 1095.0], [1114.0, 2961.3333333333335], [1112.0, 2418.75], [1108.0, 1026.0], [1110.0, 3539.0], [1104.0, 2442.0], [1124.0, 2434.142857142857], [1120.0, 1012.0], [1150.0, 3871.0], [1146.0, 3871.3333333333335], [1142.0, 3899.0], [1126.0, 1881.6666666666665], [1130.0, 2186.5], [1138.0, 1595.6], [1136.0, 1026.0], [1102.0, 1030.0], [1100.0, 1147.0], [1134.0, 1714.75], [1132.0, 977.0], [1202.0, 3181.0], [1206.0, 3365.6666666666665], [1152.0, 3633.5], [1176.0, 3153.0], [1174.0, 3495.0], [1168.0, 3537.0], [1214.0, 3416.8], [1186.0, 3538.0], [1164.0, 3328.0], [1160.0, 3172.0], [1158.0, 3634.5], [1156.0, 3562.0], [1190.0, 3518.0], [1188.0, 3159.0], [1216.0, 3431.5], [1276.0, 3416.5], [1226.0, 1177.3333333333333], [1218.0, 4192.0], [1230.0, 3982.0], [1228.0, 3436.8], [1244.0, 3498.8333333333335], [1238.0, 3376.0], [1236.0, 3637.0], [1232.0, 3562.6666666666665], [1250.0, 3482.0], [1256.0, 3403.0], [1258.0, 3450.0], [1262.0, 3482.0], [1248.0, 1989.5], [1268.0, 1229.5], [1270.0, 3404.0], [1264.0, 3443.5], [1274.0, 3359.5], [1272.0, 3447.5], [1328.0, 2986.0], [1320.0, 3473.0], [1338.0, 2926.0], [1334.0, 3192.0], [1292.0, 3065.0], [1290.0, 3317.0], [1288.0, 3601.5], [1286.0, 3451.0], [1282.0, 3300.0], [1280.0, 3957.0], [1308.0, 2939.0], [1306.0, 3563.0], [1304.0, 3277.0], [1298.0, 3804.0], [1356.0, 3082.0], [1404.0, 2907.0], [1372.0, 1252.0], [1368.0, 3206.0], [1366.0, 2913.5], [1364.0, 3173.0], [1362.0, 3034.5], [1360.0, 3735.0], [1390.0, 2666.6666666666665], [1388.0, 3128.0], [1386.0, 3175.0], [1378.0, 3036.5], [1376.0, 2974.6666666666665], [1392.0, 1246.0], [1354.0, 3259.0], [1352.0, 2961.0], [1350.0, 3167.0], [1348.0, 3348.0], [1346.0, 3277.0], [1344.0, 3059.6666666666665], [1396.0, 2910.3333333333335], [1398.0, 2797.0], [1406.0, 3113.0], [1402.0, 3439.6666666666665], [1416.0, 3357.0], [1464.0, 3498.5], [1410.0, 3930.3333333333335], [1414.0, 3521.25], [1418.0, 3263.3333333333335], [1456.0, 2779.0], [1460.0, 3363.5], [1458.0, 3265.0], [1438.0, 1321.3333333333333], [1430.0, 3545.0], [1468.0, 3480.0], [1442.0, 3031.3333333333335], [1446.0, 2956.0], [1448.0, 2703.0], [1450.0, 2737.0], [1454.0, 3067.0], [1466.0, 2752.0], [1462.0, 3509.0], [1476.0, 1355.0], [1478.0, 3160.428571428571], [1502.0, 1319.3333333333333], [1500.0, 3433.5], [1498.0, 3474.0], [1496.0, 3471.0], [1492.0, 3441.166666666667], [1472.0, 3421.5], [1518.0, 3443.5], [1514.0, 3403.0], [1506.0, 3381.0], [1532.0, 2139.0], [1530.0, 2550.25], [1526.0, 3581.0], [1522.0, 4083.0], [1534.0, 1940.25], [1538.0, 2038.3333333333335], [1572.0, 2842.3333333333335], [1536.0, 2572.0], [1540.0, 2570.0], [1566.0, 2060.5], [1564.0, 3432.0], [1560.0, 3244.0], [1554.0, 2739.0], [1580.0, 2833.666666666667], [1574.0, 2337.5], [1570.0, 2653.0], [1568.0, 1378.0], [1596.0, 2592.6666666666665], [1592.0, 3354.0], [1586.0, 3008.3333333333335], [1584.0, 3278.0], [1548.0, 3311.0], [1546.0, 4028.0], [1544.0, 3051.0], [1656.0, 2439.6666666666665], [1662.0, 2323.3333333333335], [1632.0, 3775.0], [1636.0, 2957.5], [1640.0, 2807.0], [1646.0, 2808.5], [1644.0, 2812.0], [1660.0, 2335.6666666666665], [1658.0, 2112.5], [1654.0, 3072.0], [1648.0, 2941.0], [1600.0, 3175.0], [1602.0, 2384.0], [1604.0, 2382.0], [1606.0, 3211.0], [1610.0, 3196.0], [1612.0, 2419.0], [1614.0, 3186.0], [1626.0, 2839.5], [1622.0, 3150.3333333333335], [1618.0, 3205.0], [1616.0, 3065.0], [1722.0, 2984.0], [1716.0, 3005.3333333333335], [1702.0, 1996.0], [1698.0, 3004.0], [1696.0, 3006.0], [1708.0, 2144.0], [1720.0, 2955.0], [1712.0, 3022.0], [1664.0, 2749.0], [1666.0, 2743.0], [1668.0, 2751.0], [1672.0, 2815.0], [1676.0, 2737.6666666666665], [1678.0, 2668.0], [1694.0, 3227.6666666666665], [1688.0, 2671.0], [1686.0, 2670.0], [1684.0, 2670.0], [1682.0, 2672.0], [1680.0, 2686.0], [1782.0, 2638.0], [1786.0, 2622.0], [1790.0, 2587.0], [1774.0, 2651.0], [1772.0, 2524.75], [1766.0, 2736.0], [1764.0, 2694.6666666666665], [1788.0, 2607.0], [1784.0, 2952.0], [1780.0, 2636.0], [1778.0, 3243.0], [1776.0, 2658.0], [1742.0, 2778.5], [1740.0, 2851.6666666666665], [1734.0, 3016.0], [1730.0, 2787.0], [1728.0, 3131.6], [1756.0, 2728.0], [1754.0, 2722.0], [1748.0, 2744.5], [1744.0, 2757.0], [1798.0, 2746.0], [1826.0, 2227.5], [1796.0, 1842.8], [1802.0, 2723.0], [1804.0, 2755.0], [1806.0, 2707.0], [1808.0, 2118.0], [1810.0, 1439.75], [1812.0, 3074.0], [1814.0, 2991.0], [1816.0, 2516.6666666666665], [1820.0, 3003.0], [1822.0, 2290.0], [1792.0, 3139.0], [1794.0, 3144.0], [1834.0, 2342.5], [1832.0, 2386.5], [1836.0, 2704.5], [1830.0, 1480.5], [1828.0, 2419.0], [1824.0, 1771.857142857143], [1854.0, 2307.0], [1852.0, 2323.0], [1850.0, 2324.0], [1848.0, 2339.0], [1846.0, 2164.5], [1844.0, 2594.0], [1838.0, 2024.0], [1842.0, 2229.5], [1840.0, 2395.222222222222], [1866.0, 2293.0], [1906.0, 1881.0], [1856.0, 1942.5], [1860.0, 2771.0], [1862.0, 2235.0], [1864.0, 2210.5], [1868.0, 2185.8], [1870.0, 2310.6666666666665], [1904.0, 2011.0], [1908.0, 1516.0], [1912.0, 1621.3333333333333], [1914.0, 1942.0], [1858.0, 1945.0], [1876.0, 1942.6666666666667], [1874.0, 2235.0], [1872.0, 2347.0], [1878.0, 2524.3333333333335], [1882.0, 2325.0], [1880.0, 2340.0], [1888.0, 1566.3333333333333], [1892.0, 2134.0], [1890.0, 1675.6666666666667], [1896.0, 2366.5], [1900.0, 2079.0], [1898.0, 2400.0], [1902.0, 1933.0], [1894.0, 1982.0], [1886.0, 2023.4], [1884.0, 1802.5], [1948.0, 2222.0], [1920.0, 2179.6], [1946.0, 2154.6666666666665], [1944.0, 2115.1666666666665], [1942.0, 2128.0], [1940.0, 1911.0], [1938.0, 1907.5], [1976.0, 1854.3333333333335], [1974.0, 2046.0], [1962.0, 1644.0], [1966.0, 2114.0], [1960.0, 1641.0], [1958.0, 2086.0], [1956.0, 2176.0], [1954.0, 2168.0], [1952.0, 2206.0], [1982.0, 1994.0], [1986.0, 1547.0], [1992.0, 1793.5], [1984.0, 1867.5], [1994.0, 1690.5], [1998.0, 1848.5], [1996.0, 1894.0], [2000.0, 1530.5], [2004.0, 1783.0], [2006.0, 1886.0], [2008.0, 1859.0], [2012.0, 1810.3333333333333], [2026.0, 1590.0], [2024.0, 1660.0], [2022.0, 1633.0], [2020.0, 1612.0], [2016.0, 1762.0], [1029.0, 2916.4], [1063.0, 1045.0], [1075.0, 910.5], [1073.0, 1076.0], [1055.0, 998.0], [1035.0, 3654.6666666666665], [1053.0, 2387.3333333333335], [1049.0, 2402.6666666666665], [1045.0, 2903.5], [1043.0, 3435.0], [1041.0, 4293.0], [1081.0, 1772.3333333333333], [1057.0, 993.0], [1059.0, 1169.6666666666667], [1061.0, 1006.0], [1067.0, 1116.0], [1065.0, 1176.5], [1069.0, 1541.6], [1071.0, 969.0], [1085.0, 1597.0], [1083.0, 1651.0], [1079.0, 2053.0], [1077.0, 1056.0], [1095.0, 1928.0], [1097.0, 1964.0], [1089.0, 2796.4285714285716], [1091.0, 2391.0], [1093.0, 1736.1666666666667], [1117.0, 2616.75], [1115.0, 1241.75], [1113.0, 1177.6666666666665], [1111.0, 1115.0], [1109.0, 3546.5], [1107.0, 2358.0], [1105.0, 1063.0], [1125.0, 2564.5], [1123.0, 3576.5], [1121.0, 1061.0], [1143.0, 3615.0], [1127.0, 3897.0], [1129.0, 2623.3333333333335], [1139.0, 2287.5], [1137.0, 3614.5], [1101.0, 1658.9374999999998], [1099.0, 1190.0], [1135.0, 2288.5], [1133.0, 2952.75], [1155.0, 1127.0], [1167.0, 3535.5], [1183.0, 3692.25], [1179.0, 3797.5], [1177.0, 3160.0], [1175.0, 3474.0], [1173.0, 3524.5], [1185.0, 3287.0], [1209.0, 3486.0], [1207.0, 3120.0], [1203.0, 3448.0], [1201.0, 3358.2727272727275], [1165.0, 3349.5], [1159.0, 3622.25], [1249.0, 2662.6], [1223.0, 3313.0], [1221.0, 3585.25], [1237.0, 3521.0], [1233.0, 3382.0], [1253.0, 3479.6666666666665], [1255.0, 3704.5], [1257.0, 3488.0], [1261.0, 3602.6666666666665], [1269.0, 1191.0], [1267.0, 1218.0], [1279.0, 3366.3333333333335], [1335.0, 2969.0], [1329.0, 3315.0], [1341.0, 3145.6666666666665], [1315.0, 3572.0], [1317.0, 3828.0], [1327.0, 3407.25], [1323.0, 3872.3333333333335], [1339.0, 3781.0], [1333.0, 3263.3333333333335], [1331.0, 2981.0], [1295.0, 3286.0], [1293.0, 2920.0], [1291.0, 3318.0], [1289.0, 3850.0], [1285.0, 3209.5], [1283.0, 3454.0], [1311.0, 3442.0], [1305.0, 3990.0], [1301.0, 3818.6666666666665], [1297.0, 3022.0], [1359.0, 3216.6666666666665], [1373.0, 2858.8], [1369.0, 2874.0], [1367.0, 3164.0], [1363.0, 3688.0], [1387.0, 3161.0], [1385.0, 3431.0], [1383.0, 3451.4], [1353.0, 2956.0], [1393.0, 3401.6666666666665], [1397.0, 3064.0], [1407.0, 3079.0], [1399.0, 3369.0], [1423.0, 3260.6], [1445.0, 3307.0], [1439.0, 1239.5], [1457.0, 3009.0], [1437.0, 1242.5], [1431.0, 2948.0], [1429.0, 3360.5], [1441.0, 3296.0], [1443.0, 3237.5], [1447.0, 3535.0], [1449.0, 3031.0], [1451.0, 3136.0], [1465.0, 3494.0], [1461.0, 3503.0], [1485.0, 3807.0], [1521.0, 1912.0], [1479.0, 3253.0], [1483.0, 3556.75], [1495.0, 3401.0], [1491.0, 4238.0], [1503.0, 3442.0], [1519.0, 2481.0], [1511.0, 2671.5], [1509.0, 3690.5], [1507.0, 3410.0], [1525.0, 2507.6666666666665], [1535.0, 1797.3333333333333], [1533.0, 2282.5], [1589.0, 3193.0], [1599.0, 2775.3333333333335], [1541.0, 1340.0], [1537.0, 3344.0], [1539.0, 3404.0], [1567.0, 1845.0], [1563.0, 3052.2], [1557.0, 2876.0], [1555.0, 3029.0], [1577.0, 1429.3333333333333], [1573.0, 2453.5], [1571.0, 1445.0], [1569.0, 1431.0], [1595.0, 3497.0], [1593.0, 3841.0], [1587.0, 3216.5], [1551.0, 3270.0], [1549.0, 3295.0], [1545.0, 2550.0], [1597.0, 3260.5], [1657.0, 2182.5], [1659.0, 1518.0], [1663.0, 1786.0], [1639.0, 2854.3333333333335], [1641.0, 2807.0], [1653.0, 2846.8], [1631.0, 3018.75], [1601.0, 2384.0], [1603.0, 2925.0], [1605.0, 3357.0], [1609.0, 2978.0], [1611.0, 3162.0], [1613.0, 3189.0], [1615.0, 3457.0], [1627.0, 3262.0], [1625.0, 3263.5], [1621.0, 2927.0], [1617.0, 3458.0], [1721.0, 3140.25], [1723.0, 2981.0], [1701.0, 3022.0], [1699.0, 2804.0], [1707.0, 2656.3333333333335], [1711.0, 3044.6666666666665], [1713.0, 2834.0], [1695.0, 2646.0], [1665.0, 2752.0], [1669.0, 2754.5], [1673.0, 2932.0], [1677.0, 2870.0], [1679.0, 3045.0], [1691.0, 2828.3333333333335], [1687.0, 2834.0], [1685.0, 2866.5], [1681.0, 2667.0], [1789.0, 2596.0], [1773.0, 2080.5], [1791.0, 2587.0], [1761.0, 2696.25], [1769.0, 2965.5], [1767.0, 2692.0], [1787.0, 2616.0], [1785.0, 2888.0], [1781.0, 2630.0], [1779.0, 2653.0], [1777.0, 2653.0], [1743.0, 2770.0], [1737.0, 3061.0], [1729.0, 2817.0], [1757.0, 2734.0], [1755.0, 2735.0], [1751.0, 2915.25], [1747.0, 2747.0], [1805.0, 2739.0], [1807.0, 2107.5], [1795.0, 1892.5], [1797.0, 2602.0], [1799.0, 2585.0], [1801.0, 2654.0], [1803.0, 2762.0], [1809.0, 2121.0], [1811.0, 2682.5], [1813.0, 3109.0], [1815.0, 3090.0], [1819.0, 2503.6666666666665], [1817.0, 2468.0], [1793.0, 2582.0], [1821.0, 2544.75], [1837.0, 1877.7142857142858], [1833.0, 2979.0], [1835.0, 2598.25], [1831.0, 2561.3333333333335], [1829.0, 2283.0], [1827.0, 2094.8], [1855.0, 1986.0], [1853.0, 2288.0], [1825.0, 2522.285714285714], [1851.0, 2281.0], [1849.0, 2604.5], [1847.0, 2349.5], [1845.0, 2269.0], [1843.0, 1609.625], [1841.0, 1991.6666666666667], [1867.0, 2174.5], [1861.0, 1678.6], [1863.0, 2476.5], [1865.0, 2377.0], [1871.0, 2281.0], [1905.0, 1933.0], [1907.0, 1981.8], [1909.0, 1732.7142857142858], [1911.0, 2136.8333333333335], [1919.0, 1659.3333333333333], [1917.0, 2292.125], [1915.0, 2036.75], [1859.0, 1545.0], [1857.0, 2123.0], [1875.0, 2241.75], [1873.0, 2355.0], [1879.0, 2659.0], [1877.0, 2357.5], [1883.0, 2213.0], [1881.0, 2326.5], [1891.0, 1996.8], [1889.0, 2412.5], [1893.0, 1808.0], [1895.0, 2100.0], [1899.0, 2514.0], [1901.0, 2260.6666666666665], [1903.0, 2348.3333333333335], [1897.0, 1848.6666666666667], [1887.0, 1881.6], [1885.0, 1517.0], [1947.0, 2105.5], [1983.0, 2002.5], [1951.0, 2277.0], [1949.0, 2047.2142857142858], [1945.0, 1948.0], [1943.0, 2294.0], [1941.0, 1941.0], [1939.0, 2083.0], [1937.0, 2057.5], [1929.0, 1629.0], [1933.0, 1612.0], [1973.0, 2064.0], [1961.0, 1706.25], [1965.0, 2004.5], [1963.0, 2090.3333333333335], [1967.0, 2017.0], [1959.0, 2176.0], [1957.0, 2129.0], [1955.0, 2187.0], [1953.0, 2235.0], [1981.0, 1923.0], [1987.0, 2000.0], [2013.0, 1811.0], [1999.0, 1751.5], [1991.0, 1804.3333333333333], [1989.0, 1894.5], [1985.0, 1984.0], [1993.0, 1911.5], [1995.0, 1954.0], [2001.0, 1491.0], [2003.0, 1821.0], [2007.0, 1737.0], [2009.0, 1858.0], [2011.0, 1586.5], [2027.0, 1599.0], [2025.0, 1608.0], [2017.0, 1704.0], [1.0, 14212.0]], "isOverall": false, "label": "read 2.5k", "isController": false}, {"data": [[1117.6088000000038, 3452.698000000004]], "isOverall": false, "label": "read 2.5k-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2027.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1618.8, "minX": 1.58814996E12, "maxY": 643179.35, "series": [{"data": [[1.58815014E12, 14288.0], [1.58814996E12, 1618.8], [1.58815008E12, 14166.4], [1.58815026E12, 374864.48333333334], [1.5881502E12, 14298.133333333333], [1.58815002E12, 14384.266666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58815014E12, 638875.9833333333], [1.58814996E12, 72382.63333333333], [1.58815008E12, 633437.25], [1.58815026E12, 225865.48333333334], [1.5881502E12, 639328.7], [1.58815002E12, 643179.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58815026E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 393.25, "minX": 1.58814996E12, "maxY": 3452.698000000004, "series": [{"data": [[1.58815014E12, 1068.2867021276606], [1.58814996E12, 1100.654147104852], [1.58815008E12, 1069.2077968526464], [1.58815026E12, 1064.6297731045913], [1.5881502E12, 1060.6383770375658], [1.58815002E12, 1057.6414230362832]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[1.58815026E12, 393.25]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58815026E12, 3452.698000000004]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58815026E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58814996E12, "maxY": 3178.389599999999, "series": [{"data": [[1.58815014E12, 0.0], [1.58814996E12, 0.0], [1.58815008E12, 0.0], [1.58815026E12, 0.0], [1.5881502E12, 0.0], [1.58815002E12, 0.0]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[1.58815026E12, 390.75]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58815026E12, 3178.389599999999]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58815026E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 261.8727172108466, "minX": 1.58814996E12, "maxY": 2183.4888000000055, "series": [{"data": [[1.58815014E12, 268.87127659574446], [1.58814996E12, 354.8904538341161], [1.58815008E12, 266.139663805436], [1.58815026E12, 261.8727172108466], [1.5881502E12, 265.2051736357175], [1.58815002E12, 264.53346248679054]], "isOverall": false, "label": "write 25k", "isController": false}, {"data": [[1.58815026E12, 293.75]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58815026E12, 2183.4888000000055]], "isOverall": false, "label": "read 2.5k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58815026E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 306.0, "minX": 1.58814996E12, "maxY": 15190.0, "series": [{"data": [[1.58815014E12, 2988.0], [1.58814996E12, 2636.0], [1.58815008E12, 2773.0], [1.58815026E12, 15190.0], [1.5881502E12, 2932.0], [1.58815002E12, 3666.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58815014E12, 312.0], [1.58814996E12, 320.0], [1.58815008E12, 307.0], [1.58815026E12, 306.0], [1.5881502E12, 316.0], [1.58815002E12, 308.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58815014E12, 1704.0], [1.58814996E12, 1894.0], [1.58815008E12, 1705.6999999999998], [1.58815026E12, 4526.400000000001], [1.5881502E12, 1687.0], [1.58815002E12, 1699.1000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58815014E12, 2239.9500000000007], [1.58814996E12, 2374.600000000001], [1.58815008E12, 2236.0], [1.58815026E12, 8358.400000000003], [1.5881502E12, 2217.0], [1.58815002E12, 2282.42]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58815014E12, 1871.0], [1.58814996E12, 2059.0], [1.58815008E12, 1886.3499999999995], [1.58815026E12, 5285.5999999999985], [1.5881502E12, 1864.5], [1.58815002E12, 1879.0500000000002]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58815026E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 395.0, "minX": 1.0, "maxY": 14212.0, "series": [{"data": [[654.0, 3624.5], [3.0, 14212.0], [7.0, 543.0], [8.0, 1184.5], [13.0, 487.0], [15.0, 9171.0], [19.0, 843.0], [20.0, 7682.5], [22.0, 1207.5], [23.0, 1698.0], [24.0, 6501.0], [28.0, 1109.0], [36.0, 1010.0], [48.0, 1279.0], [51.0, 1026.0], [54.0, 1142.0], [57.0, 1449.5], [59.0, 1279.0], [60.0, 1238.0], [61.0, 1195.0], [62.0, 1499.0], [65.0, 1041.0], [66.0, 1156.5], [64.0, 1264.5], [67.0, 1168.0], [70.0, 1110.5], [68.0, 1194.0], [71.0, 1200.0], [69.0, 1318.5], [73.0, 1277.5], [74.0, 1171.5], [75.0, 4896.5], [77.0, 979.5], [79.0, 1112.0], [76.0, 1136.5], [78.0, 929.5], [82.0, 1015.0], [81.0, 1064.5], [83.0, 1207.0], [80.0, 1294.0], [85.0, 1201.5], [86.0, 980.0], [87.0, 998.0], [84.0, 1005.0], [89.0, 879.0], [91.0, 1093.5], [90.0, 1085.5], [88.0, 835.5], [92.0, 1198.5], [93.0, 1129.0], [95.0, 1138.0], [94.0, 987.0], [96.0, 1105.0], [98.0, 1022.5], [99.0, 1112.0], [97.0, 1148.0], [100.0, 961.5], [101.0, 1071.0], [102.0, 956.5], [103.0, 901.0], [106.0, 1133.0], [107.0, 990.0], [104.0, 1064.0], [105.0, 912.5], [108.0, 822.0], [110.0, 1166.5], [109.0, 1049.0], [111.0, 1054.0], [113.0, 867.0], [114.0, 994.5], [112.0, 1111.5], [115.0, 901.0], [118.0, 1234.0], [119.0, 1131.0], [117.0, 782.0], [116.0, 1357.5], [122.0, 911.5], [120.0, 1042.0], [123.0, 780.0], [125.0, 793.5], [126.0, 930.0], [127.0, 1213.0], [135.0, 1012.0], [130.0, 1011.0], [128.0, 755.0], [142.0, 1484.0], [201.0, 1093.0], [227.0, 2512.0], [1.0, 9811.0], [315.0, 1758.0], [370.0, 3097.0], [478.0, 4290.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 395.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 654.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 14028.0, "series": [{"data": [[654.0, 3479.5], [3.0, 14028.0], [7.0, 0.0], [8.0, 0.0], [13.0, 0.0], [15.0, 8833.0], [19.0, 0.0], [20.0, 7232.0], [22.0, 0.0], [23.0, 0.0], [24.0, 6120.5], [28.0, 0.0], [36.0, 0.0], [48.0, 0.0], [51.0, 0.0], [54.0, 0.0], [57.0, 0.0], [59.0, 0.0], [60.0, 0.0], [61.0, 0.0], [62.0, 0.0], [65.0, 0.0], [66.0, 0.0], [64.0, 0.0], [67.0, 0.0], [70.0, 0.0], [68.0, 0.0], [71.0, 0.0], [69.0, 0.0], [73.0, 0.0], [74.0, 0.0], [75.0, 1153.5], [77.0, 0.0], [79.0, 0.0], [76.0, 0.0], [78.0, 0.0], [82.0, 0.0], [81.0, 0.0], [83.0, 0.0], [80.0, 0.0], [85.0, 0.0], [86.0, 0.0], [87.0, 0.0], [84.0, 0.0], [89.0, 0.0], [91.0, 0.0], [90.0, 0.0], [88.0, 0.0], [92.0, 0.0], [93.0, 0.0], [95.0, 0.0], [94.0, 0.0], [96.0, 0.0], [98.0, 0.0], [99.0, 0.0], [97.0, 0.0], [100.0, 0.0], [101.0, 0.0], [102.0, 0.0], [103.0, 0.0], [106.0, 0.0], [107.0, 0.0], [104.0, 0.0], [105.0, 0.0], [108.0, 0.0], [110.0, 0.0], [109.0, 0.0], [111.0, 0.0], [113.0, 0.0], [114.0, 0.0], [112.0, 0.0], [115.0, 0.0], [118.0, 0.0], [119.0, 0.0], [117.0, 0.0], [116.0, 0.0], [122.0, 0.0], [120.0, 0.0], [123.0, 0.0], [125.0, 0.0], [126.0, 0.0], [127.0, 0.0], [135.0, 0.0], [130.0, 0.0], [128.0, 0.0], [142.0, 0.0], [201.0, 1065.0], [227.0, 2418.0], [1.0, 9621.0], [315.0, 1519.0], [370.0, 2776.5], [478.0, 3957.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 390.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 654.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.316666666666666, "minX": 1.58814996E12, "maxY": 94.63333333333334, "series": [{"data": [[1.58815014E12, 94.0], [1.58814996E12, 12.316666666666666], [1.58815008E12, 93.2], [1.58815026E12, 70.18333333333334], [1.5881502E12, 94.06666666666666], [1.58815002E12, 94.63333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58815026E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.58814996E12, "maxY": 94.63333333333334, "series": [{"data": [[1.58815026E12, 41.666666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58815026E12, 0.03333333333333333]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.58815014E12, 94.0], [1.58814996E12, 10.65], [1.58815008E12, 93.2], [1.58815026E12, 30.116666666666667], [1.5881502E12, 94.06666666666666], [1.58815002E12, 94.63333333333334]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.58815026E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.nio.charset.IllegalCharsetNameException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58815026E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.58814996E12, "maxY": 94.63333333333334, "series": [{"data": [[1.58815026E12, 0.06666666666666667]], "isOverall": false, "label": "cleanup-failure", "isController": false}, {"data": [[1.58815026E12, 41.666666666666664]], "isOverall": false, "label": "read 2.5k-success", "isController": false}, {"data": [[1.58815014E12, 94.0], [1.58814996E12, 10.65], [1.58815008E12, 93.2], [1.58815026E12, 30.116666666666667], [1.5881502E12, 94.06666666666666], [1.58815002E12, 94.63333333333334]], "isOverall": false, "label": "write 25k-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58815026E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.58814996E12, "maxY": 94.63333333333334, "series": [{"data": [[1.58815014E12, 94.0], [1.58814996E12, 10.65], [1.58815008E12, 93.2], [1.58815026E12, 71.78333333333333], [1.5881502E12, 94.06666666666666], [1.58815002E12, 94.63333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58815026E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58815026E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

