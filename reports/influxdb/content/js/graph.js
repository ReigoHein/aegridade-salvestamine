/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 4445.0, "series": [{"data": [[0.0, 777.0], [0.1, 786.0], [0.2, 795.0], [0.3, 795.0], [0.4, 798.0], [0.5, 799.0], [0.6, 800.0], [0.7, 800.0], [0.8, 807.0], [0.9, 808.0], [1.0, 813.0], [1.1, 813.0], [1.2, 818.0], [1.3, 818.0], [1.4, 822.0], [1.5, 826.0], [1.6, 827.0], [1.7, 827.0], [1.8, 835.0], [1.9, 846.0], [2.0, 852.0], [2.1, 854.0], [2.2, 861.0], [2.3, 864.0], [2.4, 869.0], [2.5, 873.0], [2.6, 873.0], [2.7, 874.0], [2.8, 874.0], [2.9, 876.0], [3.0, 876.0], [3.1, 876.0], [3.2, 878.0], [3.3, 878.0], [3.4, 880.0], [3.5, 884.0], [3.6, 887.0], [3.7, 888.0], [3.8, 889.0], [3.9, 890.0], [4.0, 890.0], [4.1, 891.0], [4.2, 891.0], [4.3, 892.0], [4.4, 892.0], [4.5, 892.0], [4.6, 893.0], [4.7, 894.0], [4.8, 895.0], [4.9, 895.0], [5.0, 896.0], [5.1, 897.0], [5.2, 897.0], [5.3, 897.0], [5.4, 897.0], [5.5, 898.0], [5.6, 899.0], [5.7, 899.0], [5.8, 900.0], [5.9, 901.0], [6.0, 901.0], [6.1, 902.0], [6.2, 903.0], [6.3, 903.0], [6.4, 905.0], [6.5, 905.0], [6.6, 906.0], [6.7, 907.0], [6.8, 907.0], [6.9, 908.0], [7.0, 908.0], [7.1, 908.0], [7.2, 908.0], [7.3, 910.0], [7.4, 912.0], [7.5, 913.0], [7.6, 914.0], [7.7, 915.0], [7.8, 916.0], [7.9, 917.0], [8.0, 919.0], [8.1, 920.0], [8.2, 921.0], [8.3, 921.0], [8.4, 923.0], [8.5, 923.0], [8.6, 925.0], [8.7, 926.0], [8.8, 926.0], [8.9, 927.0], [9.0, 929.0], [9.1, 930.0], [9.2, 931.0], [9.3, 935.0], [9.4, 936.0], [9.5, 941.0], [9.6, 942.0], [9.7, 942.0], [9.8, 945.0], [9.9, 947.0], [10.0, 948.0], [10.1, 948.0], [10.2, 950.0], [10.3, 950.0], [10.4, 952.0], [10.5, 956.0], [10.6, 956.0], [10.7, 956.0], [10.8, 957.0], [10.9, 957.0], [11.0, 962.0], [11.1, 967.0], [11.2, 974.0], [11.3, 975.0], [11.4, 983.0], [11.5, 997.0], [11.6, 1002.0], [11.7, 1004.0], [11.8, 1004.0], [11.9, 1005.0], [12.0, 1011.0], [12.1, 1012.0], [12.2, 1012.0], [12.3, 1025.0], [12.4, 1025.0], [12.5, 1033.0], [12.6, 1037.0], [12.7, 1038.0], [12.8, 1038.0], [12.9, 1040.0], [13.0, 1046.0], [13.1, 1047.0], [13.2, 1051.0], [13.3, 1051.0], [13.4, 1057.0], [13.5, 1058.0], [13.6, 1059.0], [13.7, 1060.0], [13.8, 1064.0], [13.9, 1067.0], [14.0, 1067.0], [14.1, 1070.0], [14.2, 1073.0], [14.3, 1077.0], [14.4, 1079.0], [14.5, 1080.0], [14.6, 1082.0], [14.7, 1083.0], [14.8, 1085.0], [14.9, 1087.0], [15.0, 1088.0], [15.1, 1088.0], [15.2, 1088.0], [15.3, 1089.0], [15.4, 1090.0], [15.5, 1090.0], [15.6, 1090.0], [15.7, 1091.0], [15.8, 1093.0], [15.9, 1094.0], [16.0, 1095.0], [16.1, 1097.0], [16.2, 1097.0], [16.3, 1098.0], [16.4, 1102.0], [16.5, 1102.0], [16.6, 1103.0], [16.7, 1104.0], [16.8, 1104.0], [16.9, 1104.0], [17.0, 1104.0], [17.1, 1105.0], [17.2, 1105.0], [17.3, 1106.0], [17.4, 1109.0], [17.5, 1110.0], [17.6, 1111.0], [17.7, 1114.0], [17.8, 1114.0], [17.9, 1115.0], [18.0, 1115.0], [18.1, 1115.0], [18.2, 1117.0], [18.3, 1117.0], [18.4, 1118.0], [18.5, 1119.0], [18.6, 1119.0], [18.7, 1119.0], [18.8, 1119.0], [18.9, 1122.0], [19.0, 1122.0], [19.1, 1122.0], [19.2, 1124.0], [19.3, 1124.0], [19.4, 1127.0], [19.5, 1127.0], [19.6, 1128.0], [19.7, 1130.0], [19.8, 1131.0], [19.9, 1131.0], [20.0, 1131.0], [20.1, 1132.0], [20.2, 1133.0], [20.3, 1134.0], [20.4, 1138.0], [20.5, 1138.0], [20.6, 1139.0], [20.7, 1139.0], [20.8, 1139.0], [20.9, 1139.0], [21.0, 1140.0], [21.1, 1142.0], [21.2, 1144.0], [21.3, 1145.0], [21.4, 1145.0], [21.5, 1145.0], [21.6, 1146.0], [21.7, 1148.0], [21.8, 1149.0], [21.9, 1152.0], [22.0, 1152.0], [22.1, 1155.0], [22.2, 1155.0], [22.3, 1156.0], [22.4, 1156.0], [22.5, 1158.0], [22.6, 1160.0], [22.7, 1160.0], [22.8, 1160.0], [22.9, 1164.0], [23.0, 1167.0], [23.1, 1167.0], [23.2, 1171.0], [23.3, 1181.0], [23.4, 1183.0], [23.5, 1184.0], [23.6, 1194.0], [23.7, 1194.0], [23.8, 1195.0], [23.9, 1195.0], [24.0, 1199.0], [24.1, 1200.0], [24.2, 1214.0], [24.3, 1215.0], [24.4, 1217.0], [24.5, 1220.0], [24.6, 1221.0], [24.7, 1223.0], [24.8, 1224.0], [24.9, 1225.0], [25.0, 1225.0], [25.1, 1229.0], [25.2, 1239.0], [25.3, 1241.0], [25.4, 1242.0], [25.5, 1243.0], [25.6, 1244.0], [25.7, 1245.0], [25.8, 1246.0], [25.9, 1247.0], [26.0, 1249.0], [26.1, 1250.0], [26.2, 1251.0], [26.3, 1253.0], [26.4, 1253.0], [26.5, 1254.0], [26.6, 1255.0], [26.7, 1256.0], [26.8, 1256.0], [26.9, 1256.0], [27.0, 1259.0], [27.1, 1259.0], [27.2, 1260.0], [27.3, 1260.0], [27.4, 1260.0], [27.5, 1261.0], [27.6, 1261.0], [27.7, 1264.0], [27.8, 1265.0], [27.9, 1265.0], [28.0, 1266.0], [28.1, 1266.0], [28.2, 1266.0], [28.3, 1267.0], [28.4, 1269.0], [28.5, 1269.0], [28.6, 1270.0], [28.7, 1270.0], [28.8, 1273.0], [28.9, 1274.0], [29.0, 1274.0], [29.1, 1274.0], [29.2, 1274.0], [29.3, 1274.0], [29.4, 1275.0], [29.5, 1276.0], [29.6, 1276.0], [29.7, 1277.0], [29.8, 1277.0], [29.9, 1280.0], [30.0, 1281.0], [30.1, 1281.0], [30.2, 1282.0], [30.3, 1282.0], [30.4, 1282.0], [30.5, 1283.0], [30.6, 1283.0], [30.7, 1283.0], [30.8, 1283.0], [30.9, 1284.0], [31.0, 1286.0], [31.1, 1288.0], [31.2, 1289.0], [31.3, 1289.0], [31.4, 1289.0], [31.5, 1290.0], [31.6, 1290.0], [31.7, 1291.0], [31.8, 1291.0], [31.9, 1292.0], [32.0, 1292.0], [32.1, 1292.0], [32.2, 1292.0], [32.3, 1294.0], [32.4, 1294.0], [32.5, 1295.0], [32.6, 1295.0], [32.7, 1296.0], [32.8, 1296.0], [32.9, 1296.0], [33.0, 1297.0], [33.1, 1298.0], [33.2, 1298.0], [33.3, 1300.0], [33.4, 1301.0], [33.5, 1301.0], [33.6, 1301.0], [33.7, 1301.0], [33.8, 1302.0], [33.9, 1302.0], [34.0, 1303.0], [34.1, 1306.0], [34.2, 1307.0], [34.3, 1308.0], [34.4, 1308.0], [34.5, 1308.0], [34.6, 1309.0], [34.7, 1309.0], [34.8, 1311.0], [34.9, 1312.0], [35.0, 1313.0], [35.1, 1314.0], [35.2, 1315.0], [35.3, 1315.0], [35.4, 1316.0], [35.5, 1316.0], [35.6, 1317.0], [35.7, 1317.0], [35.8, 1318.0], [35.9, 1320.0], [36.0, 1321.0], [36.1, 1322.0], [36.2, 1322.0], [36.3, 1323.0], [36.4, 1323.0], [36.5, 1324.0], [36.6, 1324.0], [36.7, 1328.0], [36.8, 1328.0], [36.9, 1329.0], [37.0, 1332.0], [37.1, 1333.0], [37.2, 1334.0], [37.3, 1335.0], [37.4, 1335.0], [37.5, 1335.0], [37.6, 1336.0], [37.7, 1337.0], [37.8, 1338.0], [37.9, 1339.0], [38.0, 1339.0], [38.1, 1339.0], [38.2, 1339.0], [38.3, 1340.0], [38.4, 1340.0], [38.5, 1340.0], [38.6, 1341.0], [38.7, 1343.0], [38.8, 1344.0], [38.9, 1344.0], [39.0, 1344.0], [39.1, 1345.0], [39.2, 1346.0], [39.3, 1348.0], [39.4, 1354.0], [39.5, 1356.0], [39.6, 1359.0], [39.7, 1360.0], [39.8, 1361.0], [39.9, 1364.0], [40.0, 1366.0], [40.1, 1367.0], [40.2, 1371.0], [40.3, 1371.0], [40.4, 1372.0], [40.5, 1373.0], [40.6, 1380.0], [40.7, 1387.0], [40.8, 1387.0], [40.9, 1388.0], [41.0, 1389.0], [41.1, 1395.0], [41.2, 1395.0], [41.3, 1397.0], [41.4, 1398.0], [41.5, 1401.0], [41.6, 1402.0], [41.7, 1403.0], [41.8, 1408.0], [41.9, 1408.0], [42.0, 1411.0], [42.1, 1413.0], [42.2, 1415.0], [42.3, 1416.0], [42.4, 1416.0], [42.5, 1416.0], [42.6, 1417.0], [42.7, 1418.0], [42.8, 1423.0], [42.9, 1424.0], [43.0, 1425.0], [43.1, 1429.0], [43.2, 1429.0], [43.3, 1429.0], [43.4, 1430.0], [43.5, 1430.0], [43.6, 1432.0], [43.7, 1433.0], [43.8, 1438.0], [43.9, 1438.0], [44.0, 1442.0], [44.1, 1443.0], [44.2, 1444.0], [44.3, 1445.0], [44.4, 1447.0], [44.5, 1449.0], [44.6, 1449.0], [44.7, 1449.0], [44.8, 1449.0], [44.9, 1450.0], [45.0, 1450.0], [45.1, 1453.0], [45.2, 1453.0], [45.3, 1453.0], [45.4, 1455.0], [45.5, 1455.0], [45.6, 1456.0], [45.7, 1456.0], [45.8, 1457.0], [45.9, 1457.0], [46.0, 1458.0], [46.1, 1459.0], [46.2, 1459.0], [46.3, 1460.0], [46.4, 1460.0], [46.5, 1460.0], [46.6, 1461.0], [46.7, 1461.0], [46.8, 1461.0], [46.9, 1463.0], [47.0, 1463.0], [47.1, 1466.0], [47.2, 1467.0], [47.3, 1468.0], [47.4, 1469.0], [47.5, 1471.0], [47.6, 1471.0], [47.7, 1472.0], [47.8, 1473.0], [47.9, 1473.0], [48.0, 1473.0], [48.1, 1474.0], [48.2, 1474.0], [48.3, 1475.0], [48.4, 1476.0], [48.5, 1476.0], [48.6, 1476.0], [48.7, 1478.0], [48.8, 1478.0], [48.9, 1479.0], [49.0, 1480.0], [49.1, 1481.0], [49.2, 1482.0], [49.3, 1482.0], [49.4, 1482.0], [49.5, 1483.0], [49.6, 1483.0], [49.7, 1483.0], [49.8, 1483.0], [49.9, 1484.0], [50.0, 1485.0], [50.1, 1485.0], [50.2, 1486.0], [50.3, 1486.0], [50.4, 1486.0], [50.5, 1486.0], [50.6, 1487.0], [50.7, 1491.0], [50.8, 1491.0], [50.9, 1491.0], [51.0, 1492.0], [51.1, 1492.0], [51.2, 1493.0], [51.3, 1493.0], [51.4, 1493.0], [51.5, 1493.0], [51.6, 1493.0], [51.7, 1495.0], [51.8, 1495.0], [51.9, 1495.0], [52.0, 1495.0], [52.1, 1496.0], [52.2, 1496.0], [52.3, 1496.0], [52.4, 1496.0], [52.5, 1497.0], [52.6, 1497.0], [52.7, 1497.0], [52.8, 1497.0], [52.9, 1499.0], [53.0, 1499.0], [53.1, 1499.0], [53.2, 1500.0], [53.3, 1501.0], [53.4, 1501.0], [53.5, 1501.0], [53.6, 1501.0], [53.7, 1503.0], [53.8, 1503.0], [53.9, 1504.0], [54.0, 1504.0], [54.1, 1504.0], [54.2, 1504.0], [54.3, 1504.0], [54.4, 1504.0], [54.5, 1505.0], [54.6, 1505.0], [54.7, 1505.0], [54.8, 1506.0], [54.9, 1507.0], [55.0, 1507.0], [55.1, 1508.0], [55.2, 1509.0], [55.3, 1509.0], [55.4, 1510.0], [55.5, 1511.0], [55.6, 1511.0], [55.7, 1511.0], [55.8, 1512.0], [55.9, 1512.0], [56.0, 1513.0], [56.1, 1513.0], [56.2, 1513.0], [56.3, 1513.0], [56.4, 1514.0], [56.5, 1514.0], [56.6, 1515.0], [56.7, 1515.0], [56.8, 1516.0], [56.9, 1516.0], [57.0, 1518.0], [57.1, 1520.0], [57.2, 1522.0], [57.3, 1523.0], [57.4, 1523.0], [57.5, 1523.0], [57.6, 1523.0], [57.7, 1524.0], [57.8, 1525.0], [57.9, 1525.0], [58.0, 1525.0], [58.1, 1527.0], [58.2, 1527.0], [58.3, 1528.0], [58.4, 1529.0], [58.5, 1529.0], [58.6, 1529.0], [58.7, 1529.0], [58.8, 1530.0], [58.9, 1530.0], [59.0, 1533.0], [59.1, 1533.0], [59.2, 1534.0], [59.3, 1534.0], [59.4, 1534.0], [59.5, 1535.0], [59.6, 1535.0], [59.7, 1535.0], [59.8, 1538.0], [59.9, 1538.0], [60.0, 1538.0], [60.1, 1539.0], [60.2, 1539.0], [60.3, 1540.0], [60.4, 1541.0], [60.5, 1541.0], [60.6, 1541.0], [60.7, 1542.0], [60.8, 1543.0], [60.9, 1544.0], [61.0, 1545.0], [61.1, 1546.0], [61.2, 1546.0], [61.3, 1550.0], [61.4, 1550.0], [61.5, 1560.0], [61.6, 1561.0], [61.7, 1561.0], [61.8, 1570.0], [61.9, 1570.0], [62.0, 1575.0], [62.1, 1585.0], [62.2, 1588.0], [62.3, 1589.0], [62.4, 1592.0], [62.5, 1594.0], [62.6, 1597.0], [62.7, 1599.0], [62.8, 1600.0], [62.9, 1603.0], [63.0, 1604.0], [63.1, 1605.0], [63.2, 1613.0], [63.3, 1614.0], [63.4, 1616.0], [63.5, 1616.0], [63.6, 1616.0], [63.7, 1620.0], [63.8, 1621.0], [63.9, 1624.0], [64.0, 1625.0], [64.1, 1625.0], [64.2, 1628.0], [64.3, 1632.0], [64.4, 1632.0], [64.5, 1634.0], [64.6, 1638.0], [64.7, 1639.0], [64.8, 1640.0], [64.9, 1640.0], [65.0, 1641.0], [65.1, 1641.0], [65.2, 1647.0], [65.3, 1649.0], [65.4, 1649.0], [65.5, 1650.0], [65.6, 1650.0], [65.7, 1653.0], [65.8, 1657.0], [65.9, 1658.0], [66.0, 1661.0], [66.1, 1664.0], [66.2, 1668.0], [66.3, 1671.0], [66.4, 1672.0], [66.5, 1672.0], [66.6, 1673.0], [66.7, 1673.0], [66.8, 1679.0], [66.9, 1679.0], [67.0, 1682.0], [67.1, 1685.0], [67.2, 1686.0], [67.3, 1687.0], [67.4, 1688.0], [67.5, 1688.0], [67.6, 1688.0], [67.7, 1690.0], [67.8, 1690.0], [67.9, 1693.0], [68.0, 1694.0], [68.1, 1696.0], [68.2, 1696.0], [68.3, 1696.0], [68.4, 1699.0], [68.5, 1702.0], [68.6, 1703.0], [68.7, 1703.0], [68.8, 1705.0], [68.9, 1706.0], [69.0, 1708.0], [69.1, 1709.0], [69.2, 1711.0], [69.3, 1713.0], [69.4, 1713.0], [69.5, 1713.0], [69.6, 1715.0], [69.7, 1717.0], [69.8, 1717.0], [69.9, 1719.0], [70.0, 1719.0], [70.1, 1724.0], [70.2, 1725.0], [70.3, 1726.0], [70.4, 1728.0], [70.5, 1729.0], [70.6, 1730.0], [70.7, 1732.0], [70.8, 1733.0], [70.9, 1733.0], [71.0, 1733.0], [71.1, 1736.0], [71.2, 1737.0], [71.3, 1738.0], [71.4, 1738.0], [71.5, 1738.0], [71.6, 1739.0], [71.7, 1741.0], [71.8, 1742.0], [71.9, 1742.0], [72.0, 1743.0], [72.1, 1748.0], [72.2, 1752.0], [72.3, 1753.0], [72.4, 1755.0], [72.5, 1761.0], [72.6, 1764.0], [72.7, 1766.0], [72.8, 1767.0], [72.9, 1767.0], [73.0, 1769.0], [73.1, 1769.0], [73.2, 1769.0], [73.3, 1769.0], [73.4, 1772.0], [73.5, 1774.0], [73.6, 1776.0], [73.7, 1777.0], [73.8, 1778.0], [73.9, 1778.0], [74.0, 1780.0], [74.1, 1781.0], [74.2, 1783.0], [74.3, 1783.0], [74.4, 1785.0], [74.5, 1785.0], [74.6, 1785.0], [74.7, 1786.0], [74.8, 1788.0], [74.9, 1789.0], [75.0, 1791.0], [75.1, 1791.0], [75.2, 1791.0], [75.3, 1791.0], [75.4, 1792.0], [75.5, 1792.0], [75.6, 1792.0], [75.7, 1794.0], [75.8, 1796.0], [75.9, 1796.0], [76.0, 1797.0], [76.1, 1797.0], [76.2, 1797.0], [76.3, 1798.0], [76.4, 1798.0], [76.5, 1799.0], [76.6, 1800.0], [76.7, 1801.0], [76.8, 1802.0], [76.9, 1803.0], [77.0, 1803.0], [77.1, 1804.0], [77.2, 1804.0], [77.3, 1804.0], [77.4, 1805.0], [77.5, 1805.0], [77.6, 1805.0], [77.7, 1806.0], [77.8, 1806.0], [77.9, 1806.0], [78.0, 1806.0], [78.1, 1808.0], [78.2, 1811.0], [78.3, 1812.0], [78.4, 1814.0], [78.5, 1815.0], [78.6, 1815.0], [78.7, 1815.0], [78.8, 1817.0], [78.9, 1817.0], [79.0, 1818.0], [79.1, 1818.0], [79.2, 1818.0], [79.3, 1819.0], [79.4, 1822.0], [79.5, 1824.0], [79.6, 1824.0], [79.7, 1825.0], [79.8, 1825.0], [79.9, 1827.0], [80.0, 1827.0], [80.1, 1828.0], [80.2, 1831.0], [80.3, 1834.0], [80.4, 1840.0], [80.5, 1843.0], [80.6, 1846.0], [80.7, 1850.0], [80.8, 1851.0], [80.9, 1851.0], [81.0, 1852.0], [81.1, 1852.0], [81.2, 1857.0], [81.3, 1860.0], [81.4, 1860.0], [81.5, 1862.0], [81.6, 1865.0], [81.7, 1866.0], [81.8, 1867.0], [81.9, 1868.0], [82.0, 1869.0], [82.1, 1871.0], [82.2, 1879.0], [82.3, 1881.0], [82.4, 1882.0], [82.5, 1888.0], [82.6, 1890.0], [82.7, 1897.0], [82.8, 1905.0], [82.9, 1928.0], [83.0, 1938.0], [83.1, 1944.0], [83.2, 1949.0], [83.3, 1955.0], [83.4, 1961.0], [83.5, 1962.0], [83.6, 1975.0], [83.7, 1976.0], [83.8, 1977.0], [83.9, 1979.0], [84.0, 1983.0], [84.1, 1991.0], [84.2, 1992.0], [84.3, 1998.0], [84.4, 1998.0], [84.5, 2001.0], [84.6, 2002.0], [84.7, 2004.0], [84.8, 2006.0], [84.9, 2009.0], [85.0, 2009.0], [85.1, 2010.0], [85.2, 2011.0], [85.3, 2013.0], [85.4, 2013.0], [85.5, 2013.0], [85.6, 2014.0], [85.7, 2015.0], [85.8, 2016.0], [85.9, 2020.0], [86.0, 2021.0], [86.1, 2023.0], [86.2, 2023.0], [86.3, 2024.0], [86.4, 2025.0], [86.5, 2029.0], [86.6, 2031.0], [86.7, 2032.0], [86.8, 2032.0], [86.9, 2033.0], [87.0, 2034.0], [87.1, 2040.0], [87.2, 2041.0], [87.3, 2042.0], [87.4, 2045.0], [87.5, 2045.0], [87.6, 2050.0], [87.7, 2051.0], [87.8, 2054.0], [87.9, 2055.0], [88.0, 2055.0], [88.1, 2060.0], [88.2, 2065.0], [88.3, 2066.0], [88.4, 2067.0], [88.5, 2067.0], [88.6, 2071.0], [88.7, 2073.0], [88.8, 2074.0], [88.9, 2078.0], [89.0, 2079.0], [89.1, 2082.0], [89.2, 2086.0], [89.3, 2089.0], [89.4, 2095.0], [89.5, 2097.0], [89.6, 2097.0], [89.7, 2097.0], [89.8, 2099.0], [89.9, 2114.0], [90.0, 2124.0], [90.1, 2126.0], [90.2, 2128.0], [90.3, 2131.0], [90.4, 2140.0], [90.5, 2142.0], [90.6, 2144.0], [90.7, 2149.0], [90.8, 2151.0], [90.9, 2151.0], [91.0, 2152.0], [91.1, 2155.0], [91.2, 2157.0], [91.3, 2161.0], [91.4, 2164.0], [91.5, 2167.0], [91.6, 2180.0], [91.7, 2183.0], [91.8, 2185.0], [91.9, 2189.0], [92.0, 2191.0], [92.1, 2192.0], [92.2, 2202.0], [92.3, 2209.0], [92.4, 2209.0], [92.5, 2211.0], [92.6, 2214.0], [92.7, 2216.0], [92.8, 2218.0], [92.9, 2223.0], [93.0, 2224.0], [93.1, 2232.0], [93.2, 2233.0], [93.3, 2238.0], [93.4, 2243.0], [93.5, 2243.0], [93.6, 2245.0], [93.7, 2257.0], [93.8, 2258.0], [93.9, 2268.0], [94.0, 2287.0], [94.1, 2288.0], [94.2, 2319.0], [94.3, 2323.0], [94.4, 2333.0], [94.5, 2340.0], [94.6, 2350.0], [94.7, 2356.0], [94.8, 2360.0], [94.9, 2367.0], [95.0, 2383.0], [95.1, 2386.0], [95.2, 2397.0], [95.3, 2399.0], [95.4, 2405.0], [95.5, 2411.0], [95.6, 2411.0], [95.7, 2415.0], [95.8, 2438.0], [95.9, 2453.0], [96.0, 2479.0], [96.1, 2481.0], [96.2, 2490.0], [96.3, 2500.0], [96.4, 2507.0], [96.5, 2520.0], [96.6, 2520.0], [96.7, 2522.0], [96.8, 2532.0], [96.9, 2532.0], [97.0, 2542.0], [97.1, 2553.0], [97.2, 2573.0], [97.3, 2577.0], [97.4, 2578.0], [97.5, 2583.0], [97.6, 2606.0], [97.7, 2613.0], [97.8, 2615.0], [97.9, 2624.0], [98.0, 2644.0], [98.1, 2648.0], [98.2, 2665.0], [98.3, 2670.0], [98.4, 2671.0], [98.5, 2672.0], [98.6, 2704.0], [98.7, 2715.0], [98.8, 3076.0], [98.9, 3188.0], [99.0, 3287.0], [99.1, 3518.0], [99.2, 3754.0], [99.3, 3762.0], [99.4, 3915.0], [99.5, 3929.0], [99.6, 3930.0], [99.7, 3952.0], [99.8, 4389.0], [99.9, 4445.0]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 10.0], [33.5, 10.0], [33.6, 10.0], [33.7, 10.0], [33.8, 10.0], [33.9, 10.0], [34.0, 10.0], [34.1, 10.0], [34.2, 10.0], [34.3, 10.0], [34.4, 10.0], [34.5, 10.0], [34.6, 10.0], [34.7, 10.0], [34.8, 10.0], [34.9, 10.0], [35.0, 10.0], [35.1, 10.0], [35.2, 10.0], [35.3, 10.0], [35.4, 10.0], [35.5, 10.0], [35.6, 10.0], [35.7, 10.0], [35.8, 10.0], [35.9, 10.0], [36.0, 10.0], [36.1, 10.0], [36.2, 10.0], [36.3, 10.0], [36.4, 10.0], [36.5, 10.0], [36.6, 10.0], [36.7, 10.0], [36.8, 10.0], [36.9, 10.0], [37.0, 10.0], [37.1, 10.0], [37.2, 10.0], [37.3, 10.0], [37.4, 10.0], [37.5, 10.0], [37.6, 10.0], [37.7, 10.0], [37.8, 10.0], [37.9, 10.0], [38.0, 10.0], [38.1, 10.0], [38.2, 10.0], [38.3, 10.0], [38.4, 10.0], [38.5, 10.0], [38.6, 10.0], [38.7, 10.0], [38.8, 10.0], [38.9, 10.0], [39.0, 10.0], [39.1, 10.0], [39.2, 10.0], [39.3, 10.0], [39.4, 10.0], [39.5, 10.0], [39.6, 10.0], [39.7, 10.0], [39.8, 10.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 10.0], [40.6, 10.0], [40.7, 10.0], [40.8, 10.0], [40.9, 10.0], [41.0, 10.0], [41.1, 10.0], [41.2, 10.0], [41.3, 10.0], [41.4, 10.0], [41.5, 10.0], [41.6, 10.0], [41.7, 10.0], [41.8, 10.0], [41.9, 10.0], [42.0, 10.0], [42.1, 10.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 10.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 769.0], [50.1, 769.0], [50.2, 769.0], [50.3, 769.0], [50.4, 769.0], [50.5, 769.0], [50.6, 769.0], [50.7, 769.0], [50.8, 769.0], [50.9, 769.0], [51.0, 769.0], [51.1, 769.0], [51.2, 769.0], [51.3, 769.0], [51.4, 769.0], [51.5, 769.0], [51.6, 769.0], [51.7, 769.0], [51.8, 769.0], [51.9, 769.0], [52.0, 769.0], [52.1, 769.0], [52.2, 769.0], [52.3, 769.0], [52.4, 769.0], [52.5, 769.0], [52.6, 769.0], [52.7, 769.0], [52.8, 769.0], [52.9, 769.0], [53.0, 769.0], [53.1, 769.0], [53.2, 769.0], [53.3, 769.0], [53.4, 769.0], [53.5, 769.0], [53.6, 769.0], [53.7, 769.0], [53.8, 769.0], [53.9, 769.0], [54.0, 769.0], [54.1, 769.0], [54.2, 769.0], [54.3, 769.0], [54.4, 769.0], [54.5, 769.0], [54.6, 769.0], [54.7, 769.0], [54.8, 769.0], [54.9, 769.0], [55.0, 769.0], [55.1, 769.0], [55.2, 769.0], [55.3, 769.0], [55.4, 769.0], [55.5, 769.0], [55.6, 769.0], [55.7, 769.0], [55.8, 769.0], [55.9, 769.0], [56.0, 769.0], [56.1, 769.0], [56.2, 769.0], [56.3, 769.0], [56.4, 769.0], [56.5, 769.0], [56.6, 769.0], [56.7, 769.0], [56.8, 769.0], [56.9, 769.0], [57.0, 769.0], [57.1, 769.0], [57.2, 769.0], [57.3, 769.0], [57.4, 769.0], [57.5, 769.0], [57.6, 769.0], [57.7, 769.0], [57.8, 769.0], [57.9, 769.0], [58.0, 769.0], [58.1, 769.0], [58.2, 769.0], [58.3, 769.0], [58.4, 769.0], [58.5, 769.0], [58.6, 769.0], [58.7, 769.0], [58.8, 769.0], [58.9, 769.0], [59.0, 769.0], [59.1, 769.0], [59.2, 769.0], [59.3, 769.0], [59.4, 769.0], [59.5, 769.0], [59.6, 769.0], [59.7, 769.0], [59.8, 769.0], [59.9, 769.0], [60.0, 769.0], [60.1, 769.0], [60.2, 769.0], [60.3, 769.0], [60.4, 769.0], [60.5, 769.0], [60.6, 769.0], [60.7, 769.0], [60.8, 769.0], [60.9, 769.0], [61.0, 769.0], [61.1, 769.0], [61.2, 769.0], [61.3, 769.0], [61.4, 769.0], [61.5, 769.0], [61.6, 769.0], [61.7, 769.0], [61.8, 769.0], [61.9, 769.0], [62.0, 769.0], [62.1, 769.0], [62.2, 769.0], [62.3, 769.0], [62.4, 769.0], [62.5, 769.0], [62.6, 769.0], [62.7, 769.0], [62.8, 769.0], [62.9, 769.0], [63.0, 769.0], [63.1, 769.0], [63.2, 769.0], [63.3, 769.0], [63.4, 769.0], [63.5, 769.0], [63.6, 769.0], [63.7, 769.0], [63.8, 769.0], [63.9, 769.0], [64.0, 769.0], [64.1, 769.0], [64.2, 769.0], [64.3, 769.0], [64.4, 769.0], [64.5, 769.0], [64.6, 769.0], [64.7, 769.0], [64.8, 769.0], [64.9, 769.0], [65.0, 769.0], [65.1, 769.0], [65.2, 769.0], [65.3, 769.0], [65.4, 769.0], [65.5, 769.0], [65.6, 769.0], [65.7, 769.0], [65.8, 769.0], [65.9, 769.0], [66.0, 769.0], [66.1, 769.0], [66.2, 769.0], [66.3, 769.0], [66.4, 769.0], [66.5, 769.0], [66.6, 769.0], [66.7, 774.0], [66.8, 774.0], [66.9, 774.0], [67.0, 774.0], [67.1, 774.0], [67.2, 774.0], [67.3, 774.0], [67.4, 774.0], [67.5, 774.0], [67.6, 774.0], [67.7, 774.0], [67.8, 774.0], [67.9, 774.0], [68.0, 774.0], [68.1, 774.0], [68.2, 774.0], [68.3, 774.0], [68.4, 774.0], [68.5, 774.0], [68.6, 774.0], [68.7, 774.0], [68.8, 774.0], [68.9, 774.0], [69.0, 774.0], [69.1, 774.0], [69.2, 774.0], [69.3, 774.0], [69.4, 774.0], [69.5, 774.0], [69.6, 774.0], [69.7, 774.0], [69.8, 774.0], [69.9, 774.0], [70.0, 774.0], [70.1, 774.0], [70.2, 774.0], [70.3, 774.0], [70.4, 774.0], [70.5, 774.0], [70.6, 774.0], [70.7, 774.0], [70.8, 774.0], [70.9, 774.0], [71.0, 774.0], [71.1, 774.0], [71.2, 774.0], [71.3, 774.0], [71.4, 774.0], [71.5, 774.0], [71.6, 774.0], [71.7, 774.0], [71.8, 774.0], [71.9, 774.0], [72.0, 774.0], [72.1, 774.0], [72.2, 774.0], [72.3, 774.0], [72.4, 774.0], [72.5, 774.0], [72.6, 774.0], [72.7, 774.0], [72.8, 774.0], [72.9, 774.0], [73.0, 774.0], [73.1, 774.0], [73.2, 774.0], [73.3, 774.0], [73.4, 774.0], [73.5, 774.0], [73.6, 774.0], [73.7, 774.0], [73.8, 774.0], [73.9, 774.0], [74.0, 774.0], [74.1, 774.0], [74.2, 774.0], [74.3, 774.0], [74.4, 774.0], [74.5, 774.0], [74.6, 774.0], [74.7, 774.0], [74.8, 774.0], [74.9, 774.0], [75.0, 774.0], [75.1, 774.0], [75.2, 774.0], [75.3, 774.0], [75.4, 774.0], [75.5, 774.0], [75.6, 774.0], [75.7, 774.0], [75.8, 774.0], [75.9, 774.0], [76.0, 774.0], [76.1, 774.0], [76.2, 774.0], [76.3, 774.0], [76.4, 774.0], [76.5, 774.0], [76.6, 774.0], [76.7, 774.0], [76.8, 774.0], [76.9, 774.0], [77.0, 774.0], [77.1, 774.0], [77.2, 774.0], [77.3, 774.0], [77.4, 774.0], [77.5, 774.0], [77.6, 774.0], [77.7, 774.0], [77.8, 774.0], [77.9, 774.0], [78.0, 774.0], [78.1, 774.0], [78.2, 774.0], [78.3, 774.0], [78.4, 774.0], [78.5, 774.0], [78.6, 774.0], [78.7, 774.0], [78.8, 774.0], [78.9, 774.0], [79.0, 774.0], [79.1, 774.0], [79.2, 774.0], [79.3, 774.0], [79.4, 774.0], [79.5, 774.0], [79.6, 774.0], [79.7, 774.0], [79.8, 774.0], [79.9, 774.0], [80.0, 774.0], [80.1, 774.0], [80.2, 774.0], [80.3, 774.0], [80.4, 774.0], [80.5, 774.0], [80.6, 774.0], [80.7, 774.0], [80.8, 774.0], [80.9, 774.0], [81.0, 774.0], [81.1, 774.0], [81.2, 774.0], [81.3, 774.0], [81.4, 774.0], [81.5, 774.0], [81.6, 774.0], [81.7, 774.0], [81.8, 774.0], [81.9, 774.0], [82.0, 774.0], [82.1, 774.0], [82.2, 774.0], [82.3, 774.0], [82.4, 774.0], [82.5, 774.0], [82.6, 774.0], [82.7, 774.0], [82.8, 774.0], [82.9, 774.0], [83.0, 774.0], [83.1, 774.0], [83.2, 774.0], [83.3, 774.0], [83.4, 797.0], [83.5, 797.0], [83.6, 797.0], [83.7, 797.0], [83.8, 797.0], [83.9, 797.0], [84.0, 797.0], [84.1, 797.0], [84.2, 797.0], [84.3, 797.0], [84.4, 797.0], [84.5, 797.0], [84.6, 797.0], [84.7, 797.0], [84.8, 797.0], [84.9, 797.0], [85.0, 797.0], [85.1, 797.0], [85.2, 797.0], [85.3, 797.0], [85.4, 797.0], [85.5, 797.0], [85.6, 797.0], [85.7, 797.0], [85.8, 797.0], [85.9, 797.0], [86.0, 797.0], [86.1, 797.0], [86.2, 797.0], [86.3, 797.0], [86.4, 797.0], [86.5, 797.0], [86.6, 797.0], [86.7, 797.0], [86.8, 797.0], [86.9, 797.0], [87.0, 797.0], [87.1, 797.0], [87.2, 797.0], [87.3, 797.0], [87.4, 797.0], [87.5, 797.0], [87.6, 797.0], [87.7, 797.0], [87.8, 797.0], [87.9, 797.0], [88.0, 797.0], [88.1, 797.0], [88.2, 797.0], [88.3, 797.0], [88.4, 797.0], [88.5, 797.0], [88.6, 797.0], [88.7, 797.0], [88.8, 797.0], [88.9, 797.0], [89.0, 797.0], [89.1, 797.0], [89.2, 797.0], [89.3, 797.0], [89.4, 797.0], [89.5, 797.0], [89.6, 797.0], [89.7, 797.0], [89.8, 797.0], [89.9, 797.0], [90.0, 797.0], [90.1, 797.0], [90.2, 797.0], [90.3, 797.0], [90.4, 797.0], [90.5, 797.0], [90.6, 797.0], [90.7, 797.0], [90.8, 797.0], [90.9, 797.0], [91.0, 797.0], [91.1, 797.0], [91.2, 797.0], [91.3, 797.0], [91.4, 797.0], [91.5, 797.0], [91.6, 797.0], [91.7, 797.0], [91.8, 797.0], [91.9, 797.0], [92.0, 797.0], [92.1, 797.0], [92.2, 797.0], [92.3, 797.0], [92.4, 797.0], [92.5, 797.0], [92.6, 797.0], [92.7, 797.0], [92.8, 797.0], [92.9, 797.0], [93.0, 797.0], [93.1, 797.0], [93.2, 797.0], [93.3, 797.0], [93.4, 797.0], [93.5, 797.0], [93.6, 797.0], [93.7, 797.0], [93.8, 797.0], [93.9, 797.0], [94.0, 797.0], [94.1, 797.0], [94.2, 797.0], [94.3, 797.0], [94.4, 797.0], [94.5, 797.0], [94.6, 797.0], [94.7, 797.0], [94.8, 797.0], [94.9, 797.0], [95.0, 797.0], [95.1, 797.0], [95.2, 797.0], [95.3, 797.0], [95.4, 797.0], [95.5, 797.0], [95.6, 797.0], [95.7, 797.0], [95.8, 797.0], [95.9, 797.0], [96.0, 797.0], [96.1, 797.0], [96.2, 797.0], [96.3, 797.0], [96.4, 797.0], [96.5, 797.0], [96.6, 797.0], [96.7, 797.0], [96.8, 797.0], [96.9, 797.0], [97.0, 797.0], [97.1, 797.0], [97.2, 797.0], [97.3, 797.0], [97.4, 797.0], [97.5, 797.0], [97.6, 797.0], [97.7, 797.0], [97.8, 797.0], [97.9, 797.0], [98.0, 797.0], [98.1, 797.0], [98.2, 797.0], [98.3, 797.0], [98.4, 797.0], [98.5, 797.0], [98.6, 797.0], [98.7, 797.0], [98.8, 797.0], [98.9, 797.0], [99.0, 797.0], [99.1, 797.0], [99.2, 797.0], [99.3, 797.0], [99.4, 797.0], [99.5, 797.0], [99.6, 797.0], [99.7, 797.0], [99.8, 797.0], [99.9, 797.0], [100.0, 797.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[0.0, 763.0], [0.1, 763.0], [0.2, 763.0], [0.3, 763.0], [0.4, 763.0], [0.5, 763.0], [0.6, 763.0], [0.7, 763.0], [0.8, 763.0], [0.9, 763.0], [1.0, 764.0], [1.1, 764.0], [1.2, 764.0], [1.3, 764.0], [1.4, 764.0], [1.5, 764.0], [1.6, 764.0], [1.7, 764.0], [1.8, 764.0], [1.9, 764.0], [2.0, 765.0], [2.1, 765.0], [2.2, 765.0], [2.3, 765.0], [2.4, 765.0], [2.5, 765.0], [2.6, 765.0], [2.7, 765.0], [2.8, 765.0], [2.9, 765.0], [3.0, 770.0], [3.1, 770.0], [3.2, 770.0], [3.3, 770.0], [3.4, 770.0], [3.5, 770.0], [3.6, 770.0], [3.7, 770.0], [3.8, 770.0], [3.9, 770.0], [4.0, 770.0], [4.1, 770.0], [4.2, 770.0], [4.3, 770.0], [4.4, 770.0], [4.5, 770.0], [4.6, 770.0], [4.7, 770.0], [4.8, 770.0], [4.9, 770.0], [5.0, 772.0], [5.1, 772.0], [5.2, 772.0], [5.3, 772.0], [5.4, 772.0], [5.5, 772.0], [5.6, 772.0], [5.7, 772.0], [5.8, 772.0], [5.9, 772.0], [6.0, 774.0], [6.1, 774.0], [6.2, 774.0], [6.3, 774.0], [6.4, 774.0], [6.5, 774.0], [6.6, 774.0], [6.7, 774.0], [6.8, 774.0], [6.9, 774.0], [7.0, 774.0], [7.1, 774.0], [7.2, 774.0], [7.3, 774.0], [7.4, 774.0], [7.5, 774.0], [7.6, 774.0], [7.7, 774.0], [7.8, 774.0], [7.9, 774.0], [8.0, 775.0], [8.1, 775.0], [8.2, 775.0], [8.3, 775.0], [8.4, 775.0], [8.5, 775.0], [8.6, 775.0], [8.7, 775.0], [8.8, 775.0], [8.9, 775.0], [9.0, 777.0], [9.1, 777.0], [9.2, 777.0], [9.3, 777.0], [9.4, 777.0], [9.5, 777.0], [9.6, 777.0], [9.7, 777.0], [9.8, 777.0], [9.9, 777.0], [10.0, 777.0], [10.1, 777.0], [10.2, 777.0], [10.3, 777.0], [10.4, 777.0], [10.5, 777.0], [10.6, 777.0], [10.7, 777.0], [10.8, 777.0], [10.9, 777.0], [11.0, 778.0], [11.1, 778.0], [11.2, 778.0], [11.3, 778.0], [11.4, 778.0], [11.5, 778.0], [11.6, 778.0], [11.7, 778.0], [11.8, 778.0], [11.9, 778.0], [12.0, 778.0], [12.1, 778.0], [12.2, 778.0], [12.3, 778.0], [12.4, 778.0], [12.5, 778.0], [12.6, 778.0], [12.7, 778.0], [12.8, 778.0], [12.9, 778.0], [13.0, 779.0], [13.1, 779.0], [13.2, 779.0], [13.3, 779.0], [13.4, 779.0], [13.5, 779.0], [13.6, 779.0], [13.7, 779.0], [13.8, 779.0], [13.9, 779.0], [14.0, 780.0], [14.1, 780.0], [14.2, 780.0], [14.3, 780.0], [14.4, 780.0], [14.5, 780.0], [14.6, 780.0], [14.7, 780.0], [14.8, 780.0], [14.9, 780.0], [15.0, 780.0], [15.1, 780.0], [15.2, 780.0], [15.3, 780.0], [15.4, 780.0], [15.5, 780.0], [15.6, 780.0], [15.7, 780.0], [15.8, 780.0], [15.9, 780.0], [16.0, 781.0], [16.1, 781.0], [16.2, 781.0], [16.3, 781.0], [16.4, 781.0], [16.5, 781.0], [16.6, 781.0], [16.7, 781.0], [16.8, 781.0], [16.9, 781.0], [17.0, 781.0], [17.1, 781.0], [17.2, 781.0], [17.3, 781.0], [17.4, 781.0], [17.5, 781.0], [17.6, 781.0], [17.7, 781.0], [17.8, 781.0], [17.9, 781.0], [18.0, 783.0], [18.1, 783.0], [18.2, 783.0], [18.3, 783.0], [18.4, 783.0], [18.5, 783.0], [18.6, 783.0], [18.7, 783.0], [18.8, 783.0], [18.9, 783.0], [19.0, 783.0], [19.1, 783.0], [19.2, 783.0], [19.3, 783.0], [19.4, 783.0], [19.5, 783.0], [19.6, 783.0], [19.7, 783.0], [19.8, 783.0], [19.9, 783.0], [20.0, 783.0], [20.1, 783.0], [20.2, 783.0], [20.3, 783.0], [20.4, 783.0], [20.5, 783.0], [20.6, 783.0], [20.7, 783.0], [20.8, 783.0], [20.9, 783.0], [21.0, 784.0], [21.1, 784.0], [21.2, 784.0], [21.3, 784.0], [21.4, 784.0], [21.5, 784.0], [21.6, 784.0], [21.7, 784.0], [21.8, 784.0], [21.9, 784.0], [22.0, 784.0], [22.1, 784.0], [22.2, 784.0], [22.3, 784.0], [22.4, 784.0], [22.5, 784.0], [22.6, 784.0], [22.7, 784.0], [22.8, 784.0], [22.9, 784.0], [23.0, 785.0], [23.1, 785.0], [23.2, 785.0], [23.3, 785.0], [23.4, 785.0], [23.5, 785.0], [23.6, 785.0], [23.7, 785.0], [23.8, 785.0], [23.9, 785.0], [24.0, 785.0], [24.1, 785.0], [24.2, 785.0], [24.3, 785.0], [24.4, 785.0], [24.5, 785.0], [24.6, 785.0], [24.7, 785.0], [24.8, 785.0], [24.9, 785.0], [25.0, 785.0], [25.1, 785.0], [25.2, 785.0], [25.3, 785.0], [25.4, 785.0], [25.5, 785.0], [25.6, 785.0], [25.7, 785.0], [25.8, 785.0], [25.9, 785.0], [26.0, 787.0], [26.1, 787.0], [26.2, 787.0], [26.3, 787.0], [26.4, 787.0], [26.5, 787.0], [26.6, 787.0], [26.7, 787.0], [26.8, 787.0], [26.9, 787.0], [27.0, 788.0], [27.1, 788.0], [27.2, 788.0], [27.3, 788.0], [27.4, 788.0], [27.5, 788.0], [27.6, 788.0], [27.7, 788.0], [27.8, 788.0], [27.9, 788.0], [28.0, 789.0], [28.1, 789.0], [28.2, 789.0], [28.3, 789.0], [28.4, 789.0], [28.5, 789.0], [28.6, 789.0], [28.7, 789.0], [28.8, 789.0], [28.9, 789.0], [29.0, 789.0], [29.1, 789.0], [29.2, 789.0], [29.3, 789.0], [29.4, 789.0], [29.5, 789.0], [29.6, 789.0], [29.7, 789.0], [29.8, 789.0], [29.9, 789.0], [30.0, 790.0], [30.1, 790.0], [30.2, 790.0], [30.3, 790.0], [30.4, 790.0], [30.5, 790.0], [30.6, 790.0], [30.7, 790.0], [30.8, 790.0], [30.9, 790.0], [31.0, 791.0], [31.1, 791.0], [31.2, 791.0], [31.3, 791.0], [31.4, 791.0], [31.5, 791.0], [31.6, 791.0], [31.7, 791.0], [31.8, 791.0], [31.9, 791.0], [32.0, 791.0], [32.1, 791.0], [32.2, 791.0], [32.3, 791.0], [32.4, 791.0], [32.5, 791.0], [32.6, 791.0], [32.7, 791.0], [32.8, 791.0], [32.9, 791.0], [33.0, 793.0], [33.1, 793.0], [33.2, 793.0], [33.3, 793.0], [33.4, 793.0], [33.5, 793.0], [33.6, 793.0], [33.7, 793.0], [33.8, 793.0], [33.9, 793.0], [34.0, 795.0], [34.1, 795.0], [34.2, 795.0], [34.3, 795.0], [34.4, 795.0], [34.5, 795.0], [34.6, 795.0], [34.7, 795.0], [34.8, 795.0], [34.9, 795.0], [35.0, 797.0], [35.1, 797.0], [35.2, 797.0], [35.3, 797.0], [35.4, 797.0], [35.5, 797.0], [35.6, 797.0], [35.7, 797.0], [35.8, 797.0], [35.9, 797.0], [36.0, 797.0], [36.1, 797.0], [36.2, 797.0], [36.3, 797.0], [36.4, 797.0], [36.5, 797.0], [36.6, 797.0], [36.7, 797.0], [36.8, 797.0], [36.9, 797.0], [37.0, 797.0], [37.1, 797.0], [37.2, 797.0], [37.3, 797.0], [37.4, 797.0], [37.5, 797.0], [37.6, 797.0], [37.7, 797.0], [37.8, 797.0], [37.9, 797.0], [38.0, 798.0], [38.1, 798.0], [38.2, 798.0], [38.3, 798.0], [38.4, 798.0], [38.5, 798.0], [38.6, 798.0], [38.7, 798.0], [38.8, 798.0], [38.9, 798.0], [39.0, 798.0], [39.1, 798.0], [39.2, 798.0], [39.3, 798.0], [39.4, 798.0], [39.5, 798.0], [39.6, 798.0], [39.7, 798.0], [39.8, 798.0], [39.9, 798.0], [40.0, 798.0], [40.1, 798.0], [40.2, 798.0], [40.3, 798.0], [40.4, 798.0], [40.5, 798.0], [40.6, 798.0], [40.7, 798.0], [40.8, 798.0], [40.9, 798.0], [41.0, 799.0], [41.1, 799.0], [41.2, 799.0], [41.3, 799.0], [41.4, 799.0], [41.5, 799.0], [41.6, 799.0], [41.7, 799.0], [41.8, 799.0], [41.9, 799.0], [42.0, 799.0], [42.1, 799.0], [42.2, 799.0], [42.3, 799.0], [42.4, 799.0], [42.5, 799.0], [42.6, 799.0], [42.7, 799.0], [42.8, 799.0], [42.9, 799.0], [43.0, 799.0], [43.1, 799.0], [43.2, 799.0], [43.3, 799.0], [43.4, 799.0], [43.5, 799.0], [43.6, 799.0], [43.7, 799.0], [43.8, 799.0], [43.9, 799.0], [44.0, 802.0], [44.1, 802.0], [44.2, 802.0], [44.3, 802.0], [44.4, 802.0], [44.5, 802.0], [44.6, 802.0], [44.7, 802.0], [44.8, 802.0], [44.9, 802.0], [45.0, 803.0], [45.1, 803.0], [45.2, 803.0], [45.3, 803.0], [45.4, 803.0], [45.5, 803.0], [45.6, 803.0], [45.7, 803.0], [45.8, 803.0], [45.9, 803.0], [46.0, 804.0], [46.1, 804.0], [46.2, 804.0], [46.3, 804.0], [46.4, 804.0], [46.5, 804.0], [46.6, 804.0], [46.7, 804.0], [46.8, 804.0], [46.9, 804.0], [47.0, 806.0], [47.1, 806.0], [47.2, 806.0], [47.3, 806.0], [47.4, 806.0], [47.5, 806.0], [47.6, 806.0], [47.7, 806.0], [47.8, 806.0], [47.9, 806.0], [48.0, 809.0], [48.1, 809.0], [48.2, 809.0], [48.3, 809.0], [48.4, 809.0], [48.5, 809.0], [48.6, 809.0], [48.7, 809.0], [48.8, 809.0], [48.9, 809.0], [49.0, 811.0], [49.1, 811.0], [49.2, 811.0], [49.3, 811.0], [49.4, 811.0], [49.5, 811.0], [49.6, 811.0], [49.7, 811.0], [49.8, 811.0], [49.9, 811.0], [50.0, 811.0], [50.1, 811.0], [50.2, 811.0], [50.3, 811.0], [50.4, 811.0], [50.5, 811.0], [50.6, 811.0], [50.7, 811.0], [50.8, 811.0], [50.9, 811.0], [51.0, 812.0], [51.1, 812.0], [51.2, 812.0], [51.3, 812.0], [51.4, 812.0], [51.5, 812.0], [51.6, 812.0], [51.7, 812.0], [51.8, 812.0], [51.9, 812.0], [52.0, 812.0], [52.1, 812.0], [52.2, 812.0], [52.3, 812.0], [52.4, 812.0], [52.5, 812.0], [52.6, 812.0], [52.7, 812.0], [52.8, 812.0], [52.9, 812.0], [53.0, 814.0], [53.1, 814.0], [53.2, 814.0], [53.3, 814.0], [53.4, 814.0], [53.5, 814.0], [53.6, 814.0], [53.7, 814.0], [53.8, 814.0], [53.9, 814.0], [54.0, 818.0], [54.1, 818.0], [54.2, 818.0], [54.3, 818.0], [54.4, 818.0], [54.5, 818.0], [54.6, 818.0], [54.7, 818.0], [54.8, 818.0], [54.9, 818.0], [55.0, 820.0], [55.1, 820.0], [55.2, 820.0], [55.3, 820.0], [55.4, 820.0], [55.5, 820.0], [55.6, 820.0], [55.7, 820.0], [55.8, 820.0], [55.9, 820.0], [56.0, 821.0], [56.1, 821.0], [56.2, 821.0], [56.3, 821.0], [56.4, 821.0], [56.5, 821.0], [56.6, 821.0], [56.7, 821.0], [56.8, 821.0], [56.9, 821.0], [57.0, 824.0], [57.1, 824.0], [57.2, 824.0], [57.3, 824.0], [57.4, 824.0], [57.5, 824.0], [57.6, 824.0], [57.7, 824.0], [57.8, 824.0], [57.9, 824.0], [58.0, 825.0], [58.1, 825.0], [58.2, 825.0], [58.3, 825.0], [58.4, 825.0], [58.5, 825.0], [58.6, 825.0], [58.7, 825.0], [58.8, 825.0], [58.9, 825.0], [59.0, 826.0], [59.1, 826.0], [59.2, 826.0], [59.3, 826.0], [59.4, 826.0], [59.5, 826.0], [59.6, 826.0], [59.7, 826.0], [59.8, 826.0], [59.9, 826.0], [60.0, 832.0], [60.1, 832.0], [60.2, 832.0], [60.3, 832.0], [60.4, 832.0], [60.5, 832.0], [60.6, 832.0], [60.7, 832.0], [60.8, 832.0], [60.9, 832.0], [61.0, 832.0], [61.1, 832.0], [61.2, 832.0], [61.3, 832.0], [61.4, 832.0], [61.5, 832.0], [61.6, 832.0], [61.7, 832.0], [61.8, 832.0], [61.9, 832.0], [62.0, 832.0], [62.1, 832.0], [62.2, 832.0], [62.3, 832.0], [62.4, 832.0], [62.5, 832.0], [62.6, 832.0], [62.7, 832.0], [62.8, 832.0], [62.9, 832.0], [63.0, 832.0], [63.1, 832.0], [63.2, 832.0], [63.3, 832.0], [63.4, 832.0], [63.5, 832.0], [63.6, 832.0], [63.7, 832.0], [63.8, 832.0], [63.9, 832.0], [64.0, 833.0], [64.1, 833.0], [64.2, 833.0], [64.3, 833.0], [64.4, 833.0], [64.5, 833.0], [64.6, 833.0], [64.7, 833.0], [64.8, 833.0], [64.9, 833.0], [65.0, 833.0], [65.1, 833.0], [65.2, 833.0], [65.3, 833.0], [65.4, 833.0], [65.5, 833.0], [65.6, 833.0], [65.7, 833.0], [65.8, 833.0], [65.9, 833.0], [66.0, 834.0], [66.1, 834.0], [66.2, 834.0], [66.3, 834.0], [66.4, 834.0], [66.5, 834.0], [66.6, 834.0], [66.7, 834.0], [66.8, 834.0], [66.9, 834.0], [67.0, 834.0], [67.1, 834.0], [67.2, 834.0], [67.3, 834.0], [67.4, 834.0], [67.5, 834.0], [67.6, 834.0], [67.7, 834.0], [67.8, 834.0], [67.9, 834.0], [68.0, 836.0], [68.1, 836.0], [68.2, 836.0], [68.3, 836.0], [68.4, 836.0], [68.5, 836.0], [68.6, 836.0], [68.7, 836.0], [68.8, 836.0], [68.9, 836.0], [69.0, 836.0], [69.1, 836.0], [69.2, 836.0], [69.3, 836.0], [69.4, 836.0], [69.5, 836.0], [69.6, 836.0], [69.7, 836.0], [69.8, 836.0], [69.9, 836.0], [70.0, 836.0], [70.1, 836.0], [70.2, 836.0], [70.3, 836.0], [70.4, 836.0], [70.5, 836.0], [70.6, 836.0], [70.7, 836.0], [70.8, 836.0], [70.9, 836.0], [71.0, 838.0], [71.1, 838.0], [71.2, 838.0], [71.3, 838.0], [71.4, 838.0], [71.5, 838.0], [71.6, 838.0], [71.7, 838.0], [71.8, 838.0], [71.9, 838.0], [72.0, 842.0], [72.1, 842.0], [72.2, 842.0], [72.3, 842.0], [72.4, 842.0], [72.5, 842.0], [72.6, 842.0], [72.7, 842.0], [72.8, 842.0], [72.9, 842.0], [73.0, 843.0], [73.1, 843.0], [73.2, 843.0], [73.3, 843.0], [73.4, 843.0], [73.5, 843.0], [73.6, 843.0], [73.7, 843.0], [73.8, 843.0], [73.9, 843.0], [74.0, 844.0], [74.1, 844.0], [74.2, 844.0], [74.3, 844.0], [74.4, 844.0], [74.5, 844.0], [74.6, 844.0], [74.7, 844.0], [74.8, 844.0], [74.9, 844.0], [75.0, 847.0], [75.1, 847.0], [75.2, 847.0], [75.3, 847.0], [75.4, 847.0], [75.5, 847.0], [75.6, 847.0], [75.7, 847.0], [75.8, 847.0], [75.9, 847.0], [76.0, 850.0], [76.1, 850.0], [76.2, 850.0], [76.3, 850.0], [76.4, 850.0], [76.5, 850.0], [76.6, 850.0], [76.7, 850.0], [76.8, 850.0], [76.9, 850.0], [77.0, 879.0], [77.1, 879.0], [77.2, 879.0], [77.3, 879.0], [77.4, 879.0], [77.5, 879.0], [77.6, 879.0], [77.7, 879.0], [77.8, 879.0], [77.9, 879.0], [78.0, 950.0], [78.1, 950.0], [78.2, 950.0], [78.3, 950.0], [78.4, 950.0], [78.5, 950.0], [78.6, 950.0], [78.7, 950.0], [78.8, 950.0], [78.9, 950.0], [79.0, 951.0], [79.1, 951.0], [79.2, 951.0], [79.3, 951.0], [79.4, 951.0], [79.5, 951.0], [79.6, 951.0], [79.7, 951.0], [79.8, 951.0], [79.9, 951.0], [80.0, 951.0], [80.1, 951.0], [80.2, 951.0], [80.3, 951.0], [80.4, 951.0], [80.5, 951.0], [80.6, 951.0], [80.7, 951.0], [80.8, 951.0], [80.9, 951.0], [81.0, 963.0], [81.1, 963.0], [81.2, 963.0], [81.3, 963.0], [81.4, 963.0], [81.5, 963.0], [81.6, 963.0], [81.7, 963.0], [81.8, 963.0], [81.9, 963.0], [82.0, 964.0], [82.1, 964.0], [82.2, 964.0], [82.3, 964.0], [82.4, 964.0], [82.5, 964.0], [82.6, 964.0], [82.7, 964.0], [82.8, 964.0], [82.9, 964.0], [83.0, 964.0], [83.1, 964.0], [83.2, 964.0], [83.3, 964.0], [83.4, 964.0], [83.5, 964.0], [83.6, 964.0], [83.7, 964.0], [83.8, 964.0], [83.9, 964.0], [84.0, 967.0], [84.1, 967.0], [84.2, 967.0], [84.3, 967.0], [84.4, 967.0], [84.5, 967.0], [84.6, 967.0], [84.7, 967.0], [84.8, 967.0], [84.9, 967.0], [85.0, 972.0], [85.1, 972.0], [85.2, 972.0], [85.3, 972.0], [85.4, 972.0], [85.5, 972.0], [85.6, 972.0], [85.7, 972.0], [85.8, 972.0], [85.9, 972.0], [86.0, 982.0], [86.1, 982.0], [86.2, 982.0], [86.3, 982.0], [86.4, 982.0], [86.5, 982.0], [86.6, 982.0], [86.7, 982.0], [86.8, 982.0], [86.9, 982.0], [87.0, 987.0], [87.1, 987.0], [87.2, 987.0], [87.3, 987.0], [87.4, 987.0], [87.5, 987.0], [87.6, 987.0], [87.7, 987.0], [87.8, 987.0], [87.9, 987.0], [88.0, 989.0], [88.1, 989.0], [88.2, 989.0], [88.3, 989.0], [88.4, 989.0], [88.5, 989.0], [88.6, 989.0], [88.7, 989.0], [88.8, 989.0], [88.9, 989.0], [89.0, 989.0], [89.1, 989.0], [89.2, 989.0], [89.3, 989.0], [89.4, 989.0], [89.5, 989.0], [89.6, 989.0], [89.7, 989.0], [89.8, 989.0], [89.9, 989.0], [90.0, 992.0], [90.1, 992.0], [90.2, 992.0], [90.3, 992.0], [90.4, 992.0], [90.5, 992.0], [90.6, 992.0], [90.7, 992.0], [90.8, 992.0], [90.9, 992.0], [91.0, 1010.0], [91.1, 1010.0], [91.2, 1010.0], [91.3, 1010.0], [91.4, 1010.0], [91.5, 1010.0], [91.6, 1010.0], [91.7, 1010.0], [91.8, 1010.0], [91.9, 1010.0], [92.0, 1018.0], [92.1, 1018.0], [92.2, 1018.0], [92.3, 1018.0], [92.4, 1018.0], [92.5, 1018.0], [92.6, 1018.0], [92.7, 1018.0], [92.8, 1018.0], [92.9, 1018.0], [93.0, 1028.0], [93.1, 1028.0], [93.2, 1028.0], [93.3, 1028.0], [93.4, 1028.0], [93.5, 1028.0], [93.6, 1028.0], [93.7, 1028.0], [93.8, 1028.0], [93.9, 1028.0], [94.0, 1031.0], [94.1, 1031.0], [94.2, 1031.0], [94.3, 1031.0], [94.4, 1031.0], [94.5, 1031.0], [94.6, 1031.0], [94.7, 1031.0], [94.8, 1031.0], [94.9, 1031.0], [95.0, 1031.0], [95.1, 1031.0], [95.2, 1031.0], [95.3, 1031.0], [95.4, 1031.0], [95.5, 1031.0], [95.6, 1031.0], [95.7, 1031.0], [95.8, 1031.0], [95.9, 1031.0], [96.0, 1047.0], [96.1, 1047.0], [96.2, 1047.0], [96.3, 1047.0], [96.4, 1047.0], [96.5, 1047.0], [96.6, 1047.0], [96.7, 1047.0], [96.8, 1047.0], [96.9, 1047.0], [97.0, 1047.0], [97.1, 1047.0], [97.2, 1047.0], [97.3, 1047.0], [97.4, 1047.0], [97.5, 1047.0], [97.6, 1047.0], [97.7, 1047.0], [97.8, 1047.0], [97.9, 1047.0], [98.0, 1049.0], [98.1, 1049.0], [98.2, 1049.0], [98.3, 1049.0], [98.4, 1049.0], [98.5, 1049.0], [98.6, 1049.0], [98.7, 1049.0], [98.8, 1049.0], [98.9, 1049.0], [99.0, 1060.0], [99.1, 1060.0], [99.2, 1060.0], [99.3, 1060.0], [99.4, 1060.0], [99.5, 1060.0], [99.6, 1060.0], [99.7, 1060.0], [99.8, 1060.0], [99.9, 1060.0]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[0.0, 324.0], [0.1, 332.0], [0.2, 332.0], [0.3, 332.0], [0.4, 336.0], [0.5, 343.0], [0.6, 344.0], [0.7, 346.0], [0.8, 353.0], [0.9, 364.0], [1.0, 365.0], [1.1, 366.0], [1.2, 367.0], [1.3, 368.0], [1.4, 368.0], [1.5, 374.0], [1.6, 376.0], [1.7, 376.0], [1.8, 377.0], [1.9, 377.0], [2.0, 385.0], [2.1, 385.0], [2.2, 386.0], [2.3, 386.0], [2.4, 386.0], [2.5, 388.0], [2.6, 390.0], [2.7, 392.0], [2.8, 392.0], [2.9, 394.0], [3.0, 398.0], [3.1, 398.0], [3.2, 399.0], [3.3, 400.0], [3.4, 401.0], [3.5, 401.0], [3.6, 401.0], [3.7, 402.0], [3.8, 406.0], [3.9, 406.0], [4.0, 408.0], [4.1, 409.0], [4.2, 413.0], [4.3, 414.0], [4.4, 415.0], [4.5, 415.0], [4.6, 415.0], [4.7, 417.0], [4.8, 420.0], [4.9, 423.0], [5.0, 423.0], [5.1, 428.0], [5.2, 428.0], [5.3, 430.0], [5.4, 431.0], [5.5, 431.0], [5.6, 433.0], [5.7, 434.0], [5.8, 437.0], [5.9, 437.0], [6.0, 439.0], [6.1, 439.0], [6.2, 439.0], [6.3, 441.0], [6.4, 445.0], [6.5, 445.0], [6.6, 446.0], [6.7, 446.0], [6.8, 448.0], [6.9, 455.0], [7.0, 457.0], [7.1, 457.0], [7.2, 458.0], [7.3, 458.0], [7.4, 458.0], [7.5, 461.0], [7.6, 464.0], [7.7, 466.0], [7.8, 470.0], [7.9, 470.0], [8.0, 472.0], [8.1, 473.0], [8.2, 473.0], [8.3, 473.0], [8.4, 474.0], [8.5, 474.0], [8.6, 475.0], [8.7, 476.0], [8.8, 478.0], [8.9, 480.0], [9.0, 483.0], [9.1, 483.0], [9.2, 484.0], [9.3, 485.0], [9.4, 486.0], [9.5, 486.0], [9.6, 486.0], [9.7, 487.0], [9.8, 488.0], [9.9, 488.0], [10.0, 491.0], [10.1, 493.0], [10.2, 494.0], [10.3, 494.0], [10.4, 495.0], [10.5, 496.0], [10.6, 496.0], [10.7, 498.0], [10.8, 498.0], [10.9, 499.0], [11.0, 499.0], [11.1, 501.0], [11.2, 502.0], [11.3, 502.0], [11.4, 502.0], [11.5, 502.0], [11.6, 503.0], [11.7, 503.0], [11.8, 504.0], [11.9, 505.0], [12.0, 506.0], [12.1, 507.0], [12.2, 507.0], [12.3, 508.0], [12.4, 509.0], [12.5, 509.0], [12.6, 510.0], [12.7, 512.0], [12.8, 513.0], [12.9, 513.0], [13.0, 513.0], [13.1, 513.0], [13.2, 514.0], [13.3, 514.0], [13.4, 515.0], [13.5, 515.0], [13.6, 518.0], [13.7, 518.0], [13.8, 519.0], [13.9, 519.0], [14.0, 520.0], [14.1, 520.0], [14.2, 520.0], [14.3, 521.0], [14.4, 521.0], [14.5, 521.0], [14.6, 522.0], [14.7, 522.0], [14.8, 522.0], [14.9, 523.0], [15.0, 524.0], [15.1, 524.0], [15.2, 525.0], [15.3, 525.0], [15.4, 526.0], [15.5, 526.0], [15.6, 527.0], [15.7, 527.0], [15.8, 529.0], [15.9, 533.0], [16.0, 534.0], [16.1, 534.0], [16.2, 536.0], [16.3, 539.0], [16.4, 541.0], [16.5, 541.0], [16.6, 542.0], [16.7, 542.0], [16.8, 544.0], [16.9, 548.0], [17.0, 548.0], [17.1, 549.0], [17.2, 550.0], [17.3, 552.0], [17.4, 552.0], [17.5, 552.0], [17.6, 554.0], [17.7, 554.0], [17.8, 555.0], [17.9, 555.0], [18.0, 556.0], [18.1, 557.0], [18.2, 557.0], [18.3, 558.0], [18.4, 561.0], [18.5, 562.0], [18.6, 563.0], [18.7, 564.0], [18.8, 565.0], [18.9, 567.0], [19.0, 567.0], [19.1, 568.0], [19.2, 568.0], [19.3, 569.0], [19.4, 574.0], [19.5, 575.0], [19.6, 578.0], [19.7, 578.0], [19.8, 579.0], [19.9, 580.0], [20.0, 581.0], [20.1, 582.0], [20.2, 582.0], [20.3, 583.0], [20.4, 583.0], [20.5, 583.0], [20.6, 584.0], [20.7, 584.0], [20.8, 584.0], [20.9, 584.0], [21.0, 586.0], [21.1, 587.0], [21.2, 588.0], [21.3, 589.0], [21.4, 589.0], [21.5, 589.0], [21.6, 593.0], [21.7, 593.0], [21.8, 597.0], [21.9, 599.0], [22.0, 599.0], [22.1, 600.0], [22.2, 601.0], [22.3, 601.0], [22.4, 601.0], [22.5, 601.0], [22.6, 603.0], [22.7, 603.0], [22.8, 604.0], [22.9, 604.0], [23.0, 605.0], [23.1, 607.0], [23.2, 608.0], [23.3, 608.0], [23.4, 608.0], [23.5, 609.0], [23.6, 609.0], [23.7, 610.0], [23.8, 610.0], [23.9, 611.0], [24.0, 612.0], [24.1, 613.0], [24.2, 615.0], [24.3, 615.0], [24.4, 615.0], [24.5, 617.0], [24.6, 617.0], [24.7, 618.0], [24.8, 618.0], [24.9, 620.0], [25.0, 621.0], [25.1, 622.0], [25.2, 623.0], [25.3, 623.0], [25.4, 625.0], [25.5, 626.0], [25.6, 627.0], [25.7, 630.0], [25.8, 632.0], [25.9, 633.0], [26.0, 633.0], [26.1, 633.0], [26.2, 635.0], [26.3, 636.0], [26.4, 636.0], [26.5, 638.0], [26.6, 639.0], [26.7, 642.0], [26.8, 645.0], [26.9, 645.0], [27.0, 650.0], [27.1, 650.0], [27.2, 653.0], [27.3, 656.0], [27.4, 657.0], [27.5, 658.0], [27.6, 659.0], [27.7, 659.0], [27.8, 659.0], [27.9, 660.0], [28.0, 661.0], [28.1, 661.0], [28.2, 665.0], [28.3, 667.0], [28.4, 671.0], [28.5, 671.0], [28.6, 673.0], [28.7, 674.0], [28.8, 675.0], [28.9, 676.0], [29.0, 679.0], [29.1, 681.0], [29.2, 682.0], [29.3, 685.0], [29.4, 686.0], [29.5, 688.0], [29.6, 691.0], [29.7, 694.0], [29.8, 694.0], [29.9, 694.0], [30.0, 701.0], [30.1, 702.0], [30.2, 704.0], [30.3, 705.0], [30.4, 706.0], [30.5, 707.0], [30.6, 709.0], [30.7, 713.0], [30.8, 716.0], [30.9, 718.0], [31.0, 720.0], [31.1, 729.0], [31.2, 734.0], [31.3, 734.0], [31.4, 735.0], [31.5, 735.0], [31.6, 736.0], [31.7, 737.0], [31.8, 737.0], [31.9, 738.0], [32.0, 742.0], [32.1, 746.0], [32.2, 746.0], [32.3, 754.0], [32.4, 759.0], [32.5, 759.0], [32.6, 761.0], [32.7, 762.0], [32.8, 770.0], [32.9, 772.0], [33.0, 773.0], [33.1, 774.0], [33.2, 776.0], [33.3, 777.0], [33.4, 781.0], [33.5, 781.0], [33.6, 781.0], [33.7, 782.0], [33.8, 783.0], [33.9, 785.0], [34.0, 788.0], [34.1, 789.0], [34.2, 793.0], [34.3, 797.0], [34.4, 798.0], [34.5, 798.0], [34.6, 799.0], [34.7, 808.0], [34.8, 809.0], [34.9, 809.0], [35.0, 810.0], [35.1, 811.0], [35.2, 812.0], [35.3, 813.0], [35.4, 813.0], [35.5, 816.0], [35.6, 817.0], [35.7, 821.0], [35.8, 821.0], [35.9, 825.0], [36.0, 829.0], [36.1, 832.0], [36.2, 832.0], [36.3, 833.0], [36.4, 835.0], [36.5, 836.0], [36.6, 846.0], [36.7, 848.0], [36.8, 848.0], [36.9, 861.0], [37.0, 862.0], [37.1, 867.0], [37.2, 869.0], [37.3, 873.0], [37.4, 879.0], [37.5, 881.0], [37.6, 885.0], [37.7, 888.0], [37.8, 891.0], [37.9, 897.0], [38.0, 897.0], [38.1, 898.0], [38.2, 900.0], [38.3, 902.0], [38.4, 911.0], [38.5, 913.0], [38.6, 915.0], [38.7, 917.0], [38.8, 918.0], [38.9, 919.0], [39.0, 920.0], [39.1, 920.0], [39.2, 924.0], [39.3, 927.0], [39.4, 928.0], [39.5, 929.0], [39.6, 936.0], [39.7, 936.0], [39.8, 938.0], [39.9, 939.0], [40.0, 948.0], [40.1, 954.0], [40.2, 955.0], [40.3, 956.0], [40.4, 956.0], [40.5, 956.0], [40.6, 957.0], [40.7, 959.0], [40.8, 962.0], [40.9, 969.0], [41.0, 971.0], [41.1, 972.0], [41.2, 973.0], [41.3, 974.0], [41.4, 978.0], [41.5, 978.0], [41.6, 982.0], [41.7, 983.0], [41.8, 984.0], [41.9, 984.0], [42.0, 986.0], [42.1, 990.0], [42.2, 991.0], [42.3, 992.0], [42.4, 994.0], [42.5, 1005.0], [42.6, 1006.0], [42.7, 1008.0], [42.8, 1009.0], [42.9, 1014.0], [43.0, 1017.0], [43.1, 1019.0], [43.2, 1019.0], [43.3, 1027.0], [43.4, 1033.0], [43.5, 1035.0], [43.6, 1036.0], [43.7, 1044.0], [43.8, 1044.0], [43.9, 1045.0], [44.0, 1049.0], [44.1, 1050.0], [44.2, 1052.0], [44.3, 1056.0], [44.4, 1062.0], [44.5, 1069.0], [44.6, 1070.0], [44.7, 1072.0], [44.8, 1076.0], [44.9, 1080.0], [45.0, 1083.0], [45.1, 1087.0], [45.2, 1087.0], [45.3, 1088.0], [45.4, 1090.0], [45.5, 1090.0], [45.6, 1090.0], [45.7, 1092.0], [45.8, 1094.0], [45.9, 1095.0], [46.0, 1101.0], [46.1, 1105.0], [46.2, 1107.0], [46.3, 1108.0], [46.4, 1111.0], [46.5, 1114.0], [46.6, 1117.0], [46.7, 1117.0], [46.8, 1118.0], [46.9, 1120.0], [47.0, 1127.0], [47.1, 1130.0], [47.2, 1131.0], [47.3, 1131.0], [47.4, 1132.0], [47.5, 1133.0], [47.6, 1136.0], [47.7, 1141.0], [47.8, 1141.0], [47.9, 1146.0], [48.0, 1156.0], [48.1, 1157.0], [48.2, 1157.0], [48.3, 1161.0], [48.4, 1162.0], [48.5, 1163.0], [48.6, 1169.0], [48.7, 1170.0], [48.8, 1171.0], [48.9, 1177.0], [49.0, 1180.0], [49.1, 1185.0], [49.2, 1187.0], [49.3, 1188.0], [49.4, 1189.0], [49.5, 1190.0], [49.6, 1191.0], [49.7, 1191.0], [49.8, 1193.0], [49.9, 1193.0], [50.0, 1198.0], [50.1, 1199.0], [50.2, 1200.0], [50.3, 1201.0], [50.4, 1204.0], [50.5, 1204.0], [50.6, 1208.0], [50.7, 1209.0], [50.8, 1211.0], [50.9, 1211.0], [51.0, 1212.0], [51.1, 1212.0], [51.2, 1215.0], [51.3, 1217.0], [51.4, 1221.0], [51.5, 1222.0], [51.6, 1223.0], [51.7, 1223.0], [51.8, 1225.0], [51.9, 1229.0], [52.0, 1241.0], [52.1, 1242.0], [52.2, 1242.0], [52.3, 1244.0], [52.4, 1247.0], [52.5, 1249.0], [52.6, 1249.0], [52.7, 1249.0], [52.8, 1251.0], [52.9, 1251.0], [53.0, 1251.0], [53.1, 1260.0], [53.2, 1262.0], [53.3, 1263.0], [53.4, 1263.0], [53.5, 1264.0], [53.6, 1264.0], [53.7, 1265.0], [53.8, 1268.0], [53.9, 1268.0], [54.0, 1269.0], [54.1, 1271.0], [54.2, 1271.0], [54.3, 1273.0], [54.4, 1276.0], [54.5, 1276.0], [54.6, 1277.0], [54.7, 1278.0], [54.8, 1279.0], [54.9, 1280.0], [55.0, 1283.0], [55.1, 1284.0], [55.2, 1285.0], [55.3, 1285.0], [55.4, 1287.0], [55.5, 1288.0], [55.6, 1288.0], [55.7, 1288.0], [55.8, 1291.0], [55.9, 1295.0], [56.0, 1295.0], [56.1, 1296.0], [56.2, 1300.0], [56.3, 1300.0], [56.4, 1301.0], [56.5, 1301.0], [56.6, 1301.0], [56.7, 1303.0], [56.8, 1310.0], [56.9, 1312.0], [57.0, 1312.0], [57.1, 1313.0], [57.2, 1314.0], [57.3, 1318.0], [57.4, 1319.0], [57.5, 1321.0], [57.6, 1321.0], [57.7, 1321.0], [57.8, 1323.0], [57.9, 1324.0], [58.0, 1325.0], [58.1, 1325.0], [58.2, 1326.0], [58.3, 1327.0], [58.4, 1327.0], [58.5, 1327.0], [58.6, 1328.0], [58.7, 1333.0], [58.8, 1333.0], [58.9, 1334.0], [59.0, 1334.0], [59.1, 1336.0], [59.2, 1336.0], [59.3, 1338.0], [59.4, 1338.0], [59.5, 1339.0], [59.6, 1340.0], [59.7, 1340.0], [59.8, 1340.0], [59.9, 1343.0], [60.0, 1344.0], [60.1, 1345.0], [60.2, 1346.0], [60.3, 1348.0], [60.4, 1349.0], [60.5, 1355.0], [60.6, 1359.0], [60.7, 1359.0], [60.8, 1361.0], [60.9, 1361.0], [61.0, 1366.0], [61.1, 1368.0], [61.2, 1368.0], [61.3, 1370.0], [61.4, 1372.0], [61.5, 1373.0], [61.6, 1374.0], [61.7, 1378.0], [61.8, 1380.0], [61.9, 1380.0], [62.0, 1382.0], [62.1, 1383.0], [62.2, 1387.0], [62.3, 1387.0], [62.4, 1388.0], [62.5, 1388.0], [62.6, 1388.0], [62.7, 1388.0], [62.8, 1388.0], [62.9, 1389.0], [63.0, 1392.0], [63.1, 1396.0], [63.2, 1397.0], [63.3, 1397.0], [63.4, 1398.0], [63.5, 1398.0], [63.6, 1399.0], [63.7, 1400.0], [63.8, 1400.0], [63.9, 1401.0], [64.0, 1402.0], [64.1, 1404.0], [64.2, 1407.0], [64.3, 1407.0], [64.4, 1408.0], [64.5, 1408.0], [64.6, 1409.0], [64.7, 1411.0], [64.8, 1411.0], [64.9, 1412.0], [65.0, 1412.0], [65.1, 1415.0], [65.2, 1416.0], [65.3, 1416.0], [65.4, 1417.0], [65.5, 1419.0], [65.6, 1420.0], [65.7, 1423.0], [65.8, 1426.0], [65.9, 1427.0], [66.0, 1428.0], [66.1, 1429.0], [66.2, 1430.0], [66.3, 1433.0], [66.4, 1434.0], [66.5, 1438.0], [66.6, 1438.0], [66.7, 1440.0], [66.8, 1441.0], [66.9, 1441.0], [67.0, 1441.0], [67.1, 1443.0], [67.2, 1444.0], [67.3, 1444.0], [67.4, 1444.0], [67.5, 1445.0], [67.6, 1446.0], [67.7, 1449.0], [67.8, 1449.0], [67.9, 1449.0], [68.0, 1450.0], [68.1, 1451.0], [68.2, 1454.0], [68.3, 1454.0], [68.4, 1455.0], [68.5, 1457.0], [68.6, 1457.0], [68.7, 1464.0], [68.8, 1464.0], [68.9, 1467.0], [69.0, 1470.0], [69.1, 1473.0], [69.2, 1473.0], [69.3, 1474.0], [69.4, 1475.0], [69.5, 1476.0], [69.6, 1477.0], [69.7, 1477.0], [69.8, 1482.0], [69.9, 1482.0], [70.0, 1483.0], [70.1, 1487.0], [70.2, 1488.0], [70.3, 1488.0], [70.4, 1489.0], [70.5, 1490.0], [70.6, 1490.0], [70.7, 1493.0], [70.8, 1493.0], [70.9, 1493.0], [71.0, 1500.0], [71.1, 1501.0], [71.2, 1502.0], [71.3, 1503.0], [71.4, 1504.0], [71.5, 1504.0], [71.6, 1505.0], [71.7, 1505.0], [71.8, 1506.0], [71.9, 1506.0], [72.0, 1506.0], [72.1, 1507.0], [72.2, 1510.0], [72.3, 1512.0], [72.4, 1513.0], [72.5, 1514.0], [72.6, 1515.0], [72.7, 1521.0], [72.8, 1526.0], [72.9, 1526.0], [73.0, 1528.0], [73.1, 1530.0], [73.2, 1534.0], [73.3, 1539.0], [73.4, 1541.0], [73.5, 1545.0], [73.6, 1548.0], [73.7, 1550.0], [73.8, 1555.0], [73.9, 1556.0], [74.0, 1558.0], [74.1, 1559.0], [74.2, 1562.0], [74.3, 1564.0], [74.4, 1568.0], [74.5, 1570.0], [74.6, 1572.0], [74.7, 1572.0], [74.8, 1574.0], [74.9, 1574.0], [75.0, 1575.0], [75.1, 1575.0], [75.2, 1577.0], [75.3, 1580.0], [75.4, 1581.0], [75.5, 1581.0], [75.6, 1582.0], [75.7, 1586.0], [75.8, 1587.0], [75.9, 1589.0], [76.0, 1589.0], [76.1, 1592.0], [76.2, 1592.0], [76.3, 1593.0], [76.4, 1596.0], [76.5, 1597.0], [76.6, 1597.0], [76.7, 1601.0], [76.8, 1602.0], [76.9, 1604.0], [77.0, 1605.0], [77.1, 1609.0], [77.2, 1609.0], [77.3, 1612.0], [77.4, 1613.0], [77.5, 1614.0], [77.6, 1614.0], [77.7, 1615.0], [77.8, 1616.0], [77.9, 1616.0], [78.0, 1618.0], [78.1, 1619.0], [78.2, 1625.0], [78.3, 1630.0], [78.4, 1630.0], [78.5, 1635.0], [78.6, 1639.0], [78.7, 1645.0], [78.8, 1648.0], [78.9, 1648.0], [79.0, 1649.0], [79.1, 1649.0], [79.2, 1649.0], [79.3, 1651.0], [79.4, 1652.0], [79.5, 1654.0], [79.6, 1654.0], [79.7, 1657.0], [79.8, 1658.0], [79.9, 1661.0], [80.0, 1662.0], [80.1, 1667.0], [80.2, 1669.0], [80.3, 1674.0], [80.4, 1675.0], [80.5, 1677.0], [80.6, 1677.0], [80.7, 1680.0], [80.8, 1682.0], [80.9, 1686.0], [81.0, 1692.0], [81.1, 1692.0], [81.2, 1693.0], [81.3, 1698.0], [81.4, 1699.0], [81.5, 1700.0], [81.6, 1702.0], [81.7, 1708.0], [81.8, 1714.0], [81.9, 1718.0], [82.0, 1718.0], [82.1, 1730.0], [82.2, 1734.0], [82.3, 1736.0], [82.4, 1747.0], [82.5, 1755.0], [82.6, 1755.0], [82.7, 1757.0], [82.8, 1759.0], [82.9, 1761.0], [83.0, 1762.0], [83.1, 1764.0], [83.2, 1770.0], [83.3, 1770.0], [83.4, 1778.0], [83.5, 1782.0], [83.6, 1783.0], [83.7, 1784.0], [83.8, 1786.0], [83.9, 1787.0], [84.0, 1793.0], [84.1, 1794.0], [84.2, 1796.0], [84.3, 1801.0], [84.4, 1807.0], [84.5, 1810.0], [84.6, 1812.0], [84.7, 1812.0], [84.8, 1813.0], [84.9, 1814.0], [85.0, 1815.0], [85.1, 1820.0], [85.2, 1826.0], [85.3, 1826.0], [85.4, 1826.0], [85.5, 1828.0], [85.6, 1829.0], [85.7, 1834.0], [85.8, 1843.0], [85.9, 1850.0], [86.0, 1851.0], [86.1, 1851.0], [86.2, 1852.0], [86.3, 1855.0], [86.4, 1861.0], [86.5, 1861.0], [86.6, 1863.0], [86.7, 1865.0], [86.8, 1867.0], [86.9, 1870.0], [87.0, 1872.0], [87.1, 1875.0], [87.2, 1877.0], [87.3, 1880.0], [87.4, 1884.0], [87.5, 1885.0], [87.6, 1885.0], [87.7, 1892.0], [87.8, 1900.0], [87.9, 1900.0], [88.0, 1904.0], [88.1, 1909.0], [88.2, 1918.0], [88.3, 1919.0], [88.4, 1922.0], [88.5, 1923.0], [88.6, 1928.0], [88.7, 1935.0], [88.8, 1938.0], [88.9, 1940.0], [89.0, 1948.0], [89.1, 1949.0], [89.2, 1950.0], [89.3, 1950.0], [89.4, 1952.0], [89.5, 1959.0], [89.6, 1961.0], [89.7, 1963.0], [89.8, 1963.0], [89.9, 1964.0], [90.0, 1966.0], [90.1, 1970.0], [90.2, 1970.0], [90.3, 1982.0], [90.4, 1984.0], [90.5, 1993.0], [90.6, 1996.0], [90.7, 1999.0], [90.8, 2006.0], [90.9, 2009.0], [91.0, 2010.0], [91.1, 2016.0], [91.2, 2020.0], [91.3, 2040.0], [91.4, 2042.0], [91.5, 2045.0], [91.6, 2048.0], [91.7, 2051.0], [91.8, 2051.0], [91.9, 2060.0], [92.0, 2060.0], [92.1, 2070.0], [92.2, 2071.0], [92.3, 2075.0], [92.4, 2080.0], [92.5, 2084.0], [92.6, 2093.0], [92.7, 2096.0], [92.8, 2103.0], [92.9, 2107.0], [93.0, 2119.0], [93.1, 2120.0], [93.2, 2127.0], [93.3, 2128.0], [93.4, 2130.0], [93.5, 2131.0], [93.6, 2142.0], [93.7, 2147.0], [93.8, 2148.0], [93.9, 2151.0], [94.0, 2155.0], [94.1, 2160.0], [94.2, 2169.0], [94.3, 2181.0], [94.4, 2181.0], [94.5, 2195.0], [94.6, 2196.0], [94.7, 2204.0], [94.8, 2205.0], [94.9, 2211.0], [95.0, 2216.0], [95.1, 2222.0], [95.2, 2228.0], [95.3, 2232.0], [95.4, 2234.0], [95.5, 2241.0], [95.6, 2246.0], [95.7, 2251.0], [95.8, 2258.0], [95.9, 2260.0], [96.0, 2261.0], [96.1, 2262.0], [96.2, 2266.0], [96.3, 2274.0], [96.4, 2274.0], [96.5, 2285.0], [96.6, 2288.0], [96.7, 2289.0], [96.8, 2316.0], [96.9, 2320.0], [97.0, 2323.0], [97.1, 2327.0], [97.2, 2363.0], [97.3, 2370.0], [97.4, 2379.0], [97.5, 2379.0], [97.6, 2381.0], [97.7, 2395.0], [97.8, 2403.0], [97.9, 2403.0], [98.0, 2405.0], [98.1, 2406.0], [98.2, 2416.0], [98.3, 2420.0], [98.4, 2429.0], [98.5, 2483.0], [98.6, 2493.0], [98.7, 2509.0], [98.8, 2545.0], [98.9, 2545.0], [99.0, 2546.0], [99.1, 2551.0], [99.2, 2572.0], [99.3, 2607.0], [99.4, 2623.0], [99.5, 2649.0], [99.6, 2686.0], [99.7, 2743.0], [99.8, 2794.0], [99.9, 2808.0]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[0.0, 308.0], [0.1, 319.0], [0.2, 321.0], [0.3, 323.0], [0.4, 326.0], [0.5, 328.0], [0.6, 330.0], [0.7, 332.0], [0.8, 334.0], [0.9, 336.0], [1.0, 338.0], [1.1, 340.0], [1.2, 343.0], [1.3, 346.0], [1.4, 348.0], [1.5, 349.0], [1.6, 352.0], [1.7, 353.0], [1.8, 355.0], [1.9, 357.0], [2.0, 358.0], [2.1, 359.0], [2.2, 362.0], [2.3, 363.0], [2.4, 365.0], [2.5, 367.0], [2.6, 368.0], [2.7, 369.0], [2.8, 370.0], [2.9, 372.0], [3.0, 372.0], [3.1, 373.0], [3.2, 375.0], [3.3, 377.0], [3.4, 378.0], [3.5, 380.0], [3.6, 381.0], [3.7, 383.0], [3.8, 384.0], [3.9, 385.0], [4.0, 387.0], [4.1, 388.0], [4.2, 389.0], [4.3, 390.0], [4.4, 392.0], [4.5, 393.0], [4.6, 395.0], [4.7, 396.0], [4.8, 397.0], [4.9, 399.0], [5.0, 400.0], [5.1, 401.0], [5.2, 402.0], [5.3, 404.0], [5.4, 405.0], [5.5, 406.0], [5.6, 407.0], [5.7, 408.0], [5.8, 408.0], [5.9, 409.0], [6.0, 410.0], [6.1, 412.0], [6.2, 413.0], [6.3, 415.0], [6.4, 416.0], [6.5, 417.0], [6.6, 418.0], [6.7, 420.0], [6.8, 421.0], [6.9, 422.0], [7.0, 423.0], [7.1, 424.0], [7.2, 425.0], [7.3, 426.0], [7.4, 427.0], [7.5, 429.0], [7.6, 430.0], [7.7, 432.0], [7.8, 432.0], [7.9, 434.0], [8.0, 436.0], [8.1, 437.0], [8.2, 439.0], [8.3, 441.0], [8.4, 444.0], [8.5, 445.0], [8.6, 447.0], [8.7, 448.0], [8.8, 449.0], [8.9, 451.0], [9.0, 452.0], [9.1, 453.0], [9.2, 455.0], [9.3, 457.0], [9.4, 458.0], [9.5, 459.0], [9.6, 461.0], [9.7, 461.0], [9.8, 462.0], [9.9, 464.0], [10.0, 465.0], [10.1, 465.0], [10.2, 467.0], [10.3, 469.0], [10.4, 470.0], [10.5, 471.0], [10.6, 472.0], [10.7, 473.0], [10.8, 474.0], [10.9, 475.0], [11.0, 476.0], [11.1, 477.0], [11.2, 478.0], [11.3, 480.0], [11.4, 480.0], [11.5, 481.0], [11.6, 482.0], [11.7, 483.0], [11.8, 485.0], [11.9, 486.0], [12.0, 487.0], [12.1, 488.0], [12.2, 489.0], [12.3, 489.0], [12.4, 490.0], [12.5, 491.0], [12.6, 491.0], [12.7, 493.0], [12.8, 494.0], [12.9, 495.0], [13.0, 496.0], [13.1, 496.0], [13.2, 497.0], [13.3, 498.0], [13.4, 499.0], [13.5, 500.0], [13.6, 501.0], [13.7, 502.0], [13.8, 502.0], [13.9, 503.0], [14.0, 504.0], [14.1, 506.0], [14.2, 507.0], [14.3, 507.0], [14.4, 508.0], [14.5, 509.0], [14.6, 511.0], [14.7, 512.0], [14.8, 513.0], [14.9, 514.0], [15.0, 515.0], [15.1, 516.0], [15.2, 518.0], [15.3, 519.0], [15.4, 520.0], [15.5, 522.0], [15.6, 524.0], [15.7, 525.0], [15.8, 526.0], [15.9, 528.0], [16.0, 529.0], [16.1, 530.0], [16.2, 531.0], [16.3, 532.0], [16.4, 533.0], [16.5, 535.0], [16.6, 536.0], [16.7, 537.0], [16.8, 538.0], [16.9, 539.0], [17.0, 540.0], [17.1, 541.0], [17.2, 541.0], [17.3, 543.0], [17.4, 544.0], [17.5, 545.0], [17.6, 546.0], [17.7, 548.0], [17.8, 551.0], [17.9, 552.0], [18.0, 553.0], [18.1, 553.0], [18.2, 554.0], [18.3, 556.0], [18.4, 557.0], [18.5, 560.0], [18.6, 561.0], [18.7, 562.0], [18.8, 563.0], [18.9, 564.0], [19.0, 565.0], [19.1, 567.0], [19.2, 568.0], [19.3, 569.0], [19.4, 570.0], [19.5, 570.0], [19.6, 571.0], [19.7, 572.0], [19.8, 573.0], [19.9, 574.0], [20.0, 574.0], [20.1, 576.0], [20.2, 578.0], [20.3, 579.0], [20.4, 580.0], [20.5, 581.0], [20.6, 582.0], [20.7, 583.0], [20.8, 584.0], [20.9, 586.0], [21.0, 588.0], [21.1, 589.0], [21.2, 590.0], [21.3, 591.0], [21.4, 593.0], [21.5, 593.0], [21.6, 594.0], [21.7, 595.0], [21.8, 596.0], [21.9, 597.0], [22.0, 599.0], [22.1, 600.0], [22.2, 601.0], [22.3, 602.0], [22.4, 603.0], [22.5, 605.0], [22.6, 606.0], [22.7, 607.0], [22.8, 608.0], [22.9, 609.0], [23.0, 610.0], [23.1, 611.0], [23.2, 613.0], [23.3, 614.0], [23.4, 614.0], [23.5, 615.0], [23.6, 617.0], [23.7, 618.0], [23.8, 619.0], [23.9, 620.0], [24.0, 621.0], [24.1, 622.0], [24.2, 623.0], [24.3, 624.0], [24.4, 625.0], [24.5, 627.0], [24.6, 628.0], [24.7, 629.0], [24.8, 630.0], [24.9, 632.0], [25.0, 633.0], [25.1, 634.0], [25.2, 636.0], [25.3, 637.0], [25.4, 638.0], [25.5, 639.0], [25.6, 640.0], [25.7, 641.0], [25.8, 643.0], [25.9, 644.0], [26.0, 646.0], [26.1, 647.0], [26.2, 648.0], [26.3, 649.0], [26.4, 651.0], [26.5, 652.0], [26.6, 653.0], [26.7, 654.0], [26.8, 655.0], [26.9, 657.0], [27.0, 658.0], [27.1, 660.0], [27.2, 660.0], [27.3, 662.0], [27.4, 663.0], [27.5, 665.0], [27.6, 667.0], [27.7, 668.0], [27.8, 668.0], [27.9, 669.0], [28.0, 670.0], [28.1, 671.0], [28.2, 672.0], [28.3, 673.0], [28.4, 675.0], [28.5, 675.0], [28.6, 676.0], [28.7, 677.0], [28.8, 677.0], [28.9, 678.0], [29.0, 679.0], [29.1, 680.0], [29.2, 681.0], [29.3, 682.0], [29.4, 683.0], [29.5, 685.0], [29.6, 686.0], [29.7, 687.0], [29.8, 688.0], [29.9, 689.0], [30.0, 690.0], [30.1, 692.0], [30.2, 693.0], [30.3, 695.0], [30.4, 695.0], [30.5, 696.0], [30.6, 697.0], [30.7, 698.0], [30.8, 699.0], [30.9, 700.0], [31.0, 701.0], [31.1, 702.0], [31.2, 703.0], [31.3, 704.0], [31.4, 705.0], [31.5, 707.0], [31.6, 707.0], [31.7, 709.0], [31.8, 710.0], [31.9, 711.0], [32.0, 712.0], [32.1, 713.0], [32.2, 714.0], [32.3, 715.0], [32.4, 716.0], [32.5, 718.0], [32.6, 720.0], [32.7, 721.0], [32.8, 723.0], [32.9, 724.0], [33.0, 725.0], [33.1, 727.0], [33.2, 728.0], [33.3, 730.0], [33.4, 732.0], [33.5, 733.0], [33.6, 735.0], [33.7, 737.0], [33.8, 738.0], [33.9, 740.0], [34.0, 742.0], [34.1, 745.0], [34.2, 747.0], [34.3, 749.0], [34.4, 752.0], [34.5, 755.0], [34.6, 755.0], [34.7, 757.0], [34.8, 758.0], [34.9, 759.0], [35.0, 761.0], [35.1, 762.0], [35.2, 763.0], [35.3, 764.0], [35.4, 765.0], [35.5, 767.0], [35.6, 767.0], [35.7, 768.0], [35.8, 770.0], [35.9, 772.0], [36.0, 775.0], [36.1, 775.0], [36.2, 777.0], [36.3, 779.0], [36.4, 780.0], [36.5, 782.0], [36.6, 783.0], [36.7, 786.0], [36.8, 787.0], [36.9, 789.0], [37.0, 791.0], [37.1, 792.0], [37.2, 793.0], [37.3, 795.0], [37.4, 795.0], [37.5, 796.0], [37.6, 797.0], [37.7, 799.0], [37.8, 800.0], [37.9, 801.0], [38.0, 803.0], [38.1, 804.0], [38.2, 806.0], [38.3, 808.0], [38.4, 809.0], [38.5, 809.0], [38.6, 811.0], [38.7, 812.0], [38.8, 813.0], [38.9, 815.0], [39.0, 817.0], [39.1, 818.0], [39.2, 820.0], [39.3, 822.0], [39.4, 823.0], [39.5, 825.0], [39.6, 826.0], [39.7, 827.0], [39.8, 829.0], [39.9, 832.0], [40.0, 833.0], [40.1, 836.0], [40.2, 841.0], [40.3, 845.0], [40.4, 847.0], [40.5, 849.0], [40.6, 850.0], [40.7, 853.0], [40.8, 855.0], [40.9, 858.0], [41.0, 859.0], [41.1, 861.0], [41.2, 862.0], [41.3, 864.0], [41.4, 867.0], [41.5, 871.0], [41.6, 873.0], [41.7, 876.0], [41.8, 878.0], [41.9, 880.0], [42.0, 881.0], [42.1, 882.0], [42.2, 883.0], [42.3, 885.0], [42.4, 888.0], [42.5, 889.0], [42.6, 890.0], [42.7, 892.0], [42.8, 894.0], [42.9, 896.0], [43.0, 898.0], [43.1, 900.0], [43.2, 901.0], [43.3, 903.0], [43.4, 906.0], [43.5, 907.0], [43.6, 909.0], [43.7, 911.0], [43.8, 912.0], [43.9, 914.0], [44.0, 916.0], [44.1, 918.0], [44.2, 920.0], [44.3, 923.0], [44.4, 926.0], [44.5, 927.0], [44.6, 928.0], [44.7, 931.0], [44.8, 934.0], [44.9, 936.0], [45.0, 938.0], [45.1, 942.0], [45.2, 944.0], [45.3, 947.0], [45.4, 949.0], [45.5, 951.0], [45.6, 953.0], [45.7, 954.0], [45.8, 957.0], [45.9, 961.0], [46.0, 965.0], [46.1, 968.0], [46.2, 970.0], [46.3, 972.0], [46.4, 976.0], [46.5, 978.0], [46.6, 984.0], [46.7, 987.0], [46.8, 990.0], [46.9, 992.0], [47.0, 993.0], [47.1, 995.0], [47.2, 996.0], [47.3, 998.0], [47.4, 1000.0], [47.5, 1003.0], [47.6, 1006.0], [47.7, 1009.0], [47.8, 1012.0], [47.9, 1014.0], [48.0, 1017.0], [48.1, 1019.0], [48.2, 1022.0], [48.3, 1026.0], [48.4, 1029.0], [48.5, 1032.0], [48.6, 1037.0], [48.7, 1043.0], [48.8, 1056.0], [48.9, 1060.0], [49.0, 1062.0], [49.1, 1066.0], [49.2, 1071.0], [49.3, 1074.0], [49.4, 1077.0], [49.5, 1079.0], [49.6, 1081.0], [49.7, 1084.0], [49.8, 1087.0], [49.9, 1089.0], [50.0, 1091.0], [50.1, 1093.0], [50.2, 1095.0], [50.3, 1096.0], [50.4, 1098.0], [50.5, 1099.0], [50.6, 1101.0], [50.7, 1103.0], [50.8, 1104.0], [50.9, 1106.0], [51.0, 1108.0], [51.1, 1110.0], [51.2, 1113.0], [51.3, 1115.0], [51.4, 1116.0], [51.5, 1119.0], [51.6, 1120.0], [51.7, 1122.0], [51.8, 1124.0], [51.9, 1125.0], [52.0, 1126.0], [52.1, 1129.0], [52.2, 1131.0], [52.3, 1133.0], [52.4, 1135.0], [52.5, 1137.0], [52.6, 1139.0], [52.7, 1141.0], [52.8, 1144.0], [52.9, 1147.0], [53.0, 1149.0], [53.1, 1150.0], [53.2, 1152.0], [53.3, 1154.0], [53.4, 1156.0], [53.5, 1158.0], [53.6, 1160.0], [53.7, 1161.0], [53.8, 1162.0], [53.9, 1165.0], [54.0, 1168.0], [54.1, 1169.0], [54.2, 1170.0], [54.3, 1171.0], [54.4, 1173.0], [54.5, 1175.0], [54.6, 1176.0], [54.7, 1177.0], [54.8, 1180.0], [54.9, 1181.0], [55.0, 1183.0], [55.1, 1185.0], [55.2, 1187.0], [55.3, 1188.0], [55.4, 1190.0], [55.5, 1191.0], [55.6, 1192.0], [55.7, 1193.0], [55.8, 1194.0], [55.9, 1195.0], [56.0, 1196.0], [56.1, 1197.0], [56.2, 1198.0], [56.3, 1199.0], [56.4, 1200.0], [56.5, 1201.0], [56.6, 1202.0], [56.7, 1204.0], [56.8, 1205.0], [56.9, 1206.0], [57.0, 1207.0], [57.1, 1208.0], [57.2, 1209.0], [57.3, 1210.0], [57.4, 1211.0], [57.5, 1212.0], [57.6, 1213.0], [57.7, 1214.0], [57.8, 1216.0], [57.9, 1216.0], [58.0, 1218.0], [58.1, 1219.0], [58.2, 1221.0], [58.3, 1222.0], [58.4, 1224.0], [58.5, 1225.0], [58.6, 1226.0], [58.7, 1228.0], [58.8, 1229.0], [58.9, 1230.0], [59.0, 1232.0], [59.1, 1233.0], [59.2, 1235.0], [59.3, 1236.0], [59.4, 1237.0], [59.5, 1239.0], [59.6, 1240.0], [59.7, 1241.0], [59.8, 1243.0], [59.9, 1245.0], [60.0, 1247.0], [60.1, 1248.0], [60.2, 1249.0], [60.3, 1250.0], [60.4, 1251.0], [60.5, 1252.0], [60.6, 1254.0], [60.7, 1255.0], [60.8, 1257.0], [60.9, 1258.0], [61.0, 1259.0], [61.1, 1259.0], [61.2, 1261.0], [61.3, 1263.0], [61.4, 1264.0], [61.5, 1266.0], [61.6, 1267.0], [61.7, 1269.0], [61.8, 1270.0], [61.9, 1271.0], [62.0, 1273.0], [62.1, 1274.0], [62.2, 1275.0], [62.3, 1276.0], [62.4, 1277.0], [62.5, 1279.0], [62.6, 1280.0], [62.7, 1281.0], [62.8, 1282.0], [62.9, 1283.0], [63.0, 1284.0], [63.1, 1285.0], [63.2, 1287.0], [63.3, 1288.0], [63.4, 1289.0], [63.5, 1290.0], [63.6, 1291.0], [63.7, 1293.0], [63.8, 1294.0], [63.9, 1296.0], [64.0, 1297.0], [64.1, 1298.0], [64.2, 1299.0], [64.3, 1300.0], [64.4, 1302.0], [64.5, 1303.0], [64.6, 1304.0], [64.7, 1305.0], [64.8, 1306.0], [64.9, 1307.0], [65.0, 1308.0], [65.1, 1310.0], [65.2, 1311.0], [65.3, 1312.0], [65.4, 1313.0], [65.5, 1315.0], [65.6, 1317.0], [65.7, 1317.0], [65.8, 1318.0], [65.9, 1320.0], [66.0, 1321.0], [66.1, 1322.0], [66.2, 1324.0], [66.3, 1325.0], [66.4, 1326.0], [66.5, 1328.0], [66.6, 1329.0], [66.7, 1330.0], [66.8, 1331.0], [66.9, 1332.0], [67.0, 1333.0], [67.1, 1334.0], [67.2, 1336.0], [67.3, 1337.0], [67.4, 1338.0], [67.5, 1338.0], [67.6, 1339.0], [67.7, 1340.0], [67.8, 1341.0], [67.9, 1342.0], [68.0, 1344.0], [68.1, 1345.0], [68.2, 1345.0], [68.3, 1347.0], [68.4, 1347.0], [68.5, 1349.0], [68.6, 1350.0], [68.7, 1351.0], [68.8, 1353.0], [68.9, 1353.0], [69.0, 1355.0], [69.1, 1356.0], [69.2, 1357.0], [69.3, 1358.0], [69.4, 1360.0], [69.5, 1360.0], [69.6, 1362.0], [69.7, 1364.0], [69.8, 1365.0], [69.9, 1366.0], [70.0, 1367.0], [70.1, 1368.0], [70.2, 1370.0], [70.3, 1371.0], [70.4, 1372.0], [70.5, 1373.0], [70.6, 1374.0], [70.7, 1375.0], [70.8, 1376.0], [70.9, 1378.0], [71.0, 1380.0], [71.1, 1380.0], [71.2, 1381.0], [71.3, 1382.0], [71.4, 1384.0], [71.5, 1385.0], [71.6, 1386.0], [71.7, 1387.0], [71.8, 1389.0], [71.9, 1390.0], [72.0, 1390.0], [72.1, 1391.0], [72.2, 1393.0], [72.3, 1394.0], [72.4, 1395.0], [72.5, 1396.0], [72.6, 1397.0], [72.7, 1398.0], [72.8, 1400.0], [72.9, 1400.0], [73.0, 1403.0], [73.1, 1404.0], [73.2, 1407.0], [73.3, 1408.0], [73.4, 1410.0], [73.5, 1411.0], [73.6, 1411.0], [73.7, 1413.0], [73.8, 1413.0], [73.9, 1415.0], [74.0, 1416.0], [74.1, 1418.0], [74.2, 1418.0], [74.3, 1419.0], [74.4, 1420.0], [74.5, 1422.0], [74.6, 1424.0], [74.7, 1426.0], [74.8, 1427.0], [74.9, 1428.0], [75.0, 1430.0], [75.1, 1431.0], [75.2, 1433.0], [75.3, 1435.0], [75.4, 1436.0], [75.5, 1437.0], [75.6, 1440.0], [75.7, 1442.0], [75.8, 1443.0], [75.9, 1445.0], [76.0, 1447.0], [76.1, 1449.0], [76.2, 1450.0], [76.3, 1453.0], [76.4, 1454.0], [76.5, 1456.0], [76.6, 1457.0], [76.7, 1459.0], [76.8, 1461.0], [76.9, 1462.0], [77.0, 1463.0], [77.1, 1464.0], [77.2, 1466.0], [77.3, 1467.0], [77.4, 1468.0], [77.5, 1470.0], [77.6, 1471.0], [77.7, 1473.0], [77.8, 1474.0], [77.9, 1475.0], [78.0, 1477.0], [78.1, 1479.0], [78.2, 1480.0], [78.3, 1482.0], [78.4, 1483.0], [78.5, 1484.0], [78.6, 1485.0], [78.7, 1486.0], [78.8, 1488.0], [78.9, 1490.0], [79.0, 1491.0], [79.1, 1493.0], [79.2, 1494.0], [79.3, 1495.0], [79.4, 1496.0], [79.5, 1498.0], [79.6, 1499.0], [79.7, 1500.0], [79.8, 1502.0], [79.9, 1503.0], [80.0, 1504.0], [80.1, 1506.0], [80.2, 1507.0], [80.3, 1507.0], [80.4, 1509.0], [80.5, 1511.0], [80.6, 1513.0], [80.7, 1515.0], [80.8, 1516.0], [80.9, 1519.0], [81.0, 1521.0], [81.1, 1523.0], [81.2, 1525.0], [81.3, 1527.0], [81.4, 1528.0], [81.5, 1529.0], [81.6, 1531.0], [81.7, 1532.0], [81.8, 1533.0], [81.9, 1535.0], [82.0, 1536.0], [82.1, 1538.0], [82.2, 1540.0], [82.3, 1541.0], [82.4, 1543.0], [82.5, 1546.0], [82.6, 1547.0], [82.7, 1549.0], [82.8, 1551.0], [82.9, 1552.0], [83.0, 1554.0], [83.1, 1556.0], [83.2, 1558.0], [83.3, 1559.0], [83.4, 1560.0], [83.5, 1562.0], [83.6, 1564.0], [83.7, 1566.0], [83.8, 1569.0], [83.9, 1571.0], [84.0, 1574.0], [84.1, 1575.0], [84.2, 1577.0], [84.3, 1579.0], [84.4, 1580.0], [84.5, 1581.0], [84.6, 1583.0], [84.7, 1584.0], [84.8, 1586.0], [84.9, 1588.0], [85.0, 1590.0], [85.1, 1592.0], [85.2, 1594.0], [85.3, 1597.0], [85.4, 1599.0], [85.5, 1601.0], [85.6, 1602.0], [85.7, 1604.0], [85.8, 1606.0], [85.9, 1608.0], [86.0, 1610.0], [86.1, 1612.0], [86.2, 1613.0], [86.3, 1616.0], [86.4, 1617.0], [86.5, 1618.0], [86.6, 1620.0], [86.7, 1621.0], [86.8, 1622.0], [86.9, 1624.0], [87.0, 1627.0], [87.1, 1629.0], [87.2, 1630.0], [87.3, 1635.0], [87.4, 1637.0], [87.5, 1639.0], [87.6, 1643.0], [87.7, 1645.0], [87.8, 1648.0], [87.9, 1651.0], [88.0, 1653.0], [88.1, 1656.0], [88.2, 1659.0], [88.3, 1662.0], [88.4, 1664.0], [88.5, 1665.0], [88.6, 1668.0], [88.7, 1669.0], [88.8, 1670.0], [88.9, 1672.0], [89.0, 1674.0], [89.1, 1677.0], [89.2, 1679.0], [89.3, 1681.0], [89.4, 1684.0], [89.5, 1686.0], [89.6, 1687.0], [89.7, 1690.0], [89.8, 1692.0], [89.9, 1695.0], [90.0, 1696.0], [90.1, 1698.0], [90.2, 1700.0], [90.3, 1703.0], [90.4, 1706.0], [90.5, 1708.0], [90.6, 1710.0], [90.7, 1712.0], [90.8, 1715.0], [90.9, 1717.0], [91.0, 1718.0], [91.1, 1720.0], [91.2, 1724.0], [91.3, 1727.0], [91.4, 1728.0], [91.5, 1730.0], [91.6, 1734.0], [91.7, 1740.0], [91.8, 1743.0], [91.9, 1751.0], [92.0, 1756.0], [92.1, 1760.0], [92.2, 1765.0], [92.3, 1768.0], [92.4, 1772.0], [92.5, 1775.0], [92.6, 1779.0], [92.7, 1781.0], [92.8, 1785.0], [92.9, 1788.0], [93.0, 1792.0], [93.1, 1794.0], [93.2, 1798.0], [93.3, 1802.0], [93.4, 1804.0], [93.5, 1809.0], [93.6, 1811.0], [93.7, 1815.0], [93.8, 1819.0], [93.9, 1822.0], [94.0, 1826.0], [94.1, 1829.0], [94.2, 1835.0], [94.3, 1837.0], [94.4, 1841.0], [94.5, 1845.0], [94.6, 1849.0], [94.7, 1852.0], [94.8, 1857.0], [94.9, 1863.0], [95.0, 1872.0], [95.1, 1875.0], [95.2, 1877.0], [95.3, 1882.0], [95.4, 1888.0], [95.5, 1895.0], [95.6, 1903.0], [95.7, 1906.0], [95.8, 1912.0], [95.9, 1916.0], [96.0, 1923.0], [96.1, 1927.0], [96.2, 1935.0], [96.3, 1940.0], [96.4, 1947.0], [96.5, 1954.0], [96.6, 1962.0], [96.7, 1972.0], [96.8, 1977.0], [96.9, 1986.0], [97.0, 1995.0], [97.1, 2000.0], [97.2, 2007.0], [97.3, 2016.0], [97.4, 2024.0], [97.5, 2030.0], [97.6, 2040.0], [97.7, 2048.0], [97.8, 2062.0], [97.9, 2070.0], [98.0, 2079.0], [98.1, 2099.0], [98.2, 2110.0], [98.3, 2128.0], [98.4, 2161.0], [98.5, 2170.0], [98.6, 2184.0], [98.7, 2205.0], [98.8, 2221.0], [98.9, 2243.0], [99.0, 2258.0], [99.1, 2277.0], [99.2, 2308.0], [99.3, 2327.0], [99.4, 2364.0], [99.5, 2414.0], [99.6, 2451.0], [99.7, 2513.0], [99.8, 2613.0], [99.9, 2810.0], [100.0, 3483.0]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 875.0, "series": [{"data": [[700.0, 6.0], [800.0, 51.0], [900.0, 59.0], [1000.0, 48.0], [1100.0, 76.0], [1200.0, 92.0], [1300.0, 82.0], [1400.0, 117.0], [1500.0, 96.0], [1600.0, 57.0], [1700.0, 82.0], [1800.0, 62.0], [1900.0, 17.0], [2000.0, 54.0], [2100.0, 23.0], [2200.0, 20.0], [2300.0, 12.0], [2400.0, 9.0], [2500.0, 13.0], [2600.0, 10.0], [2700.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3900.0, 4.0], [4300.0, 1.0], [4400.0, 1.0]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[0.0, 3.0], [700.0, 3.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[700.0, 44.0], [800.0, 34.0], [900.0, 13.0], [1000.0, 9.0]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[600.0, 79.0], [700.0, 47.0], [800.0, 35.0], [900.0, 43.0], [1000.0, 35.0], [1100.0, 42.0], [1200.0, 60.0], [1300.0, 75.0], [1400.0, 73.0], [1500.0, 57.0], [1600.0, 49.0], [1700.0, 28.0], [1800.0, 35.0], [1900.0, 30.0], [2000.0, 20.0], [2100.0, 19.0], [2200.0, 21.0], [2300.0, 10.0], [2400.0, 9.0], [2500.0, 6.0], [2600.0, 4.0], [2700.0, 2.0], [2800.0, 1.0], [300.0, 32.0], [400.0, 79.0], [500.0, 109.0]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[600.0, 875.0], [700.0, 696.0], [800.0, 527.0], [900.0, 430.0], [1000.0, 317.0], [1100.0, 584.0], [1200.0, 786.0], [1300.0, 856.0], [1400.0, 681.0], [1500.0, 581.0], [1600.0, 477.0], [1700.0, 307.0], [1800.0, 231.0], [1900.0, 153.0], [2000.0, 101.0], [2100.0, 57.0], [2200.0, 50.0], [2300.0, 29.0], [2400.0, 21.0], [2500.0, 12.0], [2600.0, 7.0], [2800.0, 4.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 1.0], [3400.0, 1.0], [300.0, 497.0], [400.0, 847.0], [500.0, 864.0]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7842.0, "series": [{"data": [[0.0, 1470.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7842.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2788.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 6.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58814984E12, "maxY": 494.5670000000002, "series": [{"data": [[1.58814996E12, 494.5670000000002]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[1.58814996E12, 1.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58814984E12, 48.93999999999997]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[1.58814984E12, 91.87900000000003]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[1.58814996E12, 86.02076573653491], [1.5881499E12, 100.0], [1.58814984E12, 100.0]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58814996E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 332.0, "minX": 1.0, "maxY": 4445.0, "series": [{"data": [[2.0, 4389.0], [3.0, 3952.0], [4.0, 3929.0], [5.0, 3930.0], [6.0, 3915.0], [7.0, 3762.0], [8.0, 3754.0], [9.0, 3518.0], [10.0, 3287.0], [11.0, 2583.0], [12.0, 2553.0], [13.0, 2522.0], [14.0, 2520.0], [15.0, 2500.0], [16.0, 2411.0], [17.0, 3188.0], [18.0, 2323.0], [19.0, 2288.0], [20.0, 3076.0], [21.0, 2243.0], [22.0, 2245.0], [23.0, 2350.0], [24.0, 2216.0], [26.0, 2322.0], [27.0, 2340.0], [29.0, 2600.5], [30.0, 2243.0], [31.0, 2224.0], [33.0, 2232.0], [32.0, 2333.0], [35.0, 2192.0], [34.0, 2209.0], [37.0, 2405.0], [36.0, 2644.0], [39.0, 2214.0], [38.0, 2211.0], [41.0, 2397.0], [40.0, 2218.0], [43.0, 2578.0], [42.0, 2202.0], [45.0, 2319.0], [44.0, 2209.0], [46.0, 2287.0], [49.0, 2532.0], [48.0, 2390.0], [51.0, 2367.0], [50.0, 2615.0], [53.0, 2542.0], [52.0, 2573.0], [55.0, 2481.0], [54.0, 2507.0], [57.0, 2520.0], [56.0, 2532.0], [59.0, 2471.5], [61.0, 2479.0], [60.0, 2438.0], [63.0, 2050.0], [62.0, 2055.0], [67.0, 2037.6666666666667], [64.0, 2164.0], [71.0, 2014.0], [70.0, 2034.3333333333333], [74.0, 2180.0], [73.0, 2032.0], [72.0, 2034.0], [78.0, 2001.0], [77.0, 2021.0], [83.0, 2023.0], [82.0, 2386.0], [81.0, 2013.0], [80.0, 2015.5], [87.0, 2033.0], [86.0, 2185.0], [85.0, 2190.5], [91.0, 2009.0], [90.0, 2010.0], [89.0, 1992.0], [88.0, 2013.0], [94.0, 2004.0], [93.0, 2152.0], [92.0, 2126.0], [99.0, 2183.0], [98.0, 2006.0], [97.0, 2191.0], [96.0, 2095.5], [103.0, 2151.0], [102.0, 2151.0], [101.0, 2095.0], [100.0, 2157.0], [107.0, 1991.0], [106.0, 2078.0], [105.0, 2086.0], [104.0, 2140.0], [111.0, 2097.0], [110.0, 2257.0], [109.0, 2258.0], [108.0, 2161.0], [115.0, 2398.0], [112.0, 1827.0], [119.0, 1797.0], [118.0, 2268.0], [117.0, 2704.0], [116.0, 2715.0], [123.0, 2229.5], [121.0, 1802.0], [120.0, 1791.0], [135.0, 2357.0], [133.0, 1798.5], [131.0, 2155.0], [130.0, 2226.0], [128.0, 1792.0], [143.0, 1796.0], [141.0, 1806.0], [140.0, 1817.0], [139.0, 1964.5], [137.0, 1958.0], [150.0, 1772.0], [149.0, 1778.0], [148.0, 1781.0], [147.0, 1777.0], [146.0, 1806.0], [145.0, 1799.0], [144.0, 1804.0], [159.0, 2040.0], [158.0, 1881.6666666666667], [155.0, 2356.0], [154.0, 1785.0], [153.0, 1789.0], [152.0, 1779.5], [167.0, 1742.0], [166.0, 1767.0], [165.0, 1792.0], [164.0, 1778.0], [162.0, 1791.0], [161.0, 1791.0], [160.0, 1808.0], [175.0, 1725.0], [174.0, 1719.0], [173.0, 1733.0], [172.0, 1850.0], [169.0, 2089.0], [168.0, 2045.0], [183.0, 1852.0], [182.0, 1840.0], [181.0, 2067.0], [180.0, 1867.0], [179.0, 2045.0], [178.0, 1713.0], [177.0, 2238.0], [176.0, 1860.0], [191.0, 1798.0], [190.0, 1806.0], [189.0, 2142.0], [188.0, 1851.0], [187.0, 1846.0], [186.0, 2124.0], [185.0, 1828.0], [184.0, 1739.0], [199.0, 1824.0], [198.0, 1814.5], [196.0, 1815.0], [194.0, 1797.0], [193.0, 1825.0], [192.0, 1801.0], [207.0, 2415.0], [205.0, 1813.5], [203.0, 1925.3333333333333], [200.0, 1778.0], [213.0, 1542.0], [212.0, 1800.5], [210.0, 1855.3333333333333], [209.0, 1625.0], [222.0, 1785.0], [221.0, 1997.5714285714284], [218.0, 1539.0], [230.0, 1728.0], [226.0, 1523.0], [224.0, 1700.0], [237.0, 1744.75], [233.0, 1869.6666666666667], [246.0, 1608.0], [244.0, 1535.0], [242.0, 1785.5], [240.0, 1800.6666666666667], [252.0, 1882.0], [251.0, 1539.0], [250.0, 1622.5], [266.0, 1514.0], [265.0, 1528.3333333333333], [262.0, 1512.0], [261.0, 1515.0], [260.0, 1679.5], [258.0, 1649.5], [256.0, 1677.25], [287.0, 1748.0], [286.0, 1590.0], [281.0, 1754.0], [280.0, 1482.0], [279.0, 1500.0], [278.0, 1619.25], [275.0, 1496.5], [272.0, 1648.3333333333335], [300.0, 1480.0], [302.0, 1998.0], [303.0, 1473.0], [301.0, 1460.0], [299.0, 1472.0], [297.0, 1461.5], [295.0, 1486.0], [294.0, 1648.75], [290.0, 2071.0], [289.0, 2097.0], [288.0, 1805.0], [319.0, 1404.5], [317.0, 1791.75], [309.0, 2009.0], [308.0, 1752.0], [307.0, 1810.6666666666667], [304.0, 1737.0], [332.0, 1865.0], [335.0, 1640.0], [334.0, 1617.4], [333.0, 1533.0], [327.0, 1673.0], [326.0, 2092.0], [324.0, 1718.0], [322.0, 1564.0], [320.0, 1403.0], [350.0, 1719.5], [349.0, 1658.0], [345.0, 1464.0], [343.0, 1607.5], [341.0, 1540.0], [340.0, 1753.4], [366.0, 1580.3333333333333], [363.0, 1563.0], [360.0, 1529.0], [359.0, 1493.0], [358.0, 1648.3333333333333], [355.0, 1788.0], [353.0, 1529.0], [352.0, 1764.0], [381.0, 1485.0], [379.0, 1679.0], [378.0, 1505.0], [377.0, 1509.0], [376.0, 1499.5], [375.0, 1592.5], [371.0, 1688.0], [369.0, 1664.3333333333333], [393.0, 1477.0], [391.0, 1705.0], [390.0, 1657.0], [389.0, 1616.0], [403.0, 1493.0], [414.0, 1761.0], [413.0, 1485.0], [412.0, 1486.0], [411.0, 1535.0], [407.0, 1715.0], [406.0, 1618.0], [402.0, 1492.0], [400.0, 1749.857142857143], [430.0, 1714.0], [428.0, 1694.0], [427.0, 1577.5], [426.0, 2065.0], [424.0, 1661.0], [423.0, 1902.5], [421.0, 1671.0], [420.0, 1559.5], [416.0, 1720.0], [435.0, 1468.0], [445.0, 1738.0], [446.0, 1818.0], [444.0, 1696.0], [443.0, 1474.0], [442.0, 1712.8333333333335], [436.0, 1485.0], [432.0, 1477.0], [434.0, 1458.0], [433.0, 1461.0], [462.0, 1890.0], [461.0, 1509.0], [458.0, 1588.3333333333333], [455.0, 1552.3333333333333], [454.0, 1647.0], [451.0, 1674.3333333333333], [448.0, 1668.5], [477.0, 1955.0], [479.0, 1751.0], [476.0, 1622.0], [474.0, 1616.0], [473.0, 1527.5], [472.0, 1429.0], [471.0, 1416.0], [469.0, 1463.75], [465.0, 1488.0], [495.0, 1467.5], [493.0, 1467.0], [492.0, 1650.0], [490.0, 1387.0], [489.0, 1626.5], [487.0, 1632.0], [486.0, 1613.0], [485.0, 1488.5], [498.0, 1592.0], [509.0, 1634.0], [510.0, 1649.0], [508.0, 1572.0], [506.0, 1658.25], [503.0, 1585.0], [501.0, 1687.0], [500.0, 1656.0], [497.0, 1344.0], [496.0, 1389.0], [540.0, 1383.3333333333333], [537.0, 1521.75], [518.0, 1425.5], [516.0, 1434.3333333333333], [513.0, 1348.0], [512.0, 1458.0], [534.0, 1328.5], [531.0, 1303.0], [530.0, 1617.0], [528.0, 1529.0], [527.0, 1442.5], [526.0, 1550.0], [524.0, 1440.5], [522.0, 1308.5], [520.0, 1425.5], [572.0, 1495.0], [575.0, 1427.0], [571.0, 1435.2], [550.0, 1303.0], [548.0, 1307.0], [547.0, 1302.0], [546.0, 1339.0], [545.0, 1486.6], [566.0, 1501.3333333333333], [563.0, 1516.0], [562.0, 1393.0], [558.0, 1429.5], [556.0, 1295.5], [554.0, 1306.5], [552.0, 1287.0], [604.0, 1590.0], [605.0, 1486.0], [603.0, 1309.0], [602.0, 1316.0], [600.0, 1326.0], [583.0, 1419.0000000000002], [580.0, 1324.0], [598.0, 1329.5], [596.0, 1398.0], [594.0, 1376.6], [589.0, 1265.0], [588.0, 1408.5], [586.0, 1309.0], [585.0, 1276.0], [584.0, 1605.0], [638.0, 1365.0], [639.0, 1253.0], [635.0, 1491.0], [633.0, 1495.5], [631.0, 1407.0], [629.0, 1356.5], [626.0, 1383.0], [624.0, 1481.0], [622.0, 1317.0], [610.0, 1358.6666666666667], [609.0, 1312.5], [621.0, 1410.6666666666667], [619.0, 1259.0], [617.0, 1493.6], [616.0, 1284.5], [669.0, 1431.0], [671.0, 1248.0], [667.0, 1258.5], [665.0, 1496.0], [664.0, 1512.0], [645.0, 1524.0], [644.0, 1370.5], [640.0, 1284.0], [663.0, 1300.25], [659.0, 1242.0], [658.0, 1358.2], [653.0, 1347.3333333333333], [650.0, 1345.0], [648.0, 1322.3333333333333], [701.0, 1194.0], [703.0, 1320.0], [690.0, 1199.0], [689.0, 1214.0], [700.0, 1144.0], [699.0, 1156.0], [698.0, 1372.0], [697.0, 1172.0], [687.0, 1448.0], [672.0, 1473.0], [675.0, 1472.5], [674.0, 1291.0], [679.0, 1232.6666666666667], [676.0, 1456.0], [686.0, 1412.0], [683.0, 1195.0], [682.0, 1216.0], [680.0, 1449.0], [694.0, 1160.0], [693.0, 1167.0], [692.0, 1195.0], [691.0, 1391.0], [729.0, 1298.0], [734.0, 1273.5], [735.0, 1373.0], [720.0, 1416.0], [732.0, 1183.0], [731.0, 1139.0], [730.0, 1104.0], [719.0, 1360.0], [704.0, 1356.0], [706.0, 1359.0], [705.0, 1395.0], [709.0, 1354.0], [708.0, 1241.5], [711.0, 1308.0], [710.0, 1301.0], [718.0, 1127.0], [717.0, 1180.0], [715.0, 1395.0], [713.0, 1371.0], [712.0, 1140.0], [726.0, 1561.0], [725.0, 1296.0], [723.0, 1330.0], [721.0, 1438.0], [751.0, 1083.0], [764.0, 1242.5], [766.0, 1263.5], [760.0, 1163.3333333333333], [742.0, 1341.0], [741.0, 1215.0], [739.0, 1216.3333333333333], [736.0, 1139.0], [757.0, 1202.6], [752.0, 1333.0], [750.0, 1118.0], [749.0, 1207.5], [747.0, 1292.0], [746.0, 1336.0], [745.0, 1364.0], [744.0, 1224.0], [784.0, 955.0], [770.0, 1074.0], [769.0, 1295.5], [771.0, 1298.0], [775.0, 1119.0], [772.0, 1093.0], [783.0, 1213.5], [781.0, 1088.0], [780.0, 1197.0], [778.0, 1219.5], [776.0, 1161.3333333333333], [788.0, 800.0], [787.0, 1189.5], [785.0, 1266.0], [791.0, 975.5], [790.0, 1071.6666666666667], [793.0, 796.0], [797.0, 1129.8333333333333], [796.0, 1122.0], [789.0, 1256.0], [829.0, 1179.0], [807.0, 1055.6666666666667], [808.0, 934.0], [809.0, 1320.0], [812.0, 1224.0], [811.0, 1039.0], [814.0, 939.0], [815.0, 889.0], [800.0, 1139.0], [802.0, 1090.0], [801.0, 1091.0], [805.0, 1251.0], [804.0, 1085.5], [819.0, 921.75], [818.0, 1239.0], [817.0, 1225.0], [816.0, 1132.0], [821.0, 1079.0], [820.0, 1111.0], [823.0, 1046.0], [822.0, 1269.0], [824.0, 907.0], [825.0, 891.0], [827.0, 890.0], [826.0, 1175.5], [830.0, 1090.0], [831.0, 1289.0], [858.0, 1048.0], [836.0, 1000.0], [842.0, 1085.0], [841.0, 1059.0], [843.0, 1033.0], [845.0, 1070.0], [844.0, 1004.0], [847.0, 1274.0], [832.0, 1064.0], [834.0, 1025.0], [833.0, 1058.0], [846.0, 1011.0], [851.0, 1048.6], [854.0, 861.0], [852.0, 1004.0], [855.0, 1065.0], [857.0, 918.0], [856.0, 997.0], [839.0, 1225.0], [838.0, 1124.6666666666667], [863.0, 1155.0], [862.0, 985.0], [859.0, 1149.0], [865.0, 920.0], [877.0, 916.0], [873.0, 893.3333333333334], [876.0, 884.0], [874.0, 1063.6], [879.0, 873.0], [864.0, 975.0], [880.0, 917.0], [881.0, 1160.0], [884.0, 1113.3333333333333], [883.0, 1091.0], [887.0, 1093.0], [885.0, 1123.3333333333333], [895.0, 1010.0], [893.0, 1103.0], [892.0, 935.0], [890.0, 946.5], [889.0, 1146.0], [888.0, 957.0], [870.0, 1104.0], [868.0, 1102.0], [867.0, 1012.3333333333334], [891.0, 910.5], [900.0, 891.8333333333333], [899.0, 954.6], [897.0, 903.0], [901.0, 903.5], [902.0, 957.0], [905.0, 892.0], [904.0, 914.0], [906.0, 896.0], [907.0, 917.5], [909.0, 929.6666666666666], [910.0, 923.0], [911.0, 899.0], [920.0, 895.25], [919.0, 908.5], [918.0, 920.75], [922.0, 896.5], [921.0, 885.0], [923.0, 962.0], [925.0, 936.0], [924.0, 908.0], [927.0, 930.0], [913.0, 876.0], [912.0, 948.0], [915.0, 891.0], [914.0, 942.0], [926.0, 915.0], [929.0, 876.0], [928.0, 914.5], [932.0, 884.0], [931.0, 896.0], [930.0, 884.5], [1.0, 4445.0]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[494.5670000000002, 1535.5890000000002]], "isOverall": false, "label": "read 1k-Aggregated", "isController": false}, {"data": [[1.0, 392.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.0, 392.0]], "isOverall": false, "label": "cleanup-Aggregated", "isController": false}, {"data": [[2.0, 1031.0], [3.0, 1047.0], [4.0, 989.0], [5.0, 1060.0], [6.0, 844.0], [7.0, 1010.0], [8.0, 1047.0], [9.0, 842.0], [10.0, 806.0], [11.0, 967.0], [12.0, 833.0], [13.0, 778.0], [14.0, 797.0], [15.0, 799.0], [16.0, 847.0], [17.0, 798.0], [18.0, 793.0], [19.0, 832.0], [20.0, 783.0], [21.0, 950.0], [22.0, 779.0], [23.0, 820.0], [24.0, 791.0], [25.0, 836.0], [27.0, 794.5], [28.0, 781.0], [29.0, 843.0], [30.0, 783.0], [31.0, 788.0], [33.0, 989.0], [32.0, 797.0], [35.0, 812.0], [34.0, 780.0], [37.0, 833.0], [36.0, 785.0], [39.0, 963.0], [38.0, 818.0], [41.0, 803.5], [43.0, 770.0], [42.0, 812.0], [45.0, 850.0], [44.0, 972.0], [47.0, 804.0], [46.0, 811.0], [49.0, 784.0], [48.0, 775.0], [51.0, 879.0], [50.0, 836.0], [53.0, 763.0], [52.0, 765.0], [55.0, 803.0], [54.0, 778.0], [57.0, 992.0], [56.0, 951.0], [59.0, 789.0], [58.0, 832.0], [61.0, 987.0], [60.0, 798.0], [63.0, 826.0], [62.0, 951.0], [67.0, 791.0], [66.0, 821.0], [65.0, 832.0], [64.0, 799.0], [70.0, 1018.0], [69.0, 964.0], [68.0, 834.0], [75.0, 1028.0], [74.0, 774.0], [73.0, 936.6666666666666], [79.0, 779.5], [78.0, 785.0], [77.0, 780.0], [76.0, 777.0], [80.0, 792.0], [81.0, 846.25], [83.0, 811.3333333333334], [82.0, 802.0], [85.0, 813.4], [86.0, 764.0], [84.0, 770.0], [1.0, 1049.0]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[48.93999999999997, 845.7800000000001]], "isOverall": false, "label": "read 100-Aggregated", "isController": false}, {"data": [[2.0, 772.0], [3.0, 1268.0], [4.0, 762.0], [5.0, 1501.0], [6.0, 378.0], [7.0, 583.0], [8.0, 1440.0], [9.0, 676.0], [10.0, 1343.0], [11.0, 1396.0], [12.0, 1625.0], [13.0, 1033.5], [14.0, 1161.0], [15.0, 1662.0], [16.0, 1287.0], [17.0, 1276.0], [18.0, 1558.0], [19.0, 1379.5], [20.0, 650.0], [21.0, 1096.5], [22.0, 1370.0], [24.0, 802.0], [25.0, 1444.0], [26.0, 953.0], [27.0, 1426.0], [28.0, 549.0], [29.0, 1344.0], [30.0, 578.0], [32.0, 976.0], [35.0, 2493.0], [34.0, 1186.5], [37.0, 2016.0], [36.0, 1157.0], [39.0, 1253.6], [38.0, 971.0], [41.0, 332.0], [40.0, 475.0], [43.0, 1445.0], [42.0, 1372.0], [45.0, 1255.0], [44.0, 532.5], [47.0, 1477.0], [46.0, 686.5], [49.0, 907.6666666666666], [48.0, 608.5], [51.0, 1218.0], [50.0, 902.0], [53.0, 582.0], [52.0, 1361.3333333333333], [55.0, 1580.0], [54.0, 1425.3333333333333], [57.0, 554.0], [56.0, 1815.0], [59.0, 1377.5], [58.0, 632.0], [61.0, 439.0], [60.0, 835.0], [63.0, 719.5], [62.0, 457.0], [67.0, 386.0], [66.0, 885.0], [65.0, 1146.3333333333333], [64.0, 936.0], [71.0, 1383.5], [70.0, 827.6666666666666], [69.0, 1419.0], [68.0, 1151.0], [75.0, 871.0], [74.0, 464.0], [73.0, 626.5], [72.0, 902.5], [78.0, 1006.5], [76.0, 1515.0], [83.0, 1216.0], [82.0, 994.2], [81.0, 996.25], [80.0, 832.0], [87.0, 788.0], [86.0, 1006.7142857142858], [85.0, 973.8], [84.0, 1041.0], [91.0, 1548.4615384615386], [90.0, 1429.5], [89.0, 1951.5], [88.0, 1398.0], [95.0, 1001.3333333333334], [94.0, 1251.3124999999998], [93.0, 1086.6], [92.0, 1415.8], [99.0, 833.6], [98.0, 1183.875], [97.0, 1100.5], [96.0, 689.375], [100.0, 1204.4221038615192], [1.0, 1328.0]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[91.87900000000003, 1180.0540000000015]], "isOverall": false, "label": "write 1k-Aggregated", "isController": false}, {"data": [[2.0, 385.0], [3.0, 1447.0], [4.0, 1543.0], [5.0, 486.0], [6.0, 1127.1666666666667], [7.0, 1165.0], [8.0, 1216.25], [9.0, 847.0], [10.0, 737.0], [11.0, 810.5], [12.0, 1008.25], [13.0, 472.0], [14.0, 871.5], [15.0, 929.0], [16.0, 1142.6666666666667], [17.0, 733.0], [18.0, 1050.0], [20.0, 535.0], [21.0, 712.3333333333333], [22.0, 943.0], [23.0, 419.5], [24.0, 917.3333333333334], [25.0, 977.5], [26.0, 733.0], [27.0, 1187.0], [28.0, 1135.0], [29.0, 862.4000000000001], [30.0, 1224.0], [31.0, 812.0], [33.0, 1064.0], [32.0, 1057.6666666666667], [35.0, 559.6666666666666], [34.0, 756.0], [37.0, 1503.5], [36.0, 1253.0], [39.0, 1623.0], [38.0, 374.0], [40.0, 470.5], [43.0, 1580.0], [42.0, 668.75], [45.0, 727.0], [44.0, 1038.2], [47.0, 901.3333333333333], [46.0, 988.1111111111111], [49.0, 666.0], [48.0, 1112.0], [51.0, 686.0], [50.0, 774.0], [53.0, 957.5], [52.0, 897.0], [55.0, 1049.6666666666665], [54.0, 1212.5], [57.0, 973.3333333333334], [56.0, 1107.0], [59.0, 837.8571428571429], [58.0, 1118.75], [61.0, 1066.0], [60.0, 1537.0], [63.0, 831.4444444444446], [62.0, 1301.0], [67.0, 993.6153846153846], [66.0, 1334.0], [65.0, 977.0], [64.0, 1479.5], [71.0, 988.3333333333334], [70.0, 925.75], [69.0, 743.7333333333333], [68.0, 1780.0], [75.0, 800.1333333333333], [74.0, 967.0], [73.0, 1184.0], [72.0, 901.0], [79.0, 852.8], [78.0, 1003.5], [77.0, 1132.522727272727], [76.0, 1001.6785714285713], [83.0, 335.0], [82.0, 1152.0909090909092], [81.0, 779.6875], [80.0, 1076.3333333333333], [86.0, 1383.0909090909092], [85.0, 1094.4117647058822], [84.0, 700.0], [91.0, 1029.4], [90.0, 1304.2222222222224], [89.0, 1393.2857142857144], [88.0, 1176.717948717949], [95.0, 1195.3333333333335], [94.0, 1183.7272727272727], [93.0, 1365.1842105263158], [92.0, 1894.0], [99.0, 1100.3787878787878], [98.0, 1028.4957264957263], [97.0, 1305.7083333333333], [96.0, 1422.2666666666664], [100.0, 1069.6630196936533], [1.0, 947.0]], "isOverall": false, "label": "write 10k", "isController": false}, {"data": [[97.84579999999984, 1070.8041999999978]], "isOverall": false, "label": "write 10k-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 932.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14234.8, "minX": 1.58814984E12, "maxY": 636496.2833333333, "series": [{"data": [[1.58814996E12, 155475.71666666667], [1.5881499E12, 14234.8], [1.58814984E12, 23433.083333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58814996E12, 183041.08333333334], [1.5881499E12, 636496.2833333333], [1.58814984E12, 435823.4166666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58814996E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 392.0, "minX": 1.58814984E12, "maxY": 1535.5890000000002, "series": [{"data": [[1.58814996E12, 1535.5890000000002]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[1.58814996E12, 392.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58814984E12, 845.7800000000001]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[1.58814984E12, 1180.0540000000015]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[1.58814996E12, 1076.4328358208948], [1.5881499E12, 1064.6746752091099], [1.58814984E12, 1079.877464788734]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58814996E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58814984E12, "maxY": 1390.1000000000004, "series": [{"data": [[1.58814996E12, 1390.1000000000004]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[1.58814996E12, 390.0]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58814984E12, 802.4999999999999]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[1.58814984E12, 0.0]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[1.58814996E12, 0.0], [1.5881499E12, 0.0], [1.58814984E12, 0.0]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58814996E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 263.02989855846266, "minX": 1.58814984E12, "maxY": 992.0350000000007, "series": [{"data": [[1.58814996E12, 992.0350000000007]], "isOverall": false, "label": "read 1k", "isController": false}, {"data": [[1.58814996E12, 293.1666666666667]], "isOverall": false, "label": "cleanup", "isController": false}, {"data": [[1.58814984E12, 591.7600000000001]], "isOverall": false, "label": "read 100", "isController": false}, {"data": [[1.58814984E12, 375.21100000000024]], "isOverall": false, "label": "write 1k", "isController": false}, {"data": [[1.58814996E12, 277.85463984425655], [1.5881499E12, 263.02989855846266], [1.58814984E12, 270.30669014084503]], "isOverall": false, "label": "write 10k", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58814996E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 308.0, "minX": 1.58814984E12, "maxY": 4445.0, "series": [{"data": [[1.58814996E12, 4445.0], [1.5881499E12, 3483.0], [1.58814984E12, 3141.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58814996E12, 317.0], [1.5881499E12, 308.0], [1.58814984E12, 312.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58814996E12, 1885.2000000000007], [1.5881499E12, 1680.0], [1.58814984E12, 1772.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58814996E12, 2614.16], [1.5881499E12, 2278.0], [1.58814984E12, 2394.1800000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58814996E12, 2123.000000000001], [1.5881499E12, 1852.0], [1.58814984E12, 1966.9499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58814996E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 389.5, "minX": 2.0, "maxY": 3929.0, "series": [{"data": [[2.0, 1026.5], [4.0, 982.0], [6.0, 1447.0], [8.0, 2120.5], [9.0, 3929.0], [13.0, 1268.0], [16.0, 907.0], [17.0, 730.0], [19.0, 2071.0], [28.0, 720.5], [29.0, 1282.0], [38.0, 1196.0], [45.0, 799.0], [49.0, 778.0], [57.0, 1339.0], [59.0, 1204.0], [60.0, 1392.5], [61.0, 1227.0], [65.0, 1161.0], [66.0, 988.0], [71.0, 1454.0], [68.0, 1261.0], [70.0, 1186.0], [69.0, 1275.0], [74.0, 1292.0], [73.0, 891.5], [75.0, 1166.5], [76.0, 696.0], [78.0, 1193.5], [79.0, 1072.0], [77.0, 1179.5], [81.0, 1107.0], [83.0, 818.0], [82.0, 1250.5], [85.0, 1209.0], [84.0, 825.5], [86.0, 1098.0], [88.0, 901.5], [91.0, 815.0], [89.0, 1112.5], [90.0, 1158.0], [94.0, 1209.0], [95.0, 1128.5], [92.0, 917.0], [93.0, 1206.5], [97.0, 990.0], [98.0, 1214.5], [99.0, 1202.0], [96.0, 1188.0], [102.0, 1147.5], [100.0, 936.5], [103.0, 984.0], [101.0, 989.5], [106.0, 827.0], [105.0, 975.0], [104.0, 1115.0], [107.0, 922.5], [111.0, 1025.0], [110.0, 1095.0], [108.0, 902.5], [112.0, 928.0], [113.0, 799.0], [119.0, 1358.5], [116.0, 1031.0], [117.0, 902.0], [118.0, 1098.5], [120.0, 788.5], [123.0, 918.0], [124.0, 953.0], [129.0, 1094.0], [136.0, 612.0], [185.0, 931.0], [323.0, 1831.0], [475.0, 1424.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 389.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 475.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 3739.0, "series": [{"data": [[2.0, 0.0], [4.0, 0.0], [6.0, 0.0], [8.0, 1048.5], [9.0, 3739.0], [13.0, 0.0], [16.0, 832.5], [17.0, 0.0], [19.0, 0.0], [28.0, 0.0], [29.0, 0.0], [38.0, 0.0], [45.0, 0.0], [49.0, 0.0], [57.0, 0.0], [59.0, 0.0], [60.0, 0.0], [61.0, 0.0], [65.0, 0.0], [66.0, 0.0], [71.0, 0.0], [68.0, 0.0], [70.0, 0.0], [69.0, 0.0], [74.0, 0.0], [73.0, 0.0], [75.0, 0.0], [76.0, 0.0], [78.0, 0.0], [79.0, 0.0], [77.0, 0.0], [81.0, 0.0], [83.0, 0.0], [82.0, 0.0], [85.0, 0.0], [84.0, 381.0], [86.0, 0.0], [88.0, 0.0], [91.0, 0.0], [89.0, 0.0], [90.0, 0.0], [94.0, 0.0], [95.0, 0.0], [92.0, 0.0], [93.0, 0.0], [97.0, 0.0], [98.0, 0.0], [99.0, 0.0], [96.0, 0.0], [102.0, 0.0], [100.0, 0.0], [103.0, 0.0], [101.0, 0.0], [106.0, 0.0], [105.0, 0.0], [104.0, 0.0], [107.0, 0.0], [111.0, 0.0], [110.0, 0.0], [108.0, 0.0], [112.0, 0.0], [113.0, 0.0], [119.0, 0.0], [116.0, 0.0], [117.0, 0.0], [118.0, 0.0], [120.0, 0.0], [123.0, 0.0], [124.0, 0.0], [129.0, 0.0], [136.0, 0.0], [185.0, 907.0], [323.0, 1546.0], [475.0, 1293.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 384.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 475.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.78333333333333, "minX": 1.58814984E12, "maxY": 93.65, "series": [{"data": [[1.58814996E12, 40.78333333333333], [1.5881499E12, 93.65], [1.58814984E12, 67.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58814996E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.58814984E12, "maxY": 93.65, "series": [{"data": [[1.58814996E12, 16.666666666666668], [1.58814984E12, 1.6666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58814996E12, 0.05]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.58814996E12, 25.683333333333334], [1.5881499E12, 93.65], [1.58814984E12, 64.0]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.58814996E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.nio.charset.IllegalCharsetNameException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58814996E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.58814984E12, "maxY": 93.65, "series": [{"data": [[1.58814984E12, 1.6666666666666667]], "isOverall": false, "label": "read 100-success", "isController": false}, {"data": [[1.58814996E12, 0.1]], "isOverall": false, "label": "cleanup-failure", "isController": false}, {"data": [[1.58814996E12, 16.666666666666668]], "isOverall": false, "label": "read 1k-success", "isController": false}, {"data": [[1.58814984E12, 16.666666666666668]], "isOverall": false, "label": "write 1k-success", "isController": false}, {"data": [[1.58814996E12, 25.683333333333334], [1.5881499E12, 93.65], [1.58814984E12, 47.333333333333336]], "isOverall": false, "label": "write 10k-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58814996E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.58814984E12, "maxY": 93.65, "series": [{"data": [[1.58814996E12, 42.35], [1.5881499E12, 93.65], [1.58814984E12, 65.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58814996E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58814996E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

